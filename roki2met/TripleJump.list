//====================================================================
//      SvCompiler V6.06
//By A.Sibilev
//====================================================================
//cblock

;sfVpuVersion <int()>
;sfCreateTask <int(,*<void()>,int)>
;sfLog <void(,cstring,int,int,int)>
;sfLogOpen <void(,cstring)>
;sfLogClose <void()>
;sfWaitFrameOut <void(,int)>
;sfIsFrameOut <int(,int)>
;sfWaitNextFrame <void()>
;sfSlotIndex <int(,cstring)>
;sfAbs <int(,int)>
;sfIMin <int(,int,int)>
;sfIMax <int(,int,int)>
;sfUMin <int(,int,int)>
;sfUMax <int(,int,int)>
;sfILimit <int(,int,int,int)>
;sfStop <void()>
;sfStartSlot <void(,int)>
;sfBip <void(,int,int)>
;sfFreeGroup <void(,int)>
;sfPoseGroup <void(,int,int,int)>
;sfPoseGroupDelay <void(,int,int,int,int)>
;sfPoseCorrect <void(,int,int)>
;sfQueueGroup <void(,int,int,int)>
;sfPoseIdx <void(,int,int,int)>
;sfPoseGroupLin <void(,int,int,int)>
;sfStrainGroup <void(,int)>
;sfPlaySamples <void(,int,*cblock,int)>
;sfAccumSetup1 <void(,*int)>
;sfAccumSetup2 <void(,*int,*int)>
;sfAccumSetup3 <void(,*int,*int,*int)>
;sfAccumSetup4 <void(,*int,*int,*int,*int)>
;sfAccumTrigger <void()>
;sfAccumReset <void()>
;sfMathAcos <int(,int,int)>
;sfMathSqrti <int(,int)>
;sfMathAngleOfTriangle <int(,int,int,int)>
;sfMathAngleOfKnee <int(,int,int,int)>
;sfMathCathetOfSquareTriangle <int(,int,int)>
;sfMathHypotenuseOfSquareTriangle <int(,int,int)>
;sfMathTableSin <int(,int,int)>
;sfHumoModelSetup <void()>
;sfHumoModelFootAtFloor <void(,int,int,int)>
;sfHumoModelFootPush <void(,int,int,int)>
;sfIndexOfMask <int(,int)>
;sfQueueIdxAppend <int(,int,int,int)>
;sfQueueIdxOffsets <int(,int,int,*cblock,int)>
;sfQueueIdxSinMove <int(,int,int,int,int)>
;sfQueueIdxLast <int(,int)>
;sfQueueIdxCount <int(,int)>
;sfQueueMax <int()>
;sfIkSetup <void()>
;sfIkAngle <void(,float,float,float,float,float,float,float)>
;sfMathCos <float(,float)>
;sfMathSin <float(,float)>
;sfQuaternionToEuler <void(,float,float,float,float)>
;sfQuaternionToEulerImu <void()>
;sfFMathACos <float(,float)>
;sfFMathASin <float(,float)>
;sfFMathATan <float(,float)>
;sfFMathATan2 <float(,float,float)>
;sfFMathCos <float(,float)>
;sfFMathSin <float(,float)>
;sfFMathTan <float(,float)>
;sfFMathCosh <float(,float)>
;sfFMathSinh <float(,float)>
;sfFMathTanh <float(,float)>
;sfFMathExp <float(,float)>
;sfFMathFrExp <float(,float,*int)>
;sfFMathLdExp <float(,float,int)>
;sfFMathLog <float(,float)>
;sfFMathLog10 <float(,float)>
;sfFMathModf <float(,float,*float)>
;sfFMathPow <float(,float,float)>
;sfFMathSqrt <float(,float)>
;sfFMathCeil <float(,float)>
;sfFMathFAbs <float(,float)>
;sfFMathFloor <float(,float)>
;sfFMathFMod <float(,float,float)>
;sfWaitFrame <void(,int)>
[3:348] ;sfWaitFrameOut( frame + svFrameCount );
VBC5_PUSH_CONST 17 | 0x80000000 //import func index sfWaitFrameOut
VBC2_PUSH_LOCAL 2 //frame
VBC3_PUSH_GLOBAL 1 //svFrameCount
VBC1_ADD
VBC1_CALL1
VBC1_STACK_UP2//remove result, call address and params
[2:10] ;
VBC1_RETURN
;main <void()>
VBC2_STACK -5//local vars 5
[1:12] ;
[1:12] ;int frame3 = 25; 
VBC2_PUSH_B_OFFSET -1 //frame3
VBC2_PUSH_CONST 25 
VBC1_POP
[1:13] ;
[1:13] ;int frame4 = 25; 
VBC2_PUSH_B_OFFSET -2 //frame4
VBC2_PUSH_CONST 25 
VBC1_POP
[1:14] ;
[1:14] ;int frame5 = 25;
VBC2_PUSH_B_OFFSET -3 //frame5
VBC2_PUSH_CONST 25 
VBC1_POP
[1:15] ;
[1:15] ;int frame6 = 25;  
VBC2_PUSH_B_OFFSET -4 //frame6
VBC2_PUSH_CONST 25 
VBC1_POP
[1:16] ;
[1:16] ;int frame7 = 50;
VBC2_PUSH_B_OFFSET -5 //frame7
VBC2_PUSH_CONST 50 
VBC1_POP
[1:19] ;sfPoseGroup( (8  | 4 ), -800, 200 );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC2_PUSH_CONST 12 
VBC3_PUSH_CONST -800 // -
VBC3_PUSH_CONST 200 
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:20] ;sfPoseGroup( (512  | 256 ), 3000, 200);
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC3_PUSH_CONST 768 
VBC3_PUSH_CONST 3000 
VBC3_PUSH_CONST 200 
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:22] ;sfPoseGroup( (524288  | 262144 ), 3000, 200 );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC4_PUSH_CONST 786432 
VBC3_PUSH_CONST 3000 
VBC3_PUSH_CONST 200 
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:23] ;sfPoseGroup( (32768  | 16384 ), 3300, 200 );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC4_PUSH_CONST 49152 
VBC3_PUSH_CONST 3300 
VBC3_PUSH_CONST 200 
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:24] ;sfPoseGroup( (131072  | 65536  | 134217728  | 67108864 ), 3100, 200 );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC5_PUSH_CONST 201523200 
VBC3_PUSH_CONST 3100 
VBC3_PUSH_CONST 200 
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:25] ;sfPoseGroup( (2097152  | 1048576 ), 0, 200);
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC4_PUSH_CONST 3145728 
VBC1_PUSH_0 
VBC3_PUSH_CONST 200 
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:27] ;sfWaitFrame(200);
VBC2_PUSH_CONST 56  //func address sfWaitFrame
VBC3_PUSH_CONST 200 
VBC1_CALL1
VBC1_STACK_UP2//remove result, call address and params
[1:31] ;sfPoseGroup( (8  | 4 ), 2000, 200 );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC2_PUSH_CONST 12 
VBC3_PUSH_CONST 2000 
VBC3_PUSH_CONST 200 
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:32] ;sfPoseGroup( (512  | 256 ), 1000, 200);
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC3_PUSH_CONST 768 
VBC3_PUSH_CONST 1000 
VBC3_PUSH_CONST 200 
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:34] ;sfPoseGroup( (524288  | 262144 ), 3200, 200 );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC4_PUSH_CONST 786432 
VBC3_PUSH_CONST 3200 
VBC3_PUSH_CONST 200 
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:35] ;sfPoseGroup( (32768  | 16384 ), 3500, 200 );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC4_PUSH_CONST 49152 
VBC3_PUSH_CONST 3500 
VBC3_PUSH_CONST 200 
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:36] ;sfPoseGroup( (131072  | 65536  | 134217728  | 67108864 ), 3100, 200 );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC5_PUSH_CONST 201523200 
VBC3_PUSH_CONST 3100 
VBC3_PUSH_CONST 200 
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:37] ;sfPoseGroup( (2097152  | 1048576 ), 0, 200);
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC4_PUSH_CONST 3145728 
VBC1_PUSH_0 
VBC3_PUSH_CONST 200 
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:39] ;sfWaitFrame(200);
VBC2_PUSH_CONST 56  //func address sfWaitFrame
VBC3_PUSH_CONST 200 
VBC1_CALL1
VBC1_STACK_UP2//remove result, call address and params
[1:43] ;sfPoseGroup( (8  | 4 ), 7500, frame3 );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC2_PUSH_CONST 12 
VBC3_PUSH_CONST 7500 
VBC2_PUSH_LOCAL -1 //frame3
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:44] ;sfPoseGroup( (512  | 256 ), 3000, frame3 );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC3_PUSH_CONST 768 
VBC3_PUSH_CONST 3000 
VBC2_PUSH_LOCAL -1 //frame3
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:46] ;sfPoseGroup( (524288  | 262144 ), 1000, frame3 );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC4_PUSH_CONST 786432 
VBC3_PUSH_CONST 1000 
VBC2_PUSH_LOCAL -1 //frame3
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:47] ;sfPoseGroup( (32768  | 16384 ), 500, frame3 );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC4_PUSH_CONST 49152 
VBC3_PUSH_CONST 500 
VBC2_PUSH_LOCAL -1 //frame3
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:48] ;sfPoseGroup( (131072  | 65536  | 134217728  | 67108864 ), 0, frame3 );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC5_PUSH_CONST 201523200 
VBC1_PUSH_0 
VBC2_PUSH_LOCAL -1 //frame3
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:49] ;sfPoseGroup( (2097152  | 1048576 ), 1000, frame3 );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC4_PUSH_CONST 3145728 
VBC3_PUSH_CONST 1000 
VBC2_PUSH_LOCAL -1 //frame3
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:51] ;sfWaitFrame(frame3);
VBC2_PUSH_CONST 56  //func address sfWaitFrame
VBC2_PUSH_LOCAL -1 //frame3
VBC1_CALL1
VBC1_STACK_UP2//remove result, call address and params
[1:55] ;sfPoseGroup( (8  | 4 ), -800, frame4 );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC2_PUSH_CONST 12 
VBC3_PUSH_CONST -800 // -
VBC2_PUSH_LOCAL -2 //frame4
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:56] ;sfPoseGroup( (512  | 256 ), 4000, frame4 );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC3_PUSH_CONST 768 
VBC3_PUSH_CONST 4000 
VBC2_PUSH_LOCAL -2 //frame4
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:58] ;sfPoseGroup( (524288  | 262144 ), 2800, frame4 );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC4_PUSH_CONST 786432 
VBC3_PUSH_CONST 2800 
VBC2_PUSH_LOCAL -2 //frame4
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:59] ;sfPoseGroup( (32768  | 16384 ), 3200, frame4 );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC4_PUSH_CONST 49152 
VBC3_PUSH_CONST 3200 
VBC2_PUSH_LOCAL -2 //frame4
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:60] ;sfPoseGroup( (131072  | 65536  | 134217728  | 67108864 ), 3200, frame4 );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC5_PUSH_CONST 201523200 
VBC3_PUSH_CONST 3200 
VBC2_PUSH_LOCAL -2 //frame4
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:61] ;sfPoseGroup( (2097152  | 1048576 ), 0, frame4 );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC4_PUSH_CONST 3145728 
VBC1_PUSH_0 
VBC2_PUSH_LOCAL -2 //frame4
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:63] ;sfWaitFrame(frame4);
VBC2_PUSH_CONST 56  //func address sfWaitFrame
VBC2_PUSH_LOCAL -2 //frame4
VBC1_CALL1
VBC1_STACK_UP2//remove result, call address and params
[1:67] ;sfPoseGroup( (8  | 4 ), -800, frame5 );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC2_PUSH_CONST 12 
VBC3_PUSH_CONST -800 // -
VBC2_PUSH_LOCAL -3 //frame5
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:68] ;sfPoseGroup( (512  | 256 ), 4000, frame5 );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC3_PUSH_CONST 768 
VBC3_PUSH_CONST 4000 
VBC2_PUSH_LOCAL -3 //frame5
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:70] ;sfPoseGroup( (524288  | 262144 ), 2800, frame5 );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC4_PUSH_CONST 786432 
VBC3_PUSH_CONST 2800 
VBC2_PUSH_LOCAL -3 //frame5
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:71] ;sfPoseGroup( (32768  | 16384 ), 4200, frame5 );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC4_PUSH_CONST 49152 
VBC3_PUSH_CONST 4200 
VBC2_PUSH_LOCAL -3 //frame5
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:72] ;sfPoseGroup( (131072  | 65536  | 134217728  | 67108864 ), 3100, frame5 );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC5_PUSH_CONST 201523200 
VBC3_PUSH_CONST 3100 
VBC2_PUSH_LOCAL -3 //frame5
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:73] ;sfPoseGroup( (2097152  | 1048576 ), 0, frame5 );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC4_PUSH_CONST 3145728 
VBC1_PUSH_0 
VBC2_PUSH_LOCAL -3 //frame5
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:75] ;sfWaitFrame(frame5);
VBC2_PUSH_CONST 56  //func address sfWaitFrame
VBC2_PUSH_LOCAL -3 //frame5
VBC1_CALL1
VBC1_STACK_UP2//remove result, call address and params
[1:99] ;sfStop();
VBC5_PUSH_CONST 41 | 0x80000000 //import func index sfStop
VBC1_CALL0
VBC1_STACK_UP1//remove result, call address and params
[1:100] ;
VBC1_RETURN
//Init table
//Variables
svFrameCount : 1
svImuAccX : 1000
svImuAccY : 1001
svImuAccZ : 1002
svImuAccRawX : 1003
svImuAccRawY : 1004
svImuAccRawZ : 1005
svImuGyroX : 1006
svImuGyroY : 1007
svImuGyroZ : 1008
svImuGyroRawX : 1009
svImuGyroRawY : 1010
svImuGyroRawZ : 1011
svImuQuaterX : 1012
svImuQuaterY : 1013
svImuQuaterZ : 1014
svImuQuaterW : 1015
svImuQuaterAcc : 1016
svImuAccSlowX : 1017
svImuAccSlowY : 1018
svImuAccSlowZ : 1019
svAdc : 1020
svButtonLeft : 1021
svButtonRight : 1022
svHeadControlMask : 1023
svEulerYaw F: 1024
svEulerPitch F: 1025
svEulerRoll F: 1026
svRemoteStatus : 1190
svRemoteButton : 1191
svRemoteLeftJoystick : 1192
svRemoteLeftJoystickX : 1193
svRemoteLeftJoystickY : 1194
svRemoteRightJoystick : 1195
svRemoteRightJoystickX : 1196
svRemoteRightJoystickY : 1197
svHumoModelDistPelvic : 1204
svHumoModelLengthPelvicHip : 1205
svHumoModelLengthHipHip : 1206
svHumoModelLengthHipKnee : 1207
svHumoModelLengthKneeFoot : 1208
svHumoModelLengthFootFoot : 1209
svHumoModelDistFootFloor : 1210
svHumoModelFootLength : 1211
svHumoModelFootWidth : 1212
svHumoModelFootCenterBack : 1213
svHumoModelFootCenterInner : 1214
svHumoModelAngPelvic : 1198
svHumoModelAngHipSide : 1200
svHumoModelAngHip : 1199
svHumoModelAngKnee : 1201
svHumoModelAngFoot : 1202
svHumoModelAngFootSide : 1203
svIkA5 F: 1215
svIkB5 F: 1216
svIkC5 F: 1217
svIkA6 F: 1218
svIkA7 F: 1219
svIkA8 F: 1220
svIkA9 F: 1221
svIkA10 F: 1222
svIkB10 F: 1223
svIkC10 F: 1224
svIkLimA5min F: 1225
svIkLimA5max F: 1226
svIkLimA6min F: 1227
svIkLimA6max F: 1228
svIkLimA7min F: 1229
svIkLimA7max F: 1230
svIkLimA8min F: 1231
svIkLimA8max F: 1232
svIkLimA9min F: 1233
svIkLimA9max F: 1234
svIkLimA10min F: 1235
svIkLimA10max F: 1236
svIkOutPresent : 1237
svIkEncA5 : 1238
svIkEncA6 : 1239
svIkEncA7 : 1240
svIkEncA8 : 1241
svIkEncA9 : 1242
svIkEncA10 : 1243
headRotateTarget : 1030
headRotateCurrent : 1031
headRotatePwm : 1032
headRotateAddonMix : 1033
torsoRotateTarget : 1034
torsoRotateCurrent : 1035
torsoRotatePwm : 1036
torsoRotateAddonMix : 1037
rightClavicleTarget : 1038
rightClavicleCurrent : 1039
rightClaviclePwm : 1040
rightClavicleAddonMix : 1041
leftClavicleTarget : 1042
leftClavicleCurrent : 1043
leftClaviclePwm : 1044
leftClavicleAddonMix : 1045
rightShoulderTarget : 1046
rightShoulderCurrent : 1047
rightShoulderPwm : 1048
rightShoulderAddonMix : 1049
leftShoulderTarget : 1050
leftShoulderCurrent : 1051
leftShoulderPwm : 1052
leftShoulderAddonMix : 1053
rightElbowSideTarget : 1054
rightElbowSideCurrent : 1055
rightElbowSidePwm : 1056
rightElbowSideAddonMix : 1057
leftElbowSideTarget : 1058
leftElbowSideCurrent : 1059
leftElbowSidePwm : 1060
leftElbowSideAddonMix : 1061
rightElbowTarget : 1062
rightElbowCurrent : 1063
rightElbowPwm : 1064
rightElbowAddonMix : 1065
leftElbowTarget : 1066
leftElbowCurrent : 1067
leftElbowPwm : 1068
leftElbowAddonMix : 1069
rightPelvicTarget : 1070
rightPelvicCurrent : 1071
rightPelvicPwm : 1072
rightPelvicAddonMix : 1073
leftPelvicTarget : 1074
leftPelvicCurrent : 1075
leftPelvicPwm : 1076
leftPelvicAddonMix : 1077
rightHipSideTarget : 1078
rightHipSideCurrent : 1079
rightHipSidePwm : 1080
rightHipSideAddonMix : 1081
leftHipSideTarget : 1082
leftHipSideCurrent : 1083
leftHipSidePwm : 1084
leftHipSideAddonMix : 1085
rightHipTarget : 1086
rightHipCurrent : 1087
rightHipPwm : 1088
rightHipAddonMix : 1089
leftHipTarget : 1090
leftHipCurrent : 1091
leftHipPwm : 1092
leftHipAddonMix : 1093
rightKneeTarget : 1094
rightKneeCurrent : 1095
rightKneePwm : 1096
rightKneeAddonMix : 1097
leftKneeTarget : 1098
leftKneeCurrent : 1099
leftKneePwm : 1100
leftKneeAddonMix : 1101
rightFootFrontTarget : 1102
rightFootFrontCurrent : 1103
rightFootFrontPwm : 1104
rightFootFrontAddonMix : 1105
leftFootFrontTarget : 1106
leftFootFrontCurrent : 1107
leftFootFrontPwm : 1108
leftFootFrontAddonMix : 1109
rightFootSideTarget : 1110
rightFootSideCurrent : 1111
rightFootSidePwm : 1112
rightFootSideAddonMix : 1113
leftFootSideTarget : 1114
leftFootSideCurrent : 1115
leftFootSidePwm : 1116
leftFootSideAddonMix : 1117
rightHandTarget : 1118
rightHandCurrent : 1119
rightHandPwm : 1120
rightHandAddonMix : 1121
leftHandTarget : 1122
leftHandCurrent : 1123
leftHandPwm : 1124
leftHandAddonMix : 1125
headTiltTarget : 1130
headTiltCurrent : 1131
headTiltPwm : 1132
headTiltAddonMix : 1133
rightKneeBotTarget : 1134
rightKneeBotCurrent : 1135
rightKneeBotPwm : 1136
rightKneeBotAddonMix : 1137
leftKneeBotTarget : 1138
leftKneeBotCurrent : 1139
leftKneeBotPwm : 1140
leftKneeBotAddonMix : 1141
rightClawTarget : 1142
rightClawCurrent : 1143
rightClawPwm : 1144
rightClawAddonMix : 1145
leftClawTarget : 1146
leftClawCurrent : 1147
leftClawPwm : 1148
leftClawAddonMix : 1149
