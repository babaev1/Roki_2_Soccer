//====================================================================
//      SvCompiler V9.06
//By A.Sibilev
//====================================================================
//cblock

;sfVpuVersion <int()>
;sfCreateTask <int(,*<void()>,int)>
;sfLog <void(,cstring,int,int,int)>
;sfLogOpen <void(,cstring)>
;sfLogClose <void()>
;sfWaitFrameOut <void(,int)>
;sfIsFrameOut <int(,int)>
;sfWaitNextFrame <void()>
;sfSlotIndex <int(,cstring)>
;sfAbs <int(,int)>
;sfIMin <int(,int,int)>
;sfIMax <int(,int,int)>
;sfUMin <int(,int,int)>
;sfUMax <int(,int,int)>
;sfILimit <int(,int,int,int)>
;sfStop <void()>
;sfStartSlot <void(,int)>
;sfBip <void(,int,int)>
;sfWriteFlash <void()>
;sfFreeGroup <void(,int)>
;sfPoseGroup <void(,int,int,int)>
;sfPoseGroupDelay <void(,int,int,int,int)>
;sfPoseCorrect <void(,int,int)>
;sfQueueGroup <void(,int,int,int)>
;sfPoseIdx <void(,int,int,int)>
;sfPoseGroupLin <void(,int,int,int)>
;sfStrainGroup <void(,int)>
;sfPlaySamples <void(,int,*cblock,int)>
;sfAccumSetup1 <void(,*int)>
;sfAccumSetup2 <void(,*int,*int)>
;sfAccumSetup3 <void(,*int,*int,*int)>
;sfAccumSetup4 <void(,*int,*int,*int,*int)>
;sfAccumTrigger <void()>
;sfAccumReset <void()>
;sfMathAcos <int(,int,int)>
;sfMathSqrti <int(,int)>
;sfMathAngleOfTriangle <int(,int,int,int)>
;sfMathAngleOfKnee <int(,int,int,int)>
;sfMathCathetOfSquareTriangle <int(,int,int)>
;sfMathHypotenuseOfSquareTriangle <int(,int,int)>
;sfMathTableSin <int(,int,int)>
;sfHumoModelSetup <void()>
;sfHumoModelFootAtFloor <void(,int,int,int)>
;sfHumoModelFootPush <void(,int,int,int)>
;sfIndexOfMask <int(,int)>
;sfQueueIdxAppend <int(,int,int,int)>
;sfQueueIdxOffsets <int(,int,int,*cblock,int)>
;sfQueueIdxSinMove <int(,int,int,int,int)>
;sfQueueIdxLast <int(,int)>
;sfQueueIdxCount <int(,int)>
;sfQueueMax <int()>
;sfIkSetup <void()>
;sfIkAngle <void(,float,float,float,float,float,float,float)>
;sfMathCos <float(,float)>
;sfMathSin <float(,float)>
;sfQuaternionToEuler <void(,float,float,float,float)>
;sfQuaternionToEulerImu <void()>
;sfFMathACos <float(,float)>
;sfFMathASin <float(,float)>
;sfFMathATan <float(,float)>
;sfFMathATan2 <float(,float,float)>
;sfFMathCos <float(,float)>
;sfFMathSin <float(,float)>
;sfFMathTan <float(,float)>
;sfFMathCosh <float(,float)>
;sfFMathSinh <float(,float)>
;sfFMathTanh <float(,float)>
;sfFMathExp <float(,float)>
;sfFMathFrExp <float(,float,*int)>
;sfFMathLdExp <float(,float,int)>
;sfFMathLog <float(,float)>
;sfFMathLog10 <float(,float)>
;sfFMathModf <float(,float,*float)>
;sfFMathPow <float(,float,float)>
;sfFMathSqrt <float(,float)>
;sfFMathCeil <float(,float)>
;sfFMathFAbs <float(,float)>
;sfFMathFloor <float(,float)>
;sfFMathFMod <float(,float,float)>
;sfQuaternionToMatrix <void(,*:SfMatrix3x3,float,float,float,float)>
;sfQuaternionToMatrixImu <void(,*:SfMatrix3x3)>
;sfGravityVector <void(,*:SfVector3)>
;sfVec3Set <void(,*:SfVector3,float,float,float)>
;sfVec3Sum <void(,*:SfVector3,*:SfVector3,*:SfVector3)>
;sfVec3Diff <void(,*:SfVector3,*:SfVector3,*:SfVector3)>
;sfVec3MulRowColCx <float(,*:SfVector3,float,float,float)>
;sfVec3MulRowCol <float(,*:SfVector3,*:SfVector3)>
;sfVec3ScSum <void(,*:SfVector3,*:SfVector3,float)>
;sfVec3ScDiff <void(,*:SfVector3,*:SfVector3,float)>
;sfVec3ScMul <void(,*:SfVector3,*:SfVector3,float)>
;sfVec3ScDiv <void(,*:SfVector3,*:SfVector3,float)>
;sfMat3x3Set <void(,*:SfMatrix3x3,float,float,float,float,float,float,float,float,float)>
;sfMat3x3SetAll <void(,*:SfMatrix3x3,float)>
;sfMat3x3SetDiag <void(,*:SfMatrix3x3,float)>
;sfMat3x3Copy <void(,*:SfMatrix3x3,*:SfMatrix3x3)>
;sfMat3x3Transpose <void(,*:SfMatrix3x3,*:SfMatrix3x3)>
;sfMat3x3Mul <void(,*:SfMatrix3x3,*:SfMatrix3x3,*:SfMatrix3x3)>
;sfMat3x3ScMul <void(,*:SfMatrix3x3,*:SfMatrix3x3,float)>
;sfMat3x3MulCol <void(,*:SfVector3,*:SfMatrix3x3,*:SfVector3)>
;sfMat3x3RowMul <void(,*:SfVector3,*:SfVector3,*:SfMatrix3x3)>
;sfWaitFrame <void(,int)>
[3:466] ;sfWaitFrameOut( frame + svFrameCount );
VBC5_PUSH_CONST 17 | 0x80000000 //import func index sfWaitFrameOut
VBC2_PUSH_LOCAL 2 //frame
VBC3_PUSH_GLOBAL 1 //svFrameCount
VBC1_ADD
VBC1_CALL1
VBC1_STACK_UP2//remove result, call address and params
[2:10] ;
VBC1_RETURN
;page_0 <void()>
[1:22] ;frameCount = 250;
VBC2_PUSH_CONST 3 //frameCount
VBC3_PUSH_CONST 250 
VBC1_POP
[1:23] ;frameCount *= factor;
VBC2_PUSH_CONST 3 //frameCount
VBC1_PUSH_TOS
VBC1_LOAD
VBC3_PUSH_GLOBAL 4 //factor
VBC1_MUL_IF
VBC1_POP_CI
[1:24] ;sfPoseGroup(1056964607 , 0, frameCount);
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC5_PUSH_CONST 1056964607 
VBC1_PUSH_0 
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:25] ;sfWaitFrame(frameCount);
VBC2_PUSH_CONST 56  //func address sfWaitFrame
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL1
VBC1_STACK_UP2//remove result, call address and params
[1:28] ;
VBC1_RETURN
;page_1 <void()>
[1:29] ;frameCount = 30;
VBC2_PUSH_CONST 3 //frameCount
VBC2_PUSH_CONST 30 
VBC1_POP
[1:30] ;frameCount *= factor;
VBC2_PUSH_CONST 3 //frameCount
VBC1_PUSH_TOS
VBC1_LOAD
VBC3_PUSH_GLOBAL 4 //factor
VBC1_MUL_IF
VBC1_POP_CI
[1:31] ;sfPoseGroup((524288  | 262144 ), 3072, frameCount);
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC4_PUSH_CONST 786432 
VBC3_PUSH_CONST 3072 
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:32] ;sfPoseGroup((131072  | 65536  | 134217728  | 67108864  ), 3072, frameCount);
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC5_PUSH_CONST 201523200 
VBC3_PUSH_CONST 3072 
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:35] ;sfPoseGroup((32768  | 16384 ), 3456, frameCount);
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC4_PUSH_CONST 49152 
VBC3_PUSH_CONST 3456 
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:36] ;sfPoseGroup((32  | 16 ), 460, frameCount);
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC2_PUSH_CONST 48 
VBC3_PUSH_CONST 460 
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:37] ;sfPoseGroup((8  | 4 ), -1022, frameCount);
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC2_PUSH_CONST 12 
VBC3_PUSH_CONST -1022 // -
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:38] ;sfPoseGroup((8  | 4 ), -3000, frameCount);
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC2_PUSH_CONST 12 
VBC3_PUSH_CONST -3000 // -
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:39] ;sfPoseGroup(33554432 , -921, frameCount);
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC5_PUSH_CONST 33554432 
VBC3_PUSH_CONST -921 // -
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:40] ;sfPoseGroup(33554432 , 4000, frameCount);
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC5_PUSH_CONST 33554432 
VBC3_PUSH_CONST 4000 
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:41] ;sfWaitFrame(frameCount);
VBC2_PUSH_CONST 56  //func address sfWaitFrame
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL1
VBC1_STACK_UP2//remove result, call address and params
[1:44] ;
VBC1_RETURN
;page_2 <void()>
[1:45] ;frameCount = 30; 
VBC2_PUSH_CONST 3 //frameCount
VBC2_PUSH_CONST 30 
VBC1_POP
[1:46] ;frameCount *= factor;
VBC2_PUSH_CONST 3 //frameCount
VBC1_PUSH_TOS
VBC1_LOAD
VBC3_PUSH_GLOBAL 4 //factor
VBC1_MUL_IF
VBC1_POP_CI
[1:48] ;sfPoseGroup((524288  | 262144 ), 2680 + tuner, frameCount);
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC4_PUSH_CONST 786432 
VBC3_PUSH_CONST 2680 
VBC3_PUSH_GLOBAL 5 //tuner
VBC1_ADD
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:50] ;sfPoseGroup((32768  | 16384 ), 4100, frameCount);
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC4_PUSH_CONST 49152 
VBC3_PUSH_CONST 4100 
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:52] ;sfWaitFrame(frameCount);
VBC2_PUSH_CONST 56  //func address sfWaitFrame
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL1
VBC1_STACK_UP2//remove result, call address and params
[1:55] ;
VBC1_RETURN
;page_3 <void(,int)>
[1:56] ;frameCount = 1;  		
VBC2_PUSH_CONST 3 //frameCount
VBC1_PUSH_1 
VBC1_POP
[1:58] ;sfPoseGroupLin((524288  | 262144 ), 3072 + i, frameCount);
VBC5_PUSH_CONST 56 | 0x80000000 //import func index sfPoseGroupLin
VBC4_PUSH_CONST 786432 
VBC3_PUSH_CONST 3072 
VBC2_PUSH_LOCAL 2 //i
VBC1_ADD
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:59] ;sfPoseGroupLin((131072  | 65536  | 134217728  | 67108864  ), 1920 + i, frameCount);
VBC5_PUSH_CONST 56 | 0x80000000 //import func index sfPoseGroupLin
VBC5_PUSH_CONST 201523200 
VBC3_PUSH_CONST 1920 
VBC2_PUSH_LOCAL 2 //i
VBC1_ADD
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:61] ;sfPoseGroupLin((32768  | 16384 ), 1536 + i, frameCount);
VBC5_PUSH_CONST 56 | 0x80000000 //import func index sfPoseGroupLin
VBC4_PUSH_CONST 49152 
VBC3_PUSH_CONST 1536 
VBC2_PUSH_LOCAL 2 //i
VBC1_ADD
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:62] ;sfPoseGroupLin((8  | 4 ), 2304 + i, frameCount);
VBC5_PUSH_CONST 56 | 0x80000000 //import func index sfPoseGroupLin
VBC2_PUSH_CONST 12 
VBC3_PUSH_CONST 2304 
VBC2_PUSH_LOCAL 2 //i
VBC1_ADD
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:63] ;sfPoseGroup(33554432 , -921 + i, frameCount);
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC5_PUSH_CONST 33554432 
VBC3_PUSH_CONST -921 // -
VBC2_PUSH_LOCAL 2 //i
VBC1_ADD
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:64] ;sfWaitFrame(frameCount);
VBC2_PUSH_CONST 56  //func address sfWaitFrame
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL1
VBC1_STACK_UP2//remove result, call address and params
[1:67] ;
VBC1_RETURN
;page_4 <void(,int)>
[1:68] ;frameCount = 1; 
VBC2_PUSH_CONST 3 //frameCount
VBC1_PUSH_1 
VBC1_POP
[1:70] ;sfPoseGroupLin((2097152  | 1048576 ), 921 + i, frameCount);
VBC5_PUSH_CONST 56 | 0x80000000 //import func index sfPoseGroupLin
VBC4_PUSH_CONST 3145728 
VBC3_PUSH_CONST 921 
VBC2_PUSH_LOCAL 2 //i
VBC1_ADD
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:71] ;sfPoseGroupLin((524288  | 262144 ), -307 + i, frameCount);
VBC5_PUSH_CONST 56 | 0x80000000 //import func index sfPoseGroupLin
VBC4_PUSH_CONST 786432 
VBC3_PUSH_CONST -307 // -
VBC2_PUSH_LOCAL 2 //i
VBC1_ADD
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:72] ;sfPoseGroupLin((524288  | 262144 ), -907 + i, frameCount);
VBC5_PUSH_CONST 56 | 0x80000000 //import func index sfPoseGroupLin
VBC4_PUSH_CONST 786432 
VBC3_PUSH_CONST -907 // -
VBC2_PUSH_LOCAL 2 //i
VBC1_ADD
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:73] ;sfPoseGroupLin((131072  | 65536  | 134217728  | 67108864  ), 153 + i, frameCount);
VBC5_PUSH_CONST 56 | 0x80000000 //import func index sfPoseGroupLin
VBC5_PUSH_CONST 201523200 
VBC3_PUSH_CONST 153 
VBC2_PUSH_LOCAL 2 //i
VBC1_ADD
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:76] ;sfPoseGroupLin((32768  | 16384 ), -1996 + i, frameCount);
VBC5_PUSH_CONST 56 | 0x80000000 //import func index sfPoseGroupLin
VBC4_PUSH_CONST 49152 
VBC3_PUSH_CONST -1996 // -
VBC2_PUSH_LOCAL 2 //i
VBC1_ADD
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:78] ;sfPoseGroupLin((8  | 4 ), 3840 + i, frameCount);
VBC5_PUSH_CONST 56 | 0x80000000 //import func index sfPoseGroupLin
VBC2_PUSH_CONST 12 
VBC3_PUSH_CONST 3840 
VBC2_PUSH_LOCAL 2 //i
VBC1_ADD
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:79] ;sfPoseGroup(33554432 , -921 + i, frameCount);
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC5_PUSH_CONST 33554432 
VBC3_PUSH_CONST -921 // -
VBC2_PUSH_LOCAL 2 //i
VBC1_ADD
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:80] ;sfWaitFrame(frameCount);
VBC2_PUSH_CONST 56  //func address sfWaitFrame
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL1
VBC1_STACK_UP2//remove result, call address and params
[1:82] ;
VBC1_RETURN
;page_5 <void(,int)>
[1:83] ;frameCount = 1;		
VBC2_PUSH_CONST 3 //frameCount
VBC1_PUSH_1 
VBC1_POP
[1:84] ;frameCount *= factor;
VBC2_PUSH_CONST 3 //frameCount
VBC1_PUSH_TOS
VBC1_LOAD
VBC3_PUSH_GLOBAL 4 //factor
VBC1_MUL_IF
VBC1_POP_CI
[1:85] ;sfPoseGroupLin((2097152  | 1048576 ), 1536 + i, frameCount);
VBC5_PUSH_CONST 56 | 0x80000000 //import func index sfPoseGroupLin
VBC4_PUSH_CONST 3145728 
VBC3_PUSH_CONST 1536 
VBC2_PUSH_LOCAL 2 //i
VBC1_ADD
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:86] ;sfPoseGroupLin((524288  | 262144 ), -1474 + i, frameCount);
VBC5_PUSH_CONST 56 | 0x80000000 //import func index sfPoseGroupLin
VBC4_PUSH_CONST 786432 
VBC3_PUSH_CONST -1474 // -
VBC2_PUSH_LOCAL 2 //i
VBC1_ADD
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:88] ;sfPoseGroupLin((131072  | 65536  | 134217728  | 67108864  ), 0 + i, frameCount);
VBC5_PUSH_CONST 56 | 0x80000000 //import func index sfPoseGroupLin
VBC5_PUSH_CONST 201523200 
VBC1_PUSH_0 
VBC2_PUSH_LOCAL 2 //i
VBC1_ADD
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:90] ;sfPoseGroupLin((32768  | 16384 ), -2304 + i, frameCount);
VBC5_PUSH_CONST 56 | 0x80000000 //import func index sfPoseGroupLin
VBC4_PUSH_CONST 49152 
VBC3_PUSH_CONST -2304 // -
VBC2_PUSH_LOCAL 2 //i
VBC1_ADD
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:92] ;sfPoseGroupLin((512  | 256 ), 622 + i, frameCount);
VBC5_PUSH_CONST 56 | 0x80000000 //import func index sfPoseGroupLin
VBC3_PUSH_CONST 768 
VBC3_PUSH_CONST 622 
VBC2_PUSH_LOCAL 2 //i
VBC1_ADD
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:94] ;sfPoseGroupLin((8  | 4 ), 3840 + i, frameCount);
VBC5_PUSH_CONST 56 | 0x80000000 //import func index sfPoseGroupLin
VBC2_PUSH_CONST 12 
VBC3_PUSH_CONST 3840 
VBC2_PUSH_LOCAL 2 //i
VBC1_ADD
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:95] ;sfPoseGroup(33554432 , -921 + i, frameCount);
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC5_PUSH_CONST 33554432 
VBC3_PUSH_CONST -921 // -
VBC2_PUSH_LOCAL 2 //i
VBC1_ADD
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:96] ;sfWaitFrame(frameCount);
VBC2_PUSH_CONST 56  //func address sfWaitFrame
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL1
VBC1_STACK_UP2//remove result, call address and params
[1:99] ;
VBC1_RETURN
;page_6 <void(,int)>
[1:100] ;frameCount = 1;		
VBC2_PUSH_CONST 3 //frameCount
VBC1_PUSH_1 
VBC1_POP
[1:102] ;sfPoseGroupLin((2097152  | 1048576 ), 0 + i, frameCount);
VBC5_PUSH_CONST 56 | 0x80000000 //import func index sfPoseGroupLin
VBC4_PUSH_CONST 3145728 
VBC1_PUSH_0 
VBC2_PUSH_LOCAL 2 //i
VBC1_ADD
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:103] ;sfPoseGroupLin((524288  | 262144 ), 3429 + i, frameCount);
VBC5_PUSH_CONST 56 | 0x80000000 //import func index sfPoseGroupLin
VBC4_PUSH_CONST 786432 
VBC3_PUSH_CONST 3429 
VBC2_PUSH_LOCAL 2 //i
VBC1_ADD
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:105] ;sfPoseGroupLin((131072  | 65536  | 134217728  | 67108864  ), 3500 + i, frameCount);
VBC5_PUSH_CONST 56 | 0x80000000 //import func index sfPoseGroupLin
VBC5_PUSH_CONST 201523200 
VBC3_PUSH_CONST 3500 
VBC2_PUSH_LOCAL 2 //i
VBC1_ADD
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:109] ;sfPoseGroupLin((32768  | 16384 ), 5600 + i, frameCount);
VBC5_PUSH_CONST 56 | 0x80000000 //import func index sfPoseGroupLin
VBC4_PUSH_CONST 49152 
VBC3_PUSH_CONST 5600 
VBC2_PUSH_LOCAL 2 //i
VBC1_ADD
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:111] ;sfPoseGroupLin((512  | 256 ), -921 + i, frameCount);
VBC5_PUSH_CONST 56 | 0x80000000 //import func index sfPoseGroupLin
VBC3_PUSH_CONST 768 
VBC3_PUSH_CONST -921 // -
VBC2_PUSH_LOCAL 2 //i
VBC1_ADD
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:112] ;sfPoseGroupLin((8  | 4 ), -4094 + i, frameCount);
VBC5_PUSH_CONST 56 | 0x80000000 //import func index sfPoseGroupLin
VBC2_PUSH_CONST 12 
VBC3_PUSH_CONST -4094 // -
VBC2_PUSH_LOCAL 2 //i
VBC1_ADD
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:113] ;sfPoseGroup(33554432 , 4000+ i, frameCount);
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC5_PUSH_CONST 33554432 
VBC3_PUSH_CONST 4000 
VBC2_PUSH_LOCAL 2 //i
VBC1_ADD
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:114] ;sfWaitFrame(frameCount);
VBC2_PUSH_CONST 56  //func address sfWaitFrame
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL1
VBC1_STACK_UP2//remove result, call address and params
[1:117] ;
VBC1_RETURN
;page_6_1 <void(,int)>
[1:118] ;frameCount = 1;
VBC2_PUSH_CONST 3 //frameCount
VBC1_PUSH_1 
VBC1_POP
[1:119] ;frameCount *= factor;
VBC2_PUSH_CONST 3 //frameCount
VBC1_PUSH_TOS
VBC1_LOAD
VBC3_PUSH_GLOBAL 4 //factor
VBC1_MUL_IF
VBC1_POP_CI
[1:120] ;sfPoseGroupLin((2097152  | 1048576 ), 0, frameCount);
VBC5_PUSH_CONST 56 | 0x80000000 //import func index sfPoseGroupLin
VBC4_PUSH_CONST 3145728 
VBC1_PUSH_0 
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:121] ;sfPoseGroupLin((524288  | 262144 ), 3429, frameCount);
VBC5_PUSH_CONST 56 | 0x80000000 //import func index sfPoseGroupLin
VBC4_PUSH_CONST 786432 
VBC3_PUSH_CONST 3429 
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:123] ;sfPoseGroupLin((131072  | 65536  | 134217728  | 67108864  ), 3500, frameCount);
VBC5_PUSH_CONST 56 | 0x80000000 //import func index sfPoseGroupLin
VBC5_PUSH_CONST 201523200 
VBC3_PUSH_CONST 3500 
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:127] ;sfPoseGroupLin((32768  | 16384 ), 5191, frameCount);
VBC5_PUSH_CONST 56 | 0x80000000 //import func index sfPoseGroupLin
VBC4_PUSH_CONST 49152 
VBC3_PUSH_CONST 5191 
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:128] ;sfPoseGroupLin((32768  | 16384 ), 3500, frameCount);
VBC5_PUSH_CONST 56 | 0x80000000 //import func index sfPoseGroupLin
VBC4_PUSH_CONST 49152 
VBC3_PUSH_CONST 3500 
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:129] ;sfPoseGroupLin((512  | 256 ), -921, frameCount);
VBC5_PUSH_CONST 56 | 0x80000000 //import func index sfPoseGroupLin
VBC3_PUSH_CONST 768 
VBC3_PUSH_CONST -921 // -
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:130] ;sfPoseGroupLin((8  | 4 ), -3583, frameCount);
VBC5_PUSH_CONST 56 | 0x80000000 //import func index sfPoseGroupLin
VBC2_PUSH_CONST 12 
VBC3_PUSH_CONST -3583 // -
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:131] ;sfWaitFrame(frameCount);
VBC2_PUSH_CONST 56  //func address sfWaitFrame
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL1
VBC1_STACK_UP2//remove result, call address and params
[1:134] ;
VBC1_RETURN
;page_7 <void()>
[1:135] ;frameCount = 2;
VBC2_PUSH_CONST 3 //frameCount
VBC1_PUSH_2 
VBC1_POP
[1:137] ;sfWaitFrame(frameCount);
VBC2_PUSH_CONST 56  //func address sfWaitFrame
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL1
VBC1_STACK_UP2//remove result, call address and params
[1:140] ;
VBC1_RETURN
;page_8_ <void(,int)>
[1:141] ;frameCount = 1;		
VBC2_PUSH_CONST 3 //frameCount
VBC1_PUSH_1 
VBC1_POP
[1:142] ;frameCount *= factor;
VBC2_PUSH_CONST 3 //frameCount
VBC1_PUSH_TOS
VBC1_LOAD
VBC3_PUSH_GLOBAL 4 //factor
VBC1_MUL_IF
VBC1_POP_CI
[1:143] ;sfPoseGroupLin((524288  | 262144 ), 3993 + i, frameCount);
VBC5_PUSH_CONST 56 | 0x80000000 //import func index sfPoseGroupLin
VBC4_PUSH_CONST 786432 
VBC3_PUSH_CONST 3993 
VBC2_PUSH_LOCAL 2 //i
VBC1_ADD
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:144] ;sfPoseGroupLin((524288  | 262144 ), 3000 + i, frameCount);
VBC5_PUSH_CONST 56 | 0x80000000 //import func index sfPoseGroupLin
VBC4_PUSH_CONST 786432 
VBC3_PUSH_CONST 3000 
VBC2_PUSH_LOCAL 2 //i
VBC1_ADD
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:146] ;sfPoseGroupLin((32768  | 16384 ), 5600 + i, frameCount);
VBC5_PUSH_CONST 56 | 0x80000000 //import func index sfPoseGroupLin
VBC4_PUSH_CONST 49152 
VBC3_PUSH_CONST 5600 
VBC2_PUSH_LOCAL 2 //i
VBC1_ADD
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:147] ;sfPoseGroupLin((32768  | 16384 ), 5000 + i, frameCount);
VBC5_PUSH_CONST 56 | 0x80000000 //import func index sfPoseGroupLin
VBC4_PUSH_CONST 49152 
VBC3_PUSH_CONST 5000 
VBC2_PUSH_LOCAL 2 //i
VBC1_ADD
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:148] ;sfPoseGroupLin((32768  | 16384 ), 4800 + i, frameCount);
VBC5_PUSH_CONST 56 | 0x80000000 //import func index sfPoseGroupLin
VBC4_PUSH_CONST 49152 
VBC3_PUSH_CONST 4800 
VBC2_PUSH_LOCAL 2 //i
VBC1_ADD
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:149] ;sfPoseGroupLin((512  | 256 ), -921 + i, frameCount);
VBC5_PUSH_CONST 56 | 0x80000000 //import func index sfPoseGroupLin
VBC3_PUSH_CONST 768 
VBC3_PUSH_CONST -921 // -
VBC2_PUSH_LOCAL 2 //i
VBC1_ADD
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:150] ;sfPoseGroupLin((8  | 4 ), -4094 + i, frameCount);
VBC5_PUSH_CONST 56 | 0x80000000 //import func index sfPoseGroupLin
VBC2_PUSH_CONST 12 
VBC3_PUSH_CONST -4094 // -
VBC2_PUSH_LOCAL 2 //i
VBC1_ADD
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:151] ;sfPoseGroup(33554432 , 4000+ i, frameCount);
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC5_PUSH_CONST 33554432 
VBC3_PUSH_CONST 4000 
VBC2_PUSH_LOCAL 2 //i
VBC1_ADD
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:152] ;sfWaitFrame(frameCount);
VBC2_PUSH_CONST 56  //func address sfWaitFrame
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL1
VBC1_STACK_UP2//remove result, call address and params
[1:154] ;
VBC1_RETURN
;page_8 <void(,int)>
[1:155] ;frameCount = 1;		
VBC2_PUSH_CONST 3 //frameCount
VBC1_PUSH_1 
VBC1_POP
[1:156] ;frameCount *= factor;
VBC2_PUSH_CONST 3 //frameCount
VBC1_PUSH_TOS
VBC1_LOAD
VBC3_PUSH_GLOBAL 4 //factor
VBC1_MUL_IF
VBC1_POP_CI
[1:157] ;sfPoseGroupLin((524288  | 262144 ), 3993 , frameCount);
VBC5_PUSH_CONST 56 | 0x80000000 //import func index sfPoseGroupLin
VBC4_PUSH_CONST 786432 
VBC3_PUSH_CONST 3993 
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:158] ;sfPoseGroupLin((524288  | 262144 ), 3000, frameCount);
VBC5_PUSH_CONST 56 | 0x80000000 //import func index sfPoseGroupLin
VBC4_PUSH_CONST 786432 
VBC3_PUSH_CONST 3000 
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:160] ;sfPoseGroupLin((32768  | 16384 ), 4800 + hip_at_landing , frameCount);
VBC5_PUSH_CONST 56 | 0x80000000 //import func index sfPoseGroupLin
VBC4_PUSH_CONST 49152 
VBC3_PUSH_CONST 4800 
VBC3_PUSH_GLOBAL 7 //hip_at_landing
VBC1_ADD
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:161] ;sfPoseGroupLin((512  | 256 ), -921 , frameCount);
VBC5_PUSH_CONST 56 | 0x80000000 //import func index sfPoseGroupLin
VBC3_PUSH_CONST 768 
VBC3_PUSH_CONST -921 // -
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:162] ;sfPoseGroupLin((8  | 4 ), -4094 , frameCount);
VBC5_PUSH_CONST 56 | 0x80000000 //import func index sfPoseGroupLin
VBC2_PUSH_CONST 12 
VBC3_PUSH_CONST -4094 // -
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:163] ;sfPoseGroup(33554432 , 4000, frameCount);
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC5_PUSH_CONST 33554432 
VBC3_PUSH_CONST 4000 
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:164] ;sfWaitFrame(frameCount);
VBC2_PUSH_CONST 56  //func address sfWaitFrame
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL1
VBC1_STACK_UP2//remove result, call address and params
[1:168] ;
VBC1_RETURN
;page_9 <void()>
[1:169] ;frameCount = 175;
VBC2_PUSH_CONST 3 //frameCount
VBC3_PUSH_CONST 175 
VBC1_POP
[1:170] ;frameCount *= factor;
VBC2_PUSH_CONST 3 //frameCount
VBC1_PUSH_TOS
VBC1_LOAD
VBC3_PUSH_GLOBAL 4 //factor
VBC1_MUL_IF
VBC1_POP_CI
[1:171] ;sfWaitFrame(frameCount);
VBC2_PUSH_CONST 56  //func address sfWaitFrame
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL1
VBC1_STACK_UP2//remove result, call address and params
[1:175] ;
VBC1_RETURN
;page_9_1 <void()>
[1:176] ;frameCount = 175;
VBC2_PUSH_CONST 3 //frameCount
VBC3_PUSH_CONST 175 
VBC1_POP
[1:177] ;frameCount *= factor;
VBC2_PUSH_CONST 3 //frameCount
VBC1_PUSH_TOS
VBC1_LOAD
VBC3_PUSH_GLOBAL 4 //factor
VBC1_MUL_IF
VBC1_POP_CI
[1:178] ;sfPoseGroup((32768  | 16384 ), 5072, frameCount);
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC4_PUSH_CONST 49152 
VBC3_PUSH_CONST 5072 
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:179] ;sfWaitFrame(frameCount);
VBC2_PUSH_CONST 56  //func address sfWaitFrame
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL1
VBC1_STACK_UP2//remove result, call address and params
[1:183] ;
VBC1_RETURN
;page_10 <void()>
[1:184] ;frameCount = 75;
VBC2_PUSH_CONST 3 //frameCount
VBC2_PUSH_CONST 75 
VBC1_POP
[1:185] ;frameCount *= factor;
VBC2_PUSH_CONST 3 //frameCount
VBC1_PUSH_TOS
VBC1_LOAD
VBC3_PUSH_GLOBAL 4 //factor
VBC1_MUL_IF
VBC1_POP_CI
[1:186] ;sfPoseGroup( (524288  | 262144 ), 3072, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC4_PUSH_CONST 786432 
VBC3_PUSH_CONST 3072 
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:187] ;sfPoseGroup( (131072  | 65536  | 134217728  | 67108864  ), 3072, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC5_PUSH_CONST 201523200 
VBC3_PUSH_CONST 3072 
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:188] ;sfPoseGroup( (32768  | 16384 ), 3456, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC4_PUSH_CONST 49152 
VBC3_PUSH_CONST 3456 
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:189] ;sfPoseGroup( (512  | 256 ), 0, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC3_PUSH_CONST 768 
VBC1_PUSH_0 
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:190] ;sfPoseGroup( (8  | 4 ), -1022, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC2_PUSH_CONST 12 
VBC3_PUSH_CONST -1022 // -
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:192] ;sfWaitFrame( frameCount );
VBC2_PUSH_CONST 56  //func address sfWaitFrame
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL1
VBC1_STACK_UP2//remove result, call address and params
[1:195] ;
VBC1_RETURN
;main <void()>
VBC1_STACK_DN2//local vars 2
[1:196] ;
[1:197] ;
[1:198] ;tuner = 0;
VBC2_PUSH_CONST 5 //tuner
VBC1_PUSH_0 
VBC1_POP
[1:199] ;factor = 0.9; 
VBC2_PUSH_CONST 4 //factor
VBC5_PUSH_CONST 1063675494 
VBC1_POP
[1:200] ;hip_at_landing = 0;
VBC2_PUSH_CONST 7 //hip_at_landing
VBC1_PUSH_0 
VBC1_POP
[1:212] ;while (pitStop == 0) sfWaitFrame(1); 
LAB1530: //while condition
VBC3_PUSH_GLOBAL 6 //pitStop
VBC1_PUSH_0 
VBC1_EQU
VBC4_FALSE_JUMP LAB1548 //while to exit
;while (pitStop == 0) sfWaitFrame(1); 
VBC2_PUSH_CONST 56  //func address sfWaitFrame
VBC1_PUSH_1 
VBC1_CALL1
VBC1_STACK_UP2//remove result, call address and params
VBC4_JUMP LAB1530 //while forever loop
LAB1548: //while exit
[1:213] ;for( jump = 0; jump < 3; i++ ){
VBC2_PUSH_B_OFFSET -2 //jump
VBC1_PUSH_0 
VBC1_POP
LAB1552: //for condition
VBC2_PUSH_LOCAL -2 //jump
VBC2_PUSH_CONST 3 
VBC1_LESS
VBC4_FALSE_JUMP LAB1757 //to for exit
;
[1:214] ;page_1();
VBC2_PUSH_CONST 109  //func address page_1
VBC1_CALL0
VBC1_STACK_UP1//remove result, call address and params
[1:215] ;page_2();
VBC3_PUSH_CONST 264  //func address page_2
VBC1_CALL0
VBC1_STACK_UP1//remove result, call address and params
[1:217] ;for( i = 0; i < 15 * factor; i++ ) page_3(i);
VBC2_PUSH_B_OFFSET -1 //i
VBC1_PUSH_0 
VBC1_POP
LAB1574: //for condition
VBC2_PUSH_LOCAL -1 //i
VBC2_PUSH_CONST 15 
VBC3_PUSH_GLOBAL 4 //factor
VBC1_MUL_IF
VBC1_LESS_IF
VBC4_FALSE_JUMP LAB1601 //to for exit
;for( i = 0; i < 15 * factor; i++ ) page_3(i);
VBC3_PUSH_CONST 324  //func address page_3
VBC2_PUSH_LOCAL -1 //i
VBC1_CALL1
VBC1_STACK_UP2//remove result, call address and params
LAB1594: //for step
VBC2_PUSH_B_OFFSET -1 //i
VBC1_INC
VBC4_JUMP LAB1574 //to condition
LAB1601: //for exit
[1:218] ;for( i = 0; i < 8 * factor; i++ ) page_4(i);
VBC2_PUSH_B_OFFSET -1 //i
VBC1_PUSH_0 
VBC1_POP
LAB1605: //for condition
VBC2_PUSH_LOCAL -1 //i
VBC2_PUSH_CONST 8 
VBC3_PUSH_GLOBAL 4 //factor
VBC1_MUL_IF
VBC1_LESS_IF
VBC4_FALSE_JUMP LAB1632 //to for exit
;for( i = 0; i < 8 * factor; i++ ) page_4(i);
VBC3_PUSH_CONST 436  //func address page_4
VBC2_PUSH_LOCAL -1 //i
VBC1_CALL1
VBC1_STACK_UP2//remove result, call address and params
LAB1625: //for step
VBC2_PUSH_B_OFFSET -1 //i
VBC1_INC
VBC4_JUMP LAB1605 //to condition
LAB1632: //for exit
[1:219] ;for( i = 0; i < 3 * factor; i++ ) page_5(i);
VBC2_PUSH_B_OFFSET -1 //i
VBC1_PUSH_0 
VBC1_POP
LAB1636: //for condition
VBC2_PUSH_LOCAL -1 //i
VBC2_PUSH_CONST 3 
VBC3_PUSH_GLOBAL 4 //factor
VBC1_MUL_IF
VBC1_LESS_IF
VBC4_FALSE_JUMP LAB1663 //to for exit
;for( i = 0; i < 3 * factor; i++ ) page_5(i);
VBC3_PUSH_CONST 588  //func address page_5
VBC2_PUSH_LOCAL -1 //i
VBC1_CALL1
VBC1_STACK_UP2//remove result, call address and params
LAB1656: //for step
VBC2_PUSH_B_OFFSET -1 //i
VBC1_INC
VBC4_JUMP LAB1636 //to condition
LAB1663: //for exit
[1:220] ;for( i = 0; i < 2 * factor; i++ ) page_6(i);
VBC2_PUSH_B_OFFSET -1 //i
VBC1_PUSH_0 
VBC1_POP
LAB1667: //for condition
VBC2_PUSH_LOCAL -1 //i
VBC1_PUSH_2 
VBC3_PUSH_GLOBAL 4 //factor
VBC1_MUL_IF
VBC1_LESS_IF
VBC4_FALSE_JUMP LAB1693 //to for exit
;for( i = 0; i < 2 * factor; i++ ) page_6(i);
VBC3_PUSH_CONST 746  //func address page_6
VBC2_PUSH_LOCAL -1 //i
VBC1_CALL1
VBC1_STACK_UP2//remove result, call address and params
LAB1686: //for step
VBC2_PUSH_B_OFFSET -1 //i
VBC1_INC
VBC4_JUMP LAB1667 //to condition
LAB1693: //for exit
[1:229] ;page_7();
VBC3_PUSH_CONST 1031  //func address page_7
VBC1_CALL0
VBC1_STACK_UP1//remove result, call address and params
[1:230] ;for( i = 0; i < 6 * factor; i++ ) page_8(i);
VBC2_PUSH_B_OFFSET -1 //i
VBC1_PUSH_0 
VBC1_POP
LAB1702: //for condition
VBC2_PUSH_LOCAL -1 //i
VBC2_PUSH_CONST 6 
VBC3_PUSH_GLOBAL 4 //factor
VBC1_MUL_IF
VBC1_LESS_IF
VBC4_FALSE_JUMP LAB1729 //to for exit
;for( i = 0; i < 6 * factor; i++ ) page_8(i);
VBC3_PUSH_CONST 1222  //func address page_8
VBC2_PUSH_LOCAL -1 //i
VBC1_CALL1
VBC1_STACK_UP2//remove result, call address and params
LAB1722: //for step
VBC2_PUSH_B_OFFSET -1 //i
VBC1_INC
VBC4_JUMP LAB1702 //to condition
LAB1729: //for exit
[1:231] ;page_9();
VBC3_PUSH_CONST 1347  //func address page_9
VBC1_CALL0
VBC1_STACK_UP1//remove result, call address and params
[1:232] ;page_9_1();
VBC3_PUSH_CONST 1370  //func address page_9_1
VBC1_CALL0
VBC1_STACK_UP1//remove result, call address and params
[1:233] ;page_0();
VBC2_PUSH_CONST 70  //func address page_0
VBC1_CALL0
VBC1_STACK_UP1//remove result, call address and params
[1:235] ;sfWaitFrame( 800 );
VBC2_PUSH_CONST 56  //func address sfWaitFrame
VBC3_PUSH_CONST 800 
VBC1_CALL1
VBC1_STACK_UP2//remove result, call address and params
LAB1750: //for step
VBC2_PUSH_B_OFFSET -1 //i
VBC1_INC
VBC4_JUMP LAB1552 //to condition
LAB1757: //for exit
[1:237] ;
VBC1_RETURN
//Init table
//Variables
svFrameCount : 1
svImuAccX : 1000
svImuAccY : 1001
svImuAccZ : 1002
svImuAccRawX : 1003
svImuAccRawY : 1004
svImuAccRawZ : 1005
svImuGyroX : 1006
svImuGyroY : 1007
svImuGyroZ : 1008
svImuGyroRawX : 1009
svImuGyroRawY : 1010
svImuGyroRawZ : 1011
svImuQuaterX : 1012
svImuQuaterY : 1013
svImuQuaterZ : 1014
svImuQuaterW : 1015
svImuQuaterAcc : 1016
svImuAccSlowX : 1017
svImuAccSlowY : 1018
svImuAccSlowZ : 1019
svAdc : 1020
svButtonLeft : 1021
svButtonRight : 1022
svButtonPress : 1023
svHeadControlMask : 1024
svEulerYaw F: 1025
svEulerPitch F: 1026
svEulerRoll F: 1027
svRemoteStatus : 1190
svRemoteButton : 1191
svRemoteLeftJoystick : 1192
svRemoteLeftJoystickX : 1193
svRemoteLeftJoystickY : 1194
svRemoteRightJoystick : 1195
svRemoteRightJoystickX : 1196
svRemoteRightJoystickY : 1197
svHumoModelDistPelvic : 1204
svHumoModelLengthPelvicHip : 1205
svHumoModelLengthHipHip : 1206
svHumoModelLengthHipKnee : 1207
svHumoModelLengthKneeFoot : 1208
svHumoModelLengthFootFoot : 1209
svHumoModelDistFootFloor : 1210
svHumoModelFootLength : 1211
svHumoModelFootWidth : 1212
svHumoModelFootCenterBack : 1213
svHumoModelFootCenterInner : 1214
svHumoModelAngPelvic : 1198
svHumoModelAngHipSide : 1200
svHumoModelAngHip : 1199
svHumoModelAngKnee : 1201
svHumoModelAngFoot : 1202
svHumoModelAngFootSide : 1203
svIkA5 F: 1215
svIkB5 F: 1216
svIkC5 F: 1217
svIkA6 F: 1218
svIkA7 F: 1219
svIkA8 F: 1220
svIkA9 F: 1221
svIkA10 F: 1222
svIkB10 F: 1223
svIkC10 F: 1224
svIkLimA5min F: 1225
svIkLimA5max F: 1226
svIkLimA6min F: 1227
svIkLimA6max F: 1228
svIkLimA7min F: 1229
svIkLimA7max F: 1230
svIkLimA8min F: 1231
svIkLimA8max F: 1232
svIkLimA9min F: 1233
svIkLimA9max F: 1234
svIkLimA10min F: 1235
svIkLimA10max F: 1236
svIkOutPresent : 1237
svIkEncA5 : 1238
svIkEncA6 : 1239
svIkEncA7 : 1240
svIkEncA8 : 1241
svIkEncA9 : 1242
svIkEncA10 : 1243
headRotateTarget : 1030
headRotateCurrent : 1031
headRotatePwm : 1032
headRotateAddonMix : 1033
torsoRotateTarget : 1034
torsoRotateCurrent : 1035
torsoRotatePwm : 1036
torsoRotateAddonMix : 1037
rightClavicleTarget : 1038
rightClavicleCurrent : 1039
rightClaviclePwm : 1040
rightClavicleAddonMix : 1041
leftClavicleTarget : 1042
leftClavicleCurrent : 1043
leftClaviclePwm : 1044
leftClavicleAddonMix : 1045
rightShoulderTarget : 1046
rightShoulderCurrent : 1047
rightShoulderPwm : 1048
rightShoulderAddonMix : 1049
leftShoulderTarget : 1050
leftShoulderCurrent : 1051
leftShoulderPwm : 1052
leftShoulderAddonMix : 1053
rightElbowSideTarget : 1054
rightElbowSideCurrent : 1055
rightElbowSidePwm : 1056
rightElbowSideAddonMix : 1057
leftElbowSideTarget : 1058
leftElbowSideCurrent : 1059
leftElbowSidePwm : 1060
leftElbowSideAddonMix : 1061
rightElbowTarget : 1062
rightElbowCurrent : 1063
rightElbowPwm : 1064
rightElbowAddonMix : 1065
leftElbowTarget : 1066
leftElbowCurrent : 1067
leftElbowPwm : 1068
leftElbowAddonMix : 1069
rightPelvicTarget : 1070
rightPelvicCurrent : 1071
rightPelvicPwm : 1072
rightPelvicAddonMix : 1073
leftPelvicTarget : 1074
leftPelvicCurrent : 1075
leftPelvicPwm : 1076
leftPelvicAddonMix : 1077
rightHipSideTarget : 1078
rightHipSideCurrent : 1079
rightHipSidePwm : 1080
rightHipSideAddonMix : 1081
leftHipSideTarget : 1082
leftHipSideCurrent : 1083
leftHipSidePwm : 1084
leftHipSideAddonMix : 1085
rightHipTarget : 1086
rightHipCurrent : 1087
rightHipPwm : 1088
rightHipAddonMix : 1089
leftHipTarget : 1090
leftHipCurrent : 1091
leftHipPwm : 1092
leftHipAddonMix : 1093
rightKneeTarget : 1094
rightKneeCurrent : 1095
rightKneePwm : 1096
rightKneeAddonMix : 1097
leftKneeTarget : 1098
leftKneeCurrent : 1099
leftKneePwm : 1100
leftKneeAddonMix : 1101
rightFootFrontTarget : 1102
rightFootFrontCurrent : 1103
rightFootFrontPwm : 1104
rightFootFrontAddonMix : 1105
leftFootFrontTarget : 1106
leftFootFrontCurrent : 1107
leftFootFrontPwm : 1108
leftFootFrontAddonMix : 1109
rightFootSideTarget : 1110
rightFootSideCurrent : 1111
rightFootSidePwm : 1112
rightFootSideAddonMix : 1113
leftFootSideTarget : 1114
leftFootSideCurrent : 1115
leftFootSidePwm : 1116
leftFootSideAddonMix : 1117
rightHandTarget : 1118
rightHandCurrent : 1119
rightHandPwm : 1120
rightHandAddonMix : 1121
leftHandTarget : 1122
leftHandCurrent : 1123
leftHandPwm : 1124
leftHandAddonMix : 1125
headTiltTarget : 1130
headTiltCurrent : 1131
headTiltPwm : 1132
headTiltAddonMix : 1133
rightKneeBotTarget : 1134
rightKneeBotCurrent : 1135
rightKneeBotPwm : 1136
rightKneeBotAddonMix : 1137
leftKneeBotTarget : 1138
leftKneeBotCurrent : 1139
leftKneeBotPwm : 1140
leftKneeBotAddonMix : 1141
rightClawTarget : 1142
rightClawCurrent : 1143
rightClawPwm : 1144
rightClawAddonMix : 1145
leftClawTarget : 1146
leftClawCurrent : 1147
leftClawPwm : 1148
leftClawAddonMix : 1149
restart_flag : 2
frameCount : 3
factor F: 4
tuner : 5
pitStop : 6
hip_at_landing : 7
