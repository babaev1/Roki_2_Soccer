//====================================================================
//      SvCompiler V9.06
//By A.Sibilev
//====================================================================
//cblock

;sfVpuVersion <int()>
;sfCreateTask <int(,*<void()>,int)>
;sfLog <void(,cstring,int,int,int)>
;sfLogOpen <void(,cstring)>
;sfLogClose <void()>
;sfWaitFrameOut <void(,int)>
;sfIsFrameOut <int(,int)>
;sfWaitNextFrame <void()>
;sfSlotIndex <int(,cstring)>
;sfSoundIndex <int(,cstring)>
;sfAbs <int(,int)>
;sfIMin <int(,int,int)>
;sfIMax <int(,int,int)>
;sfUMin <int(,int,int)>
;sfUMax <int(,int,int)>
;sfILimit <int(,int,int,int)>
;sfStop <void()>
;sfStartSlot <void(,int)>
;sfBip <void(,int,int)>
;sfWriteFlash <void()>
;sfSoundPlay <void(,int)>
;sfSoundIsPlay <int()>
;sfFreeGroup <void(,int)>
;sfPoseGroup <void(,int,int,int)>
;sfPoseGroupDelay <void(,int,int,int,int)>
;sfPoseCorrect <void(,int,int)>
;sfQueueGroup <void(,int,int,int)>
;sfPoseIdx <void(,int,int,int)>
;sfPoseGroupLin <void(,int,int,int)>
;sfStrainGroup <void(,int)>
;sfPlaySamples <void(,int,int,int,*cblock)>
;sfPlayWSamples <void(,int,int,int,*cwblock)>
;sfAccumSetup1 <void(,*int)>
;sfAccumSetup2 <void(,*int,*int)>
;sfAccumSetup3 <void(,*int,*int,*int)>
;sfAccumSetup4 <void(,*int,*int,*int,*int)>
;sfAccumTrigger <void()>
;sfAccumReset <void()>
;sfUnitParamQueryRead <int(,int,int)>
;sfUnitParamQueryWrite <int(,int,int,int)>
;sfUnitParamStatusRead <int(,int,int,*int)>
;sfMathAcos <int(,int,int)>
;sfMathSqrti <int(,int)>
;sfMathAngleOfTriangle <int(,int,int,int)>
;sfMathAngleOfKnee <int(,int,int,int)>
;sfMathCathetOfSquareTriangle <int(,int,int)>
;sfMathHypotenuseOfSquareTriangle <int(,int,int)>
;sfMathTableSin <int(,int,int)>
;sfHumoModelSetup <void()>
;sfHumoModelFootAtFloor <void(,int,int,int)>
;sfHumoModelFootPush <void(,int,int,int)>
;sfIndexOfMask <int(,int)>
;sfQueueIdxAppend <int(,int,int,int)>
;sfQueueIdxOffsets <int(,int,int,*cblock,int)>
;sfQueueIdxSinMove <int(,int,int,int,int)>
;sfQueueIdxLast <int(,int)>
;sfQueueIdxCount <int(,int)>
;sfQueueMax <int()>
;sfIkSetup <void()>
;sfIkAngle <void(,float,float,float,float,float,float,float)>
;sfMathCos <float(,float)>
;sfMathSin <float(,float)>
;sfQuaternionToEuler <void(,float,float,float,float)>
;sfQuaternionToEulerImu <void()>
;sfFMathACos <float(,float)>
;sfFMathASin <float(,float)>
;sfFMathATan <float(,float)>
;sfFMathATan2 <float(,float,float)>
;sfFMathCos <float(,float)>
;sfFMathSin <float(,float)>
;sfFMathTan <float(,float)>
;sfFMathCosh <float(,float)>
;sfFMathSinh <float(,float)>
;sfFMathTanh <float(,float)>
;sfFMathExp <float(,float)>
;sfFMathFrExp <float(,float,*int)>
;sfFMathLdExp <float(,float,int)>
;sfFMathLog <float(,float)>
;sfFMathLog10 <float(,float)>
;sfFMathModf <float(,float,*float)>
;sfFMathPow <float(,float,float)>
;sfFMathSqrt <float(,float)>
;sfFMathCeil <float(,float)>
;sfFMathFAbs <float(,float)>
;sfFMathFloor <float(,float)>
;sfFMathFMod <float(,float,float)>
;sfQuaternionToMatrix <void(,*:SfMatrix3x3,float,float,float,float)>
;sfQuaternionToMatrixImu <void(,*:SfMatrix3x3)>
;sfGravityVector <void(,*:SfVector3)>
;sfVec3Set <void(,*:SfVector3,float,float,float)>
;sfVec3Sum <void(,*:SfVector3,*:SfVector3,*:SfVector3)>
;sfVec3Diff <void(,*:SfVector3,*:SfVector3,*:SfVector3)>
;sfVec3MulRowColCx <float(,*:SfVector3,float,float,float)>
;sfVec3MulRowCol <float(,*:SfVector3,*:SfVector3)>
;sfVec3ScSum <void(,*:SfVector3,*:SfVector3,float)>
;sfVec3ScDiff <void(,*:SfVector3,*:SfVector3,float)>
;sfVec3ScMul <void(,*:SfVector3,*:SfVector3,float)>
;sfVec3ScDiv <void(,*:SfVector3,*:SfVector3,float)>
;sfMat3x3Set <void(,*:SfMatrix3x3,float,float,float,float,float,float,float,float,float)>
;sfMat3x3SetAll <void(,*:SfMatrix3x3,float)>
;sfMat3x3SetDiag <void(,*:SfMatrix3x3,float)>
;sfMat3x3Copy <void(,*:SfMatrix3x3,*:SfMatrix3x3)>
;sfMat3x3Transpose <void(,*:SfMatrix3x3,*:SfMatrix3x3)>
;sfMat3x3Mul <void(,*:SfMatrix3x3,*:SfMatrix3x3,*:SfMatrix3x3)>
;sfMat3x3ScMul <void(,*:SfMatrix3x3,*:SfMatrix3x3,float)>
;sfMat3x3MulCol <void(,*:SfVector3,*:SfMatrix3x3,*:SfVector3)>
;sfMat3x3RowMul <void(,*:SfVector3,*:SfVector3,*:SfMatrix3x3)>
;sfWaitFrame <void(,int)>
[3:491] ;sfWaitFrameOut( frame + svFrameCount );
VBC5_PUSH_CONST 17 | 0x80000000 //import func index sfWaitFrameOut
VBC2_PUSH_LOCAL 2 //frame
VBC3_PUSH_GLOBAL 1 //svFrameCount
VBC1_ADD
VBC1_CALL1
VBC1_STACK_UP2//remove result, call address and params
[3:497] ;
VBC1_RETURN
;sfUnitParamRead <int(,int,int,*int)>
[3:499] ;if( !sfUnitParamQueryRead( devId, paramIndex ) )
VBC5_PUSH_CONST 66 | 0x80000000 //import func index sfUnitParamQueryRead
VBC2_PUSH_LOCAL 4 //devId
VBC2_PUSH_LOCAL 3 //paramIndex
VBC1_CALL2
VBC1_STACK_UP2//remove call address and params
VBC1_LNOT
VBC4_FALSE_JUMP LAB90 //if to false
;return 0;
VBC1_PUSH_0 
VBC2_POP_RESULT 5
VBC1_RETURN
LAB90: //if else
[3:503] ;sfWaitNextFrame();
VBC1_WAIT
[3:504] ;sfWaitNextFrame();
VBC1_WAIT
[3:505] ;return sfUnitParamStatusRead( devId, paramIndex, paramValue );
VBC5_PUSH_CONST 68 | 0x80000000 //import func index sfUnitParamStatusRead
VBC2_PUSH_LOCAL 4 //devId
VBC2_PUSH_LOCAL 3 //paramIndex
VBC2_PUSH_LOCAL 2 //paramValue
VBC1_CALL3
VBC1_STACK_UP3//remove call address and params
VBC2_POP_RESULT 5
VBC1_RETURN
;page_0 <void()>
[1:22] ;frameCount = 250;
VBC2_PUSH_CONST 3 //frameCount
VBC3_PUSH_CONST 250 
VBC1_POP
[1:23] ;frameCount *= factor;
VBC2_PUSH_CONST 3 //frameCount
VBC1_PUSH_TOS
VBC1_LOAD
VBC3_PUSH_GLOBAL 4 //factor
VBC1_MUL_IF
VBC1_POP_CI
[1:24] ;sfPoseGroup(1056964607 , 0, frameCount);
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC5_PUSH_CONST 1056964607 
VBC1_PUSH_0 
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:25] ;sfWaitFrame(frameCount);
VBC2_PUSH_CONST 56  //func address sfWaitFrame
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL1
VBC1_STACK_UP2//remove result, call address and params
[1:28] ;
VBC1_RETURN
;page_1 <void()>
[1:29] ;frameCount = 30;
VBC2_PUSH_CONST 3 //frameCount
VBC2_PUSH_CONST 30 
VBC1_POP
[1:30] ;frameCount *= factor;
VBC2_PUSH_CONST 3 //frameCount
VBC1_PUSH_TOS
VBC1_LOAD
VBC3_PUSH_GLOBAL 4 //factor
VBC1_MUL_IF
VBC1_POP_CI
[1:31] ;sfPoseGroup((524288  | 262144 ), 3072, frameCount);
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC4_PUSH_CONST 786432 
VBC3_PUSH_CONST 3072 
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:32] ;sfPoseGroup((131072  | 65536  | 134217728  | 67108864  ), 3072, frameCount);
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC5_PUSH_CONST 201523200 
VBC3_PUSH_CONST 3072 
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:35] ;sfPoseGroup((32768  | 16384 ), 3456, frameCount);
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC4_PUSH_CONST 49152 
VBC3_PUSH_CONST 3456 
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:36] ;sfPoseGroup((32  | 16 ), 460, frameCount);
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC2_PUSH_CONST 48 
VBC3_PUSH_CONST 460 
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:37] ;sfPoseGroup((8  | 4 ), -1022, frameCount);
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC2_PUSH_CONST 12 
VBC3_PUSH_CONST -1022 // -
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:38] ;sfPoseGroup((8  | 4 ), -3000, frameCount);
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC2_PUSH_CONST 12 
VBC3_PUSH_CONST -3000 // -
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:39] ;sfPoseGroup(33554432 , -921, frameCount);
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC5_PUSH_CONST 33554432 
VBC3_PUSH_CONST -921 // -
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:40] ;sfPoseGroup(33554432 , 4000, frameCount);
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC5_PUSH_CONST 33554432 
VBC3_PUSH_CONST 4000 
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:41] ;sfWaitFrame(frameCount);
VBC2_PUSH_CONST 56  //func address sfWaitFrame
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL1
VBC1_STACK_UP2//remove result, call address and params
[1:44] ;
VBC1_RETURN
;page_2 <void()>
[1:45] ;frameCount = 30; 
VBC2_PUSH_CONST 3 //frameCount
VBC2_PUSH_CONST 30 
VBC1_POP
[1:46] ;frameCount *= factor;
VBC2_PUSH_CONST 3 //frameCount
VBC1_PUSH_TOS
VBC1_LOAD
VBC3_PUSH_GLOBAL 4 //factor
VBC1_MUL_IF
VBC1_POP_CI
[1:48] ;sfPoseGroup((524288  | 262144 ), 2680 + tuner, frameCount);
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC4_PUSH_CONST 786432 
VBC3_PUSH_CONST 2680 
VBC3_PUSH_GLOBAL 5 //tuner
VBC1_ADD
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:50] ;sfPoseGroup((32768  | 16384 ), 4100, frameCount);
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC4_PUSH_CONST 49152 
VBC3_PUSH_CONST 4100 
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:52] ;sfWaitFrame(frameCount);
VBC2_PUSH_CONST 56  //func address sfWaitFrame
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL1
VBC1_STACK_UP2//remove result, call address and params
[1:55] ;
VBC1_RETURN
;page_3 <void(,int)>
[1:56] ;frameCount = 1;  		
VBC2_PUSH_CONST 3 //frameCount
VBC1_PUSH_1 
VBC1_POP
[1:58] ;sfPoseGroupLin((524288  | 262144 ), 3072 + i, frameCount);
VBC5_PUSH_CONST 56 | 0x80000000 //import func index sfPoseGroupLin
VBC4_PUSH_CONST 786432 
VBC3_PUSH_CONST 3072 
VBC2_PUSH_LOCAL 2 //i
VBC1_ADD
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:59] ;sfPoseGroupLin((131072  | 65536  | 134217728  | 67108864  ), 1920 + i, frameCount);
VBC5_PUSH_CONST 56 | 0x80000000 //import func index sfPoseGroupLin
VBC5_PUSH_CONST 201523200 
VBC3_PUSH_CONST 1920 
VBC2_PUSH_LOCAL 2 //i
VBC1_ADD
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:61] ;sfPoseGroupLin((32768  | 16384 ), 1536 + i, frameCount);
VBC5_PUSH_CONST 56 | 0x80000000 //import func index sfPoseGroupLin
VBC4_PUSH_CONST 49152 
VBC3_PUSH_CONST 1536 
VBC2_PUSH_LOCAL 2 //i
VBC1_ADD
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:62] ;sfPoseGroupLin((8  | 4 ), 2304 + i, frameCount);
VBC5_PUSH_CONST 56 | 0x80000000 //import func index sfPoseGroupLin
VBC2_PUSH_CONST 12 
VBC3_PUSH_CONST 2304 
VBC2_PUSH_LOCAL 2 //i
VBC1_ADD
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:63] ;sfPoseGroup(33554432 , -921 + i, frameCount);
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC5_PUSH_CONST 33554432 
VBC3_PUSH_CONST -921 // -
VBC2_PUSH_LOCAL 2 //i
VBC1_ADD
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:64] ;sfWaitFrame(frameCount);
VBC2_PUSH_CONST 56  //func address sfWaitFrame
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL1
VBC1_STACK_UP2//remove result, call address and params
[1:67] ;
VBC1_RETURN
;page_4 <void(,int)>
[1:68] ;frameCount = 1; 
VBC2_PUSH_CONST 3 //frameCount
VBC1_PUSH_1 
VBC1_POP
[1:70] ;sfPoseGroupLin((2097152  | 1048576 ), 921 + i, frameCount);
VBC5_PUSH_CONST 56 | 0x80000000 //import func index sfPoseGroupLin
VBC4_PUSH_CONST 3145728 
VBC3_PUSH_CONST 921 
VBC2_PUSH_LOCAL 2 //i
VBC1_ADD
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:71] ;sfPoseGroupLin((524288  | 262144 ), -307 + i, frameCount);
VBC5_PUSH_CONST 56 | 0x80000000 //import func index sfPoseGroupLin
VBC4_PUSH_CONST 786432 
VBC3_PUSH_CONST -307 // -
VBC2_PUSH_LOCAL 2 //i
VBC1_ADD
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:72] ;sfPoseGroupLin((524288  | 262144 ), -907 + i, frameCount);
VBC5_PUSH_CONST 56 | 0x80000000 //import func index sfPoseGroupLin
VBC4_PUSH_CONST 786432 
VBC3_PUSH_CONST -907 // -
VBC2_PUSH_LOCAL 2 //i
VBC1_ADD
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:73] ;sfPoseGroupLin((131072  | 65536  | 134217728  | 67108864  ), 153 + i, frameCount);
VBC5_PUSH_CONST 56 | 0x80000000 //import func index sfPoseGroupLin
VBC5_PUSH_CONST 201523200 
VBC3_PUSH_CONST 153 
VBC2_PUSH_LOCAL 2 //i
VBC1_ADD
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:76] ;sfPoseGroupLin((32768  | 16384 ), -1996 + i, frameCount);
VBC5_PUSH_CONST 56 | 0x80000000 //import func index sfPoseGroupLin
VBC4_PUSH_CONST 49152 
VBC3_PUSH_CONST -1996 // -
VBC2_PUSH_LOCAL 2 //i
VBC1_ADD
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:78] ;sfPoseGroupLin((8  | 4 ), 3840 + i, frameCount);
VBC5_PUSH_CONST 56 | 0x80000000 //import func index sfPoseGroupLin
VBC2_PUSH_CONST 12 
VBC3_PUSH_CONST 3840 
VBC2_PUSH_LOCAL 2 //i
VBC1_ADD
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:79] ;sfPoseGroup(33554432 , -921 + i, frameCount);
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC5_PUSH_CONST 33554432 
VBC3_PUSH_CONST -921 // -
VBC2_PUSH_LOCAL 2 //i
VBC1_ADD
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:80] ;sfWaitFrame(frameCount);
VBC2_PUSH_CONST 56  //func address sfWaitFrame
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL1
VBC1_STACK_UP2//remove result, call address and params
[1:82] ;
VBC1_RETURN
;page_5 <void(,int)>
[1:83] ;frameCount = 1;		
VBC2_PUSH_CONST 3 //frameCount
VBC1_PUSH_1 
VBC1_POP
[1:84] ;frameCount *= factor;
VBC2_PUSH_CONST 3 //frameCount
VBC1_PUSH_TOS
VBC1_LOAD
VBC3_PUSH_GLOBAL 4 //factor
VBC1_MUL_IF
VBC1_POP_CI
[1:85] ;sfPoseGroupLin((2097152  | 1048576 ), 1536 + i, frameCount);
VBC5_PUSH_CONST 56 | 0x80000000 //import func index sfPoseGroupLin
VBC4_PUSH_CONST 3145728 
VBC3_PUSH_CONST 1536 
VBC2_PUSH_LOCAL 2 //i
VBC1_ADD
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:86] ;sfPoseGroupLin((524288  | 262144 ), -1474 + i, frameCount);
VBC5_PUSH_CONST 56 | 0x80000000 //import func index sfPoseGroupLin
VBC4_PUSH_CONST 786432 
VBC3_PUSH_CONST -1474 // -
VBC2_PUSH_LOCAL 2 //i
VBC1_ADD
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:88] ;sfPoseGroupLin((131072  | 65536  | 134217728  | 67108864  ), 0 + i, frameCount);
VBC5_PUSH_CONST 56 | 0x80000000 //import func index sfPoseGroupLin
VBC5_PUSH_CONST 201523200 
VBC1_PUSH_0 
VBC2_PUSH_LOCAL 2 //i
VBC1_ADD
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:90] ;sfPoseGroupLin((32768  | 16384 ), -2304 + i, frameCount);
VBC5_PUSH_CONST 56 | 0x80000000 //import func index sfPoseGroupLin
VBC4_PUSH_CONST 49152 
VBC3_PUSH_CONST -2304 // -
VBC2_PUSH_LOCAL 2 //i
VBC1_ADD
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:92] ;sfPoseGroupLin((512  | 256 ), 622 + i, frameCount);
VBC5_PUSH_CONST 56 | 0x80000000 //import func index sfPoseGroupLin
VBC3_PUSH_CONST 768 
VBC3_PUSH_CONST 622 
VBC2_PUSH_LOCAL 2 //i
VBC1_ADD
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:94] ;sfPoseGroupLin((8  | 4 ), 3840 + i, frameCount);
VBC5_PUSH_CONST 56 | 0x80000000 //import func index sfPoseGroupLin
VBC2_PUSH_CONST 12 
VBC3_PUSH_CONST 3840 
VBC2_PUSH_LOCAL 2 //i
VBC1_ADD
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:95] ;sfPoseGroup(33554432 , -921 + i, frameCount);
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC5_PUSH_CONST 33554432 
VBC3_PUSH_CONST -921 // -
VBC2_PUSH_LOCAL 2 //i
VBC1_ADD
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:96] ;sfWaitFrame(frameCount);
VBC2_PUSH_CONST 56  //func address sfWaitFrame
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL1
VBC1_STACK_UP2//remove result, call address and params
[1:99] ;
VBC1_RETURN
;page_6 <void(,int)>
[1:100] ;frameCount = 1;		
VBC2_PUSH_CONST 3 //frameCount
VBC1_PUSH_1 
VBC1_POP
[1:102] ;sfPoseGroupLin((2097152  | 1048576 ), 0 + i, frameCount);
VBC5_PUSH_CONST 56 | 0x80000000 //import func index sfPoseGroupLin
VBC4_PUSH_CONST 3145728 
VBC1_PUSH_0 
VBC2_PUSH_LOCAL 2 //i
VBC1_ADD
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:103] ;sfPoseGroupLin((524288  | 262144 ), 3429 + i, frameCount);
VBC5_PUSH_CONST 56 | 0x80000000 //import func index sfPoseGroupLin
VBC4_PUSH_CONST 786432 
VBC3_PUSH_CONST 3429 
VBC2_PUSH_LOCAL 2 //i
VBC1_ADD
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:105] ;sfPoseGroupLin((131072  | 65536  | 134217728  | 67108864  ), 3500 + i, frameCount);
VBC5_PUSH_CONST 56 | 0x80000000 //import func index sfPoseGroupLin
VBC5_PUSH_CONST 201523200 
VBC3_PUSH_CONST 3500 
VBC2_PUSH_LOCAL 2 //i
VBC1_ADD
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:109] ;sfPoseGroupLin((32768  | 16384 ), 5600 + i, frameCount);
VBC5_PUSH_CONST 56 | 0x80000000 //import func index sfPoseGroupLin
VBC4_PUSH_CONST 49152 
VBC3_PUSH_CONST 5600 
VBC2_PUSH_LOCAL 2 //i
VBC1_ADD
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:111] ;sfPoseGroupLin((512  | 256 ), -921 + i, frameCount);
VBC5_PUSH_CONST 56 | 0x80000000 //import func index sfPoseGroupLin
VBC3_PUSH_CONST 768 
VBC3_PUSH_CONST -921 // -
VBC2_PUSH_LOCAL 2 //i
VBC1_ADD
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:112] ;sfPoseGroupLin((8  | 4 ), -4094 + i, frameCount);
VBC5_PUSH_CONST 56 | 0x80000000 //import func index sfPoseGroupLin
VBC2_PUSH_CONST 12 
VBC3_PUSH_CONST -4094 // -
VBC2_PUSH_LOCAL 2 //i
VBC1_ADD
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:113] ;sfPoseGroup(33554432 , 4000+ i, frameCount);
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC5_PUSH_CONST 33554432 
VBC3_PUSH_CONST 4000 
VBC2_PUSH_LOCAL 2 //i
VBC1_ADD
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:114] ;sfWaitFrame(frameCount);
VBC2_PUSH_CONST 56  //func address sfWaitFrame
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL1
VBC1_STACK_UP2//remove result, call address and params
[1:117] ;
VBC1_RETURN
;page_6_1 <void(,int)>
[1:118] ;frameCount = 1;
VBC2_PUSH_CONST 3 //frameCount
VBC1_PUSH_1 
VBC1_POP
[1:119] ;frameCount *= factor;
VBC2_PUSH_CONST 3 //frameCount
VBC1_PUSH_TOS
VBC1_LOAD
VBC3_PUSH_GLOBAL 4 //factor
VBC1_MUL_IF
VBC1_POP_CI
[1:120] ;sfPoseGroupLin((2097152  | 1048576 ), 0, frameCount);
VBC5_PUSH_CONST 56 | 0x80000000 //import func index sfPoseGroupLin
VBC4_PUSH_CONST 3145728 
VBC1_PUSH_0 
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:121] ;sfPoseGroupLin((524288  | 262144 ), 3429, frameCount);
VBC5_PUSH_CONST 56 | 0x80000000 //import func index sfPoseGroupLin
VBC4_PUSH_CONST 786432 
VBC3_PUSH_CONST 3429 
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:123] ;sfPoseGroupLin((131072  | 65536  | 134217728  | 67108864  ), 3500, frameCount);
VBC5_PUSH_CONST 56 | 0x80000000 //import func index sfPoseGroupLin
VBC5_PUSH_CONST 201523200 
VBC3_PUSH_CONST 3500 
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:127] ;sfPoseGroupLin((32768  | 16384 ), 5191, frameCount);
VBC5_PUSH_CONST 56 | 0x80000000 //import func index sfPoseGroupLin
VBC4_PUSH_CONST 49152 
VBC3_PUSH_CONST 5191 
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:128] ;sfPoseGroupLin((32768  | 16384 ), 3500, frameCount);
VBC5_PUSH_CONST 56 | 0x80000000 //import func index sfPoseGroupLin
VBC4_PUSH_CONST 49152 
VBC3_PUSH_CONST 3500 
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:129] ;sfPoseGroupLin((512  | 256 ), -921, frameCount);
VBC5_PUSH_CONST 56 | 0x80000000 //import func index sfPoseGroupLin
VBC3_PUSH_CONST 768 
VBC3_PUSH_CONST -921 // -
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:130] ;sfPoseGroupLin((8  | 4 ), -3583, frameCount);
VBC5_PUSH_CONST 56 | 0x80000000 //import func index sfPoseGroupLin
VBC2_PUSH_CONST 12 
VBC3_PUSH_CONST -3583 // -
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:131] ;sfWaitFrame(frameCount);
VBC2_PUSH_CONST 56  //func address sfWaitFrame
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL1
VBC1_STACK_UP2//remove result, call address and params
[1:134] ;
VBC1_RETURN
;page_7 <void()>
[1:135] ;frameCount = 2;
VBC2_PUSH_CONST 3 //frameCount
VBC1_PUSH_2 
VBC1_POP
[1:137] ;sfWaitFrame(frameCount);
VBC2_PUSH_CONST 56  //func address sfWaitFrame
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL1
VBC1_STACK_UP2//remove result, call address and params
[1:140] ;
VBC1_RETURN
;page_8_ <void(,int)>
[1:141] ;frameCount = 1;		
VBC2_PUSH_CONST 3 //frameCount
VBC1_PUSH_1 
VBC1_POP
[1:142] ;frameCount *= factor;
VBC2_PUSH_CONST 3 //frameCount
VBC1_PUSH_TOS
VBC1_LOAD
VBC3_PUSH_GLOBAL 4 //factor
VBC1_MUL_IF
VBC1_POP_CI
[1:143] ;sfPoseGroupLin((524288  | 262144 ), 3993 + i, frameCount);
VBC5_PUSH_CONST 56 | 0x80000000 //import func index sfPoseGroupLin
VBC4_PUSH_CONST 786432 
VBC3_PUSH_CONST 3993 
VBC2_PUSH_LOCAL 2 //i
VBC1_ADD
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:144] ;sfPoseGroupLin((524288  | 262144 ), 3000 + i, frameCount);
VBC5_PUSH_CONST 56 | 0x80000000 //import func index sfPoseGroupLin
VBC4_PUSH_CONST 786432 
VBC3_PUSH_CONST 3000 
VBC2_PUSH_LOCAL 2 //i
VBC1_ADD
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:146] ;sfPoseGroupLin((32768  | 16384 ), 5600 + i, frameCount);
VBC5_PUSH_CONST 56 | 0x80000000 //import func index sfPoseGroupLin
VBC4_PUSH_CONST 49152 
VBC3_PUSH_CONST 5600 
VBC2_PUSH_LOCAL 2 //i
VBC1_ADD
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:147] ;sfPoseGroupLin((32768  | 16384 ), 5000 + i, frameCount);
VBC5_PUSH_CONST 56 | 0x80000000 //import func index sfPoseGroupLin
VBC4_PUSH_CONST 49152 
VBC3_PUSH_CONST 5000 
VBC2_PUSH_LOCAL 2 //i
VBC1_ADD
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:148] ;sfPoseGroupLin((32768  | 16384 ), 4800 + i, frameCount);
VBC5_PUSH_CONST 56 | 0x80000000 //import func index sfPoseGroupLin
VBC4_PUSH_CONST 49152 
VBC3_PUSH_CONST 4800 
VBC2_PUSH_LOCAL 2 //i
VBC1_ADD
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:149] ;sfPoseGroupLin((512  | 256 ), -921 + i, frameCount);
VBC5_PUSH_CONST 56 | 0x80000000 //import func index sfPoseGroupLin
VBC3_PUSH_CONST 768 
VBC3_PUSH_CONST -921 // -
VBC2_PUSH_LOCAL 2 //i
VBC1_ADD
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:150] ;sfPoseGroupLin((8  | 4 ), -4094 + i, frameCount);
VBC5_PUSH_CONST 56 | 0x80000000 //import func index sfPoseGroupLin
VBC2_PUSH_CONST 12 
VBC3_PUSH_CONST -4094 // -
VBC2_PUSH_LOCAL 2 //i
VBC1_ADD
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:151] ;sfPoseGroup(33554432 , 4000+ i, frameCount);
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC5_PUSH_CONST 33554432 
VBC3_PUSH_CONST 4000 
VBC2_PUSH_LOCAL 2 //i
VBC1_ADD
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:152] ;sfWaitFrame(frameCount);
VBC2_PUSH_CONST 56  //func address sfWaitFrame
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL1
VBC1_STACK_UP2//remove result, call address and params
[1:154] ;
VBC1_RETURN
;page_8 <void(,int)>
[1:155] ;frameCount = 1;		
VBC2_PUSH_CONST 3 //frameCount
VBC1_PUSH_1 
VBC1_POP
[1:156] ;frameCount *= factor;
VBC2_PUSH_CONST 3 //frameCount
VBC1_PUSH_TOS
VBC1_LOAD
VBC3_PUSH_GLOBAL 4 //factor
VBC1_MUL_IF
VBC1_POP_CI
[1:157] ;sfPoseGroupLin((524288  | 262144 ), 3993 , frameCount);
VBC5_PUSH_CONST 56 | 0x80000000 //import func index sfPoseGroupLin
VBC4_PUSH_CONST 786432 
VBC3_PUSH_CONST 3993 
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:158] ;sfPoseGroupLin((524288  | 262144 ), 3000, frameCount);
VBC5_PUSH_CONST 56 | 0x80000000 //import func index sfPoseGroupLin
VBC4_PUSH_CONST 786432 
VBC3_PUSH_CONST 3000 
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:160] ;sfPoseGroupLin((32768  | 16384 ), 4800 + hip_at_landing , frameCount);
VBC5_PUSH_CONST 56 | 0x80000000 //import func index sfPoseGroupLin
VBC4_PUSH_CONST 49152 
VBC3_PUSH_CONST 4800 
VBC3_PUSH_GLOBAL 7 //hip_at_landing
VBC1_ADD
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:161] ;sfPoseGroupLin((512  | 256 ), -921 , frameCount);
VBC5_PUSH_CONST 56 | 0x80000000 //import func index sfPoseGroupLin
VBC3_PUSH_CONST 768 
VBC3_PUSH_CONST -921 // -
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:162] ;sfPoseGroupLin((8  | 4 ), -4094 , frameCount);
VBC5_PUSH_CONST 56 | 0x80000000 //import func index sfPoseGroupLin
VBC2_PUSH_CONST 12 
VBC3_PUSH_CONST -4094 // -
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:163] ;sfPoseGroup(33554432 , 4000, frameCount);
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC5_PUSH_CONST 33554432 
VBC3_PUSH_CONST 4000 
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:164] ;sfWaitFrame(frameCount);
VBC2_PUSH_CONST 56  //func address sfWaitFrame
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL1
VBC1_STACK_UP2//remove result, call address and params
[1:168] ;
VBC1_RETURN
;page_9 <void()>
[1:169] ;frameCount = 175;
VBC2_PUSH_CONST 3 //frameCount
VBC3_PUSH_CONST 175 
VBC1_POP
[1:170] ;frameCount *= factor;
VBC2_PUSH_CONST 3 //frameCount
VBC1_PUSH_TOS
VBC1_LOAD
VBC3_PUSH_GLOBAL 4 //factor
VBC1_MUL_IF
VBC1_POP_CI
[1:171] ;sfWaitFrame(frameCount);
VBC2_PUSH_CONST 56  //func address sfWaitFrame
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL1
VBC1_STACK_UP2//remove result, call address and params
[1:175] ;
VBC1_RETURN
;page_9_1 <void()>
[1:176] ;frameCount = 175;
VBC2_PUSH_CONST 3 //frameCount
VBC3_PUSH_CONST 175 
VBC1_POP
[1:177] ;frameCount *= factor;
VBC2_PUSH_CONST 3 //frameCount
VBC1_PUSH_TOS
VBC1_LOAD
VBC3_PUSH_GLOBAL 4 //factor
VBC1_MUL_IF
VBC1_POP_CI
[1:178] ;sfPoseGroup((32768  | 16384 ), 5072, frameCount);
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC4_PUSH_CONST 49152 
VBC3_PUSH_CONST 5072 
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:179] ;sfWaitFrame(frameCount);
VBC2_PUSH_CONST 56  //func address sfWaitFrame
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL1
VBC1_STACK_UP2//remove result, call address and params
[1:183] ;
VBC1_RETURN
;page_10 <void()>
[1:184] ;frameCount = 75;
VBC2_PUSH_CONST 3 //frameCount
VBC2_PUSH_CONST 75 
VBC1_POP
[1:185] ;frameCount *= factor;
VBC2_PUSH_CONST 3 //frameCount
VBC1_PUSH_TOS
VBC1_LOAD
VBC3_PUSH_GLOBAL 4 //factor
VBC1_MUL_IF
VBC1_POP_CI
[1:186] ;sfPoseGroup( (524288  | 262144 ), 3072, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC4_PUSH_CONST 786432 
VBC3_PUSH_CONST 3072 
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:187] ;sfPoseGroup( (131072  | 65536  | 134217728  | 67108864  ), 3072, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC5_PUSH_CONST 201523200 
VBC3_PUSH_CONST 3072 
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:188] ;sfPoseGroup( (32768  | 16384 ), 3456, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC4_PUSH_CONST 49152 
VBC3_PUSH_CONST 3456 
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:189] ;sfPoseGroup( (512  | 256 ), 0, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC3_PUSH_CONST 768 
VBC1_PUSH_0 
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:190] ;sfPoseGroup( (8  | 4 ), -1022, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC2_PUSH_CONST 12 
VBC3_PUSH_CONST -1022 // -
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:192] ;sfWaitFrame( frameCount );
VBC2_PUSH_CONST 56  //func address sfWaitFrame
VBC3_PUSH_GLOBAL 3 //frameCount
VBC1_CALL1
VBC1_STACK_UP2//remove result, call address and params
[1:195] ;
VBC1_RETURN
;main <void()>
VBC1_STACK_DN2//local vars 2
[1:196] ;
[1:197] ;
[1:198] ;tuner = 0;
VBC2_PUSH_CONST 5 //tuner
VBC1_PUSH_0 
VBC1_POP
[1:199] ;factor = 0.9; 
VBC2_PUSH_CONST 4 //factor
VBC5_PUSH_CONST 1063675494 
VBC1_POP
[1:200] ;hip_at_landing = 0;
VBC2_PUSH_CONST 7 //hip_at_landing
VBC1_PUSH_0 
VBC1_POP
[1:212] ;while (pitStop == 0) sfWaitFrame(1); 
LAB1568: //while condition
VBC3_PUSH_GLOBAL 6 //pitStop
VBC1_PUSH_0 
VBC1_EQU
VBC4_FALSE_JUMP LAB1586 //while to exit
;while (pitStop == 0) sfWaitFrame(1); 
VBC2_PUSH_CONST 56  //func address sfWaitFrame
VBC1_PUSH_1 
VBC1_CALL1
VBC1_STACK_UP2//remove result, call address and params
VBC4_JUMP LAB1568 //while forever loop
LAB1586: //while exit
[1:213] ;for( jump = 0; jump < 3; i++ ){
VBC2_PUSH_B_OFFSET -2 //jump
VBC1_PUSH_0 
VBC1_POP
LAB1590: //for condition
VBC2_PUSH_LOCAL -2 //jump
VBC2_PUSH_CONST 3 
VBC1_LESS
VBC4_FALSE_JUMP LAB1796 //to for exit
;
[1:214] ;page_1();
VBC3_PUSH_CONST 147  //func address page_1
VBC1_CALL0
VBC1_STACK_UP1//remove result, call address and params
[1:215] ;page_2();
VBC3_PUSH_CONST 302  //func address page_2
VBC1_CALL0
VBC1_STACK_UP1//remove result, call address and params
[1:217] ;for( i = 0; i < 15 * factor; i++ ) page_3(i);
VBC2_PUSH_B_OFFSET -1 //i
VBC1_PUSH_0 
VBC1_POP
LAB1613: //for condition
VBC2_PUSH_LOCAL -1 //i
VBC2_PUSH_CONST 15 
VBC3_PUSH_GLOBAL 4 //factor
VBC1_MUL_IF
VBC1_LESS_IF
VBC4_FALSE_JUMP LAB1640 //to for exit
;for( i = 0; i < 15 * factor; i++ ) page_3(i);
VBC3_PUSH_CONST 362  //func address page_3
VBC2_PUSH_LOCAL -1 //i
VBC1_CALL1
VBC1_STACK_UP2//remove result, call address and params
LAB1633: //for step
VBC2_PUSH_B_OFFSET -1 //i
VBC1_INC
VBC4_JUMP LAB1613 //to condition
LAB1640: //for exit
[1:218] ;for( i = 0; i < 8 * factor; i++ ) page_4(i);
VBC2_PUSH_B_OFFSET -1 //i
VBC1_PUSH_0 
VBC1_POP
LAB1644: //for condition
VBC2_PUSH_LOCAL -1 //i
VBC2_PUSH_CONST 8 
VBC3_PUSH_GLOBAL 4 //factor
VBC1_MUL_IF
VBC1_LESS_IF
VBC4_FALSE_JUMP LAB1671 //to for exit
;for( i = 0; i < 8 * factor; i++ ) page_4(i);
VBC3_PUSH_CONST 474  //func address page_4
VBC2_PUSH_LOCAL -1 //i
VBC1_CALL1
VBC1_STACK_UP2//remove result, call address and params
LAB1664: //for step
VBC2_PUSH_B_OFFSET -1 //i
VBC1_INC
VBC4_JUMP LAB1644 //to condition
LAB1671: //for exit
[1:219] ;for( i = 0; i < 3 * factor; i++ ) page_5(i);
VBC2_PUSH_B_OFFSET -1 //i
VBC1_PUSH_0 
VBC1_POP
LAB1675: //for condition
VBC2_PUSH_LOCAL -1 //i
VBC2_PUSH_CONST 3 
VBC3_PUSH_GLOBAL 4 //factor
VBC1_MUL_IF
VBC1_LESS_IF
VBC4_FALSE_JUMP LAB1702 //to for exit
;for( i = 0; i < 3 * factor; i++ ) page_5(i);
VBC3_PUSH_CONST 626  //func address page_5
VBC2_PUSH_LOCAL -1 //i
VBC1_CALL1
VBC1_STACK_UP2//remove result, call address and params
LAB1695: //for step
VBC2_PUSH_B_OFFSET -1 //i
VBC1_INC
VBC4_JUMP LAB1675 //to condition
LAB1702: //for exit
[1:220] ;for( i = 0; i < 2 * factor; i++ ) page_6(i);
VBC2_PUSH_B_OFFSET -1 //i
VBC1_PUSH_0 
VBC1_POP
LAB1706: //for condition
VBC2_PUSH_LOCAL -1 //i
VBC1_PUSH_2 
VBC3_PUSH_GLOBAL 4 //factor
VBC1_MUL_IF
VBC1_LESS_IF
VBC4_FALSE_JUMP LAB1732 //to for exit
;for( i = 0; i < 2 * factor; i++ ) page_6(i);
VBC3_PUSH_CONST 784  //func address page_6
VBC2_PUSH_LOCAL -1 //i
VBC1_CALL1
VBC1_STACK_UP2//remove result, call address and params
LAB1725: //for step
VBC2_PUSH_B_OFFSET -1 //i
VBC1_INC
VBC4_JUMP LAB1706 //to condition
LAB1732: //for exit
[1:229] ;page_7();
VBC3_PUSH_CONST 1069  //func address page_7
VBC1_CALL0
VBC1_STACK_UP1//remove result, call address and params
[1:230] ;for( i = 0; i < 6 * factor; i++ ) page_8(i);
VBC2_PUSH_B_OFFSET -1 //i
VBC1_PUSH_0 
VBC1_POP
LAB1741: //for condition
VBC2_PUSH_LOCAL -1 //i
VBC2_PUSH_CONST 6 
VBC3_PUSH_GLOBAL 4 //factor
VBC1_MUL_IF
VBC1_LESS_IF
VBC4_FALSE_JUMP LAB1768 //to for exit
;for( i = 0; i < 6 * factor; i++ ) page_8(i);
VBC3_PUSH_CONST 1260  //func address page_8
VBC2_PUSH_LOCAL -1 //i
VBC1_CALL1
VBC1_STACK_UP2//remove result, call address and params
LAB1761: //for step
VBC2_PUSH_B_OFFSET -1 //i
VBC1_INC
VBC4_JUMP LAB1741 //to condition
LAB1768: //for exit
[1:231] ;page_9();
VBC3_PUSH_CONST 1385  //func address page_9
VBC1_CALL0
VBC1_STACK_UP1//remove result, call address and params
[1:232] ;page_9_1();
VBC3_PUSH_CONST 1408  //func address page_9_1
VBC1_CALL0
VBC1_STACK_UP1//remove result, call address and params
[1:233] ;page_0();
VBC2_PUSH_CONST 108  //func address page_0
VBC1_CALL0
VBC1_STACK_UP1//remove result, call address and params
[1:235] ;sfWaitFrame( 800 );
VBC2_PUSH_CONST 56  //func address sfWaitFrame
VBC3_PUSH_CONST 800 
VBC1_CALL1
VBC1_STACK_UP2//remove result, call address and params
LAB1789: //for step
VBC2_PUSH_B_OFFSET -1 //i
VBC1_INC
VBC4_JUMP LAB1590 //to condition
LAB1796: //for exit
[1:237] ;
VBC1_RETURN
//Init table
//Variables
svFrameCount : 1
svImuAccX : 2560
svImuAccY : 2561
svImuAccZ : 2562
svImuAccRawX : 2563
svImuAccRawY : 2564
svImuAccRawZ : 2565
svImuGyroX : 2566
svImuGyroY : 2567
svImuGyroZ : 2568
svImuGyroRawX : 2569
svImuGyroRawY : 2570
svImuGyroRawZ : 2571
svImuQuaterX : 2572
svImuQuaterY : 2573
svImuQuaterZ : 2574
svImuQuaterW : 2575
svImuQuaterAcc : 2576
svImuAccSlowX : 2577
svImuAccSlowY : 2578
svImuAccSlowZ : 2579
svAdc : 2580
svButtonLeft : 2581
svButtonRight : 2582
svButtonPress : 2583
svHeadControlMask : 2584
svDefFrameCount : 2585
svEulerYaw F: 2600
svEulerPitch F: 2601
svEulerRoll F: 2602
svRemoteStatus : 3250
svRemoteButton : 3251
svRemoteLeftJoystick : 3252
svRemoteLeftJoystickX : 3253
svRemoteLeftJoystickY : 3254
svRemoteRightJoystick : 3255
svRemoteRightJoystickX : 3256
svRemoteRightJoystickY : 3257
svHumoModelDistPelvic : 3264
svHumoModelLengthPelvicHip : 3265
svHumoModelLengthHipHip : 3266
svHumoModelLengthHipKnee : 3267
svHumoModelLengthKneeFoot : 3268
svHumoModelLengthFootFoot : 3269
svHumoModelDistFootFloor : 3270
svHumoModelFootLength : 3271
svHumoModelFootWidth : 3272
svHumoModelFootCenterBack : 3273
svHumoModelFootCenterInner : 3274
svHumoModelAngPelvic : 3258
svHumoModelAngHipSide : 3260
svHumoModelAngHip : 3259
svHumoModelAngKnee : 3261
svHumoModelAngFoot : 3262
svHumoModelAngFootSide : 3263
svIkA5 F: 3275
svIkB5 F: 3276
svIkC5 F: 3277
svIkA6 F: 3278
svIkA7 F: 3279
svIkA8 F: 3280
svIkA9 F: 3281
svIkA10 F: 3282
svIkB10 F: 3283
svIkC10 F: 3284
svIkLimA5min F: 3285
svIkLimA5max F: 3286
svIkLimA6min F: 3287
svIkLimA6max F: 3288
svIkLimA7min F: 3289
svIkLimA7max F: 3290
svIkLimA8min F: 3291
svIkLimA8max F: 3292
svIkLimA9min F: 3293
svIkLimA9max F: 3294
svIkLimA10min F: 3295
svIkLimA10max F: 3296
svIkOutPresent : 3297
svIkEncA5 : 3298
svIkEncA6 : 3299
svIkEncA7 : 3300
svIkEncA8 : 3301
svIkEncA9 : 3302
svIkEncA10 : 3303
headRotateTarget : 2610
headRotateCurrent : 2611
headRotatePwm : 2612
headRotateVelo : 2613
headRotateFlags : 2615
headRotateAddonMix : 2617
torsoRotateTarget : 2626
torsoRotateCurrent : 2627
torsoRotatePwm : 2628
torsoRotateVelo : 2629
torsoRotateFlags : 2631
torsoRotateAddonMix : 2633
rightClavicleTarget : 2642
rightClavicleCurrent : 2643
rightClaviclePwm : 2644
rightClavicleVelo : 2645
rightClavicleFlags : 2647
rightClavicleAddonMix : 2649
leftClavicleTarget : 2658
leftClavicleCurrent : 2659
leftClaviclePwm : 2660
leftClavicleVelo : 2661
leftClavicleFlags : 2663
leftClavicleAddonMix : 2665
rightShoulderTarget : 2674
rightShoulderCurrent : 2675
rightShoulderPwm : 2676
rightShoulderVelo : 2677
rightShoulderFlags : 2679
rightShoulderAddonMix : 2681
leftShoulderTarget : 2690
leftShoulderCurrent : 2691
leftShoulderPwm : 2692
leftShoulderVelo : 2693
leftShoulderFlags : 2695
leftShoulderAddonMix : 2697
rightElbowSideTarget : 2706
rightElbowSideCurrent : 2707
rightElbowSidePwm : 2708
rightElbowSideVelo : 2709
rightElbowSideFlags : 2711
rightElbowSideAddonMix : 2713
leftElbowSideTarget : 2722
leftElbowSideCurrent : 2723
leftElbowSidePwm : 2724
leftElbowSideVelo : 2725
leftElbowSideFlags : 2727
leftElbowSideAddonMix : 2729
rightElbowTarget : 2738
rightElbowCurrent : 2739
rightElbowPwm : 2740
rightElbowVelo : 2741
rightElbowFlags : 2743
rightElbowAddonMix : 2745
leftElbowTarget : 2754
leftElbowCurrent : 2755
leftElbowPwm : 2756
leftElbowVelo : 2757
leftElbowFlags : 2759
leftElbowAddonMix : 2761
rightPelvicTarget : 2770
rightPelvicCurrent : 2771
rightPelvicPwm : 2772
rightPelvicVelo : 2773
rightPelvicFlags : 2775
rightPelvicAddonMix : 2777
leftPelvicTarget : 2786
leftPelvicCurrent : 2787
leftPelvicPwm : 2788
leftPelvicVelo : 2789
leftPelvicFlags : 2791
leftPelvicAddonMix : 2793
rightHipSideTarget : 2802
rightHipSideCurrent : 2803
rightHipSidePwm : 2804
rightHipSideVelo : 2805
rightHipSideFlags : 2807
rightHipSideAddonMix : 2809
leftHipSideTarget : 2818
leftHipSideCurrent : 2819
leftHipSidePwm : 2820
leftHipSideVelo : 2821
leftHipSideFlags : 2823
leftHipSideAddonMix : 2825
rightHipTarget : 2834
rightHipCurrent : 2835
rightHipPwm : 2836
rightHipVelo : 2837
rightHipFlags : 2839
rightHipAddonMix : 2841
leftHipTarget : 2850
leftHipCurrent : 2851
leftHipPwm : 2852
leftHipVelo : 2853
leftHipFlags : 2855
leftHipAddonMix : 2857
rightKneeTarget : 2866
rightKneeCurrent : 2867
rightKneePwm : 2868
rightKneeVelo : 2869
rightKneeFlags : 2871
rightKneeAddonMix : 2873
leftKneeTarget : 2882
leftKneeCurrent : 2883
leftKneePwm : 2884
leftKneeVelo : 2885
leftKneeFlags : 2887
leftKneeAddonMix : 2889
rightFootFrontTarget : 2898
rightFootFrontCurrent : 2899
rightFootFrontPwm : 2900
rightFootFrontVelo : 2901
rightFootFrontFlags : 2903
rightFootFrontAddonMix : 2905
leftFootFrontTarget : 2914
leftFootFrontCurrent : 2915
leftFootFrontPwm : 2916
leftFootFrontVelo : 2917
leftFootFrontFlags : 2919
leftFootFrontAddonMix : 2921
rightFootSideTarget : 2930
rightFootSideCurrent : 2931
rightFootSidePwm : 2932
rightFootSideVelo : 2933
rightFootSideFlags : 2935
rightFootSideAddonMix : 2937
leftFootSideTarget : 2946
leftFootSideCurrent : 2947
leftFootSidePwm : 2948
leftFootSideVelo : 2949
leftFootSideFlags : 2951
leftFootSideAddonMix : 2953
rightHandTarget : 2962
rightHandCurrent : 2963
rightHandPwm : 2964
rightHandVelo : 2965
rightHandFlags : 2967
rightHandAddonMix : 2969
leftHandTarget : 2978
leftHandCurrent : 2979
leftHandPwm : 2980
leftHandVelo : 2981
leftHandFlags : 2983
leftHandAddonMix : 2985
headTiltTarget : 3010
headTiltCurrent : 3011
headTiltPwm : 3012
headTiltVelo : 3013
headTiltFlags : 3015
headTiltAddonMix : 3017
rightKneeBotTarget : 3026
rightKneeBotCurrent : 3027
rightKneeBotPwm : 3028
rightKneeBotVelo : 3029
rightKneeBotFlags : 3031
rightKneeBotAddonMix : 3033
leftKneeBotTarget : 3042
leftKneeBotCurrent : 3043
leftKneeBotPwm : 3044
leftKneeBotVelo : 3045
leftKneeBotFlags : 3047
leftKneeBotAddonMix : 3049
rightClawTarget : 3058
rightClawCurrent : 3059
rightClawPwm : 3060
rightClawVelo : 3061
rightClawFlags : 3063
rightClawAddonMix : 3065
leftClawTarget : 3074
leftClawCurrent : 3075
leftClawPwm : 3076
leftClawVelo : 3077
leftClawFlags : 3079
leftClawAddonMix : 3081
restart_flag : 2
frameCount : 3
factor F: 4
tuner : 5
pitStop : 6
hip_at_landing : 7
