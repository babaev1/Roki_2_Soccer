//====================================================================
//      SvCompiler V9.06
//By A.Sibilev
//====================================================================
//cblock

;sfVpuVersion <int()>
;sfCreateTask <int(,*<void()>,int)>
;sfLog <void(,cstring,int,int,int)>
;sfLogOpen <void(,cstring)>
;sfLogClose <void()>
;sfWaitFrameOut <void(,int)>
;sfIsFrameOut <int(,int)>
;sfWaitNextFrame <void()>
;sfSlotIndex <int(,cstring)>
;sfSoundIndex <int(,cstring)>
;sfAbs <int(,int)>
;sfIMin <int(,int,int)>
;sfIMax <int(,int,int)>
;sfUMin <int(,int,int)>
;sfUMax <int(,int,int)>
;sfILimit <int(,int,int,int)>
;sfStop <void()>
;sfStartSlot <void(,int)>
;sfBip <void(,int,int)>
;sfWriteFlash <void()>
;sfSoundPlay <void(,int)>
;sfSoundIsPlay <int()>
;sfFreeGroup <void(,int)>
;sfPoseGroup <void(,int,int,int)>
;sfPoseGroupDelay <void(,int,int,int,int)>
;sfPoseCorrect <void(,int,int)>
;sfQueueGroup <void(,int,int,int)>
;sfPoseIdx <void(,int,int,int)>
;sfPoseGroupLin <void(,int,int,int)>
;sfStrainGroup <void(,int)>
;sfPlaySamples <void(,int,int,int,*cblock)>
;sfPlayWSamples <void(,int,int,int,*cwblock)>
;sfAccumSetup1 <void(,*int)>
;sfAccumSetup2 <void(,*int,*int)>
;sfAccumSetup3 <void(,*int,*int,*int)>
;sfAccumSetup4 <void(,*int,*int,*int,*int)>
;sfAccumTrigger <void()>
;sfAccumReset <void()>
;sfUnitParamQueryRead <int(,int,int)>
;sfUnitParamQueryWrite <int(,int,int,int)>
;sfUnitParamStatusRead <int(,int,int,*int)>
;sfMathAcos <int(,int,int)>
;sfMathSqrti <int(,int)>
;sfMathAngleOfTriangle <int(,int,int,int)>
;sfMathAngleOfKnee <int(,int,int,int)>
;sfMathCathetOfSquareTriangle <int(,int,int)>
;sfMathHypotenuseOfSquareTriangle <int(,int,int)>
;sfMathTableSin <int(,int,int)>
;sfHumoModelSetup <void()>
;sfHumoModelFootAtFloor <void(,int,int,int)>
;sfHumoModelFootPush <void(,int,int,int)>
;sfIndexOfMask <int(,int)>
;sfQueueIdxAppend <int(,int,int,int)>
;sfQueueIdxOffsets <int(,int,int,*cblock,int)>
;sfQueueIdxSinMove <int(,int,int,int,int)>
;sfQueueIdxLast <int(,int)>
;sfQueueIdxCount <int(,int)>
;sfQueueMax <int()>
;sfIkSetup <void()>
;sfIkAngle <void(,float,float,float,float,float,float,float)>
;sfMathCos <float(,float)>
;sfMathSin <float(,float)>
;sfQuaternionToEuler <void(,float,float,float,float)>
;sfQuaternionToEulerImu <void()>
;sfFMathACos <float(,float)>
;sfFMathASin <float(,float)>
;sfFMathATan <float(,float)>
;sfFMathATan2 <float(,float,float)>
;sfFMathCos <float(,float)>
;sfFMathSin <float(,float)>
;sfFMathTan <float(,float)>
;sfFMathCosh <float(,float)>
;sfFMathSinh <float(,float)>
;sfFMathTanh <float(,float)>
;sfFMathExp <float(,float)>
;sfFMathFrExp <float(,float,*int)>
;sfFMathLdExp <float(,float,int)>
;sfFMathLog <float(,float)>
;sfFMathLog10 <float(,float)>
;sfFMathModf <float(,float,*float)>
;sfFMathPow <float(,float,float)>
;sfFMathSqrt <float(,float)>
;sfFMathCeil <float(,float)>
;sfFMathFAbs <float(,float)>
;sfFMathFloor <float(,float)>
;sfFMathFMod <float(,float,float)>
;sfQuaternionToMatrix <void(,*:SfMatrix3x3,float,float,float,float)>
;sfQuaternionToMatrixImu <void(,*:SfMatrix3x3)>
;sfGravityVector <void(,*:SfVector3)>
;sfVec3Set <void(,*:SfVector3,float,float,float)>
;sfVec3Sum <void(,*:SfVector3,*:SfVector3,*:SfVector3)>
;sfVec3Diff <void(,*:SfVector3,*:SfVector3,*:SfVector3)>
;sfVec3MulRowColCx <float(,*:SfVector3,float,float,float)>
;sfVec3MulRowCol <float(,*:SfVector3,*:SfVector3)>
;sfVec3ScSum <void(,*:SfVector3,*:SfVector3,float)>
;sfVec3ScDiff <void(,*:SfVector3,*:SfVector3,float)>
;sfVec3ScMul <void(,*:SfVector3,*:SfVector3,float)>
;sfVec3ScDiv <void(,*:SfVector3,*:SfVector3,float)>
;sfMat3x3Set <void(,*:SfMatrix3x3,float,float,float,float,float,float,float,float,float)>
;sfMat3x3SetAll <void(,*:SfMatrix3x3,float)>
;sfMat3x3SetDiag <void(,*:SfMatrix3x3,float)>
;sfMat3x3Copy <void(,*:SfMatrix3x3,*:SfMatrix3x3)>
;sfMat3x3Transpose <void(,*:SfMatrix3x3,*:SfMatrix3x3)>
;sfMat3x3Mul <void(,*:SfMatrix3x3,*:SfMatrix3x3,*:SfMatrix3x3)>
;sfMat3x3ScMul <void(,*:SfMatrix3x3,*:SfMatrix3x3,float)>
;sfMat3x3MulCol <void(,*:SfVector3,*:SfMatrix3x3,*:SfVector3)>
;sfMat3x3RowMul <void(,*:SfVector3,*:SfVector3,*:SfMatrix3x3)>
;sfWaitFrame <void(,int)>
[3:491] ;sfWaitFrameOut( frame + svFrameCount );
VBC5_PUSH_CONST 17 | 0x80000000 //import func index sfWaitFrameOut
VBC2_PUSH_LOCAL 2 //frame
VBC3_PUSH_GLOBAL 1 //svFrameCount
VBC1_ADD
VBC1_CALL1
VBC1_STACK_UP2//remove result, call address and params
[3:497] ;
VBC1_RETURN
;sfUnitParamRead <int(,int,int,*int)>
[3:499] ;if( !sfUnitParamQueryRead( devId, paramIndex ) )
VBC5_PUSH_CONST 66 | 0x80000000 //import func index sfUnitParamQueryRead
VBC2_PUSH_LOCAL 4 //devId
VBC2_PUSH_LOCAL 3 //paramIndex
VBC1_CALL2
VBC1_STACK_UP2//remove call address and params
VBC1_LNOT
VBC4_FALSE_JUMP LAB90 //if to false
;return 0;
VBC1_PUSH_0 
VBC2_POP_RESULT 5
VBC1_RETURN
LAB90: //if else
[3:503] ;sfWaitNextFrame();
VBC1_WAIT
[3:504] ;sfWaitNextFrame();
VBC1_WAIT
[3:505] ;return sfUnitParamStatusRead( devId, paramIndex, paramValue );
VBC5_PUSH_CONST 68 | 0x80000000 //import func index sfUnitParamStatusRead
VBC2_PUSH_LOCAL 4 //devId
VBC2_PUSH_LOCAL 3 //paramIndex
VBC2_PUSH_LOCAL 2 //paramValue
VBC1_CALL3
VBC1_STACK_UP3//remove call address and params
VBC2_POP_RESULT 5
VBC1_RETURN
;page0 <void()>
[1:14] ;frameCount = 20;
VBC2_PUSH_CONST 5 //frameCount
VBC2_PUSH_CONST 20 
VBC1_POP
[1:15] ;sfPoseGroup( 262144 , 0, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC4_PUSH_CONST 262144 
VBC1_PUSH_0 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:16] ;sfPoseGroup( 16384 , 0, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC3_PUSH_CONST 16384 
VBC1_PUSH_0 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:17] ;sfPoseGroup( 1024 , 0, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC3_PUSH_CONST 1024 
VBC1_PUSH_0 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:18] ;sfPoseGroup( 256 , 0, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC3_PUSH_CONST 256 
VBC1_PUSH_0 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:19] ;sfPoseGroup( 64 , 0, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC2_PUSH_CONST 64 
VBC1_PUSH_0 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:20] ;sfPoseGroup( 16 , 0, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC2_PUSH_CONST 16 
VBC1_PUSH_0 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:21] ;sfPoseGroup( 4 , 0, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC2_PUSH_CONST 4 
VBC1_PUSH_0 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:22] ;sfPoseGroup( 2 , 0, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC1_PUSH_2 
VBC1_PUSH_0 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:23] ;sfPoseGroup( 2097152 , 0, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC4_PUSH_CONST 2097152 
VBC1_PUSH_0 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:24] ;sfPoseGroup( 524288 , 0, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC4_PUSH_CONST 524288 
VBC1_PUSH_0 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:25] ;sfPoseGroup( 32768 , 0, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC4_PUSH_CONST 32768 
VBC1_PUSH_0 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:26] ;sfPoseGroup( 512 , 0, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC3_PUSH_CONST 512 
VBC1_PUSH_0 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:27] ;sfPoseGroup( 128 , 0, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC3_PUSH_CONST 128 
VBC1_PUSH_0 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:28] ;sfPoseGroup( 32 , 0, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC2_PUSH_CONST 32 
VBC1_PUSH_0 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:29] ;sfPoseGroup( 8 , 0, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC2_PUSH_CONST 8 
VBC1_PUSH_0 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:30] ;sfPoseGroup( 1 , 0, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC1_PUSH_1 
VBC1_PUSH_0 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:31] ;sfPoseGroup( 33554432 , 0, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC5_PUSH_CONST 33554432 
VBC1_PUSH_0 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:32] ;sfWaitFrame( frameCount );
VBC2_PUSH_CONST 56  //func address sfWaitFrame
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL1
VBC1_STACK_UP2//remove result, call address and params
[1:36] ;
VBC1_RETURN
;page1 <void()>
[1:37] ;frameCount = 200;
VBC2_PUSH_CONST 5 //frameCount
VBC3_PUSH_CONST 200 
VBC1_POP
[1:38] ;sfPoseGroup( 262144 , -1382, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC4_PUSH_CONST 262144 
VBC3_PUSH_CONST -1382 // -
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:39] ;sfPoseGroup( 16384 , 5168, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC3_PUSH_CONST 16384 
VBC3_PUSH_CONST 5168 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:40] ;sfPoseGroup( 64 , -4096, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC2_PUSH_CONST 64 
VBC3_PUSH_CONST -4096 // -
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:41] ;sfPoseGroup( 4 , 5376, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC2_PUSH_CONST 4 
VBC3_PUSH_CONST 5376 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:42] ;sfPoseGroup( 524288 , -1382, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC4_PUSH_CONST 524288 
VBC3_PUSH_CONST -1382 // -
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:43] ;sfPoseGroup( 32768 , 5168, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC4_PUSH_CONST 32768 
VBC3_PUSH_CONST 5168 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:44] ;sfPoseGroup( 128 , -4096, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC3_PUSH_CONST 128 
VBC3_PUSH_CONST -4096 // -
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:45] ;sfPoseGroup( 8 , 5376, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC2_PUSH_CONST 8 
VBC3_PUSH_CONST 5376 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:46] ;sfPoseGroup( 16 , -300 - clamping, frameCount );  
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC2_PUSH_CONST 16 
VBC3_PUSH_CONST -300 // -
VBC3_PUSH_GLOBAL 3 //clamping
VBC1_SUB
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:47] ;sfPoseGroup( 32 , -300 - clamping, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC2_PUSH_CONST 32 
VBC3_PUSH_CONST -300 // -
VBC3_PUSH_GLOBAL 3 //clamping
VBC1_SUB
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:48] ;sfWaitFrame( frameCount );
VBC2_PUSH_CONST 56  //func address sfWaitFrame
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL1
VBC1_STACK_UP2//remove result, call address and params
[1:51] ;
VBC1_RETURN
;page2 <void()>
[1:52] ;frameCount = 400;
VBC2_PUSH_CONST 5 //frameCount
VBC3_PUSH_CONST 400 
VBC1_POP
[1:53] ;sfPoseGroup( 16 , -791 - clamping, frameCount );  
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC2_PUSH_CONST 16 
VBC3_PUSH_CONST -791 // -
VBC3_PUSH_GLOBAL 3 //clamping
VBC1_SUB
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:54] ;sfPoseGroup( 4 , 5376, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC2_PUSH_CONST 4 
VBC3_PUSH_CONST 5376 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:55] ;sfPoseGroup( 256 , 700, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC3_PUSH_CONST 256 
VBC3_PUSH_CONST 700 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:56] ;sfPoseGroup( 512 , 700, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC3_PUSH_CONST 512 
VBC3_PUSH_CONST 700 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:57] ;sfPoseGroup( 32 , -791 - clamping, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC2_PUSH_CONST 32 
VBC3_PUSH_CONST -791 // -
VBC3_PUSH_GLOBAL 3 //clamping
VBC1_SUB
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:58] ;sfPoseGroup( 8 , 5376, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC2_PUSH_CONST 8 
VBC3_PUSH_CONST 5376 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:59] ;sfWaitFrame( frameCount );
VBC2_PUSH_CONST 56  //func address sfWaitFrame
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL1
VBC1_STACK_UP2//remove result, call address and params
[1:62] ;
VBC1_RETURN
;page3 <void()>
[1:63] ;frameCount = 300;
VBC2_PUSH_CONST 5 //frameCount
VBC3_PUSH_CONST 300 
VBC1_POP
[1:64] ;sfPoseGroup( 16384 , 0, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC3_PUSH_CONST 16384 
VBC1_PUSH_0 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:65] ;sfPoseGroup( 32768 , 0, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC4_PUSH_CONST 32768 
VBC1_PUSH_0 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:66] ;sfPoseGroup( 262144 , -100, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC4_PUSH_CONST 262144 
VBC2_PUSH_CONST -100 // -
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:67] ;sfPoseGroup( 524288 , -100, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC4_PUSH_CONST 524288 
VBC2_PUSH_CONST -100 // -
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:68] ;sfWaitFrame( frameCount );
VBC2_PUSH_CONST 56  //func address sfWaitFrame
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL1
VBC1_STACK_UP2//remove result, call address and params
[1:71] ;
VBC1_RETURN
;page3_0 <void()>
[1:72] ;frameCount = 100;
VBC2_PUSH_CONST 5 //frameCount
VBC2_PUSH_CONST 100 
VBC1_POP
[1:73] ;sfPoseGroup( 4 , 1000, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC2_PUSH_CONST 4 
VBC3_PUSH_CONST 1000 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:74] ;sfPoseGroup( 8 , 1000, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC2_PUSH_CONST 8 
VBC3_PUSH_CONST 1000 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:75] ;sfWaitFrame( frameCount );
VBC2_PUSH_CONST 56  //func address sfWaitFrame
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL1
VBC1_STACK_UP2//remove result, call address and params
[1:78] ;
VBC1_RETURN
;page3_1 <void()>
[1:79] ;frameCount = 100;
VBC2_PUSH_CONST 5 //frameCount
VBC2_PUSH_CONST 100 
VBC1_POP
[1:80] ;sfPoseGroup( 16 , -591 - clamping, frameCount );  
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC2_PUSH_CONST 16 
VBC3_PUSH_CONST -591 // -
VBC3_PUSH_GLOBAL 3 //clamping
VBC1_SUB
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:81] ;sfPoseGroup( 262144 , 0, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC4_PUSH_CONST 262144 
VBC1_PUSH_0 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:82] ;sfPoseGroup( 16384 , 0, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC3_PUSH_CONST 16384 
VBC1_PUSH_0 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:83] ;sfPoseGroup( 4 , 4096, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC2_PUSH_CONST 4 
VBC3_PUSH_CONST 4096 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:84] ;sfPoseGroup( 2 , 0, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC1_PUSH_2 
VBC1_PUSH_0 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:85] ;sfPoseGroup( 2097152 , 0, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC4_PUSH_CONST 2097152 
VBC1_PUSH_0 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:86] ;sfPoseGroup( 524288 , 0, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC4_PUSH_CONST 524288 
VBC1_PUSH_0 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:87] ;sfPoseGroup( 32768 , 0, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC4_PUSH_CONST 32768 
VBC1_PUSH_0 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:88] ;sfPoseGroup( 8 , 4096, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC2_PUSH_CONST 8 
VBC3_PUSH_CONST 4096 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:89] ;sfPoseGroup( 524288 , 0, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC4_PUSH_CONST 524288 
VBC1_PUSH_0 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:90] ;sfPoseGroup( 256 , 742, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC3_PUSH_CONST 256 
VBC3_PUSH_CONST 742 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:92] ;sfWaitFrame( frameCount );
VBC2_PUSH_CONST 56  //func address sfWaitFrame
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL1
VBC1_STACK_UP2//remove result, call address and params
[1:95] ;
VBC1_RETURN
;page4 <void()>
[1:96] ;frameCount = 100;
VBC2_PUSH_CONST 5 //frameCount
VBC2_PUSH_CONST 100 
VBC1_POP
[1:97] ;sfPoseGroup( 512 , 1075, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC3_PUSH_CONST 512 
VBC3_PUSH_CONST 1075 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:98] ;sfPoseGroup( 128 , -3072, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC3_PUSH_CONST 128 
VBC3_PUSH_CONST -3072 // -
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:99] ;sfPoseGroup( 8 , 3840, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC2_PUSH_CONST 8 
VBC3_PUSH_CONST 3840 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:100] ;sfPoseGroup( 4 , 4544, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC2_PUSH_CONST 4 
VBC3_PUSH_CONST 4544 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:101] ;sfPoseGroup( 16 , -290, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC2_PUSH_CONST 16 
VBC3_PUSH_CONST -290 // -
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:102] ;sfPoseGroup( 64 , -4631, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC2_PUSH_CONST 64 
VBC3_PUSH_CONST -4631 // -
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:103] ;sfPoseGroup( 256 , 1220, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC3_PUSH_CONST 256 
VBC3_PUSH_CONST 1220 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:104] ;sfPoseGroup( 256 , 1321, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC3_PUSH_CONST 256 
VBC3_PUSH_CONST 1321 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:106] ;sfWaitFrame( frameCount );
VBC2_PUSH_CONST 56  //func address sfWaitFrame
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL1
VBC1_STACK_UP2//remove result, call address and params
[1:109] ;
VBC1_RETURN
;page5 <void()>
[1:110] ;frameCount = 100;
VBC2_PUSH_CONST 5 //frameCount
VBC2_PUSH_CONST 100 
VBC1_POP
[1:111] ;sfPoseGroup( 256 , 1075, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC3_PUSH_CONST 256 
VBC3_PUSH_CONST 1075 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:112] ;sfPoseGroup( 64 , -5260, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC2_PUSH_CONST 64 
VBC3_PUSH_CONST -5260 // -
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:113] ;sfPoseGroup( 4 , 5068, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC2_PUSH_CONST 4 
VBC3_PUSH_CONST 5068 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:114] ;sfPoseGroup( 512 , 1382, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC3_PUSH_CONST 512 
VBC3_PUSH_CONST 1382 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:115] ;sfPoseGroup( 128 , -2304, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC3_PUSH_CONST 128 
VBC3_PUSH_CONST -2304 // -
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:116] ;sfPoseGroup( 8 , 3379, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC2_PUSH_CONST 8 
VBC3_PUSH_CONST 3379 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:117] ;sfPoseGroup( 256 , 1450, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC3_PUSH_CONST 256 
VBC3_PUSH_CONST 1450 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:118] ;sfPoseGroup( 256 , 1638, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC3_PUSH_CONST 256 
VBC3_PUSH_CONST 1638 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:119] ;sfPoseGroup( 512 , 1430, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC3_PUSH_CONST 512 
VBC3_PUSH_CONST 1430 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:121] ;sfWaitFrame( frameCount );
VBC2_PUSH_CONST 56  //func address sfWaitFrame
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL1
VBC1_STACK_UP2//remove result, call address and params
[1:124] ;
VBC1_RETURN
;page6 <void()>
[1:125] ;frameCount = 300;
VBC2_PUSH_CONST 5 //frameCount
VBC3_PUSH_CONST 300 
VBC1_POP
[1:126] ;sfPoseGroup( 4 , 5782, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC2_PUSH_CONST 4 
VBC3_PUSH_CONST 5782 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:127] ;sfPoseGroup( 8 , 2713, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC2_PUSH_CONST 8 
VBC3_PUSH_CONST 2713 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:128] ;sfPoseGroup( 16 , -799, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC2_PUSH_CONST 16 
VBC3_PUSH_CONST -799 // -
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:129] ;sfPoseGroup( 32 , -845, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC2_PUSH_CONST 32 
VBC3_PUSH_CONST -845 // -
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:130] ;sfPoseGroup( 64 , -6354, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC2_PUSH_CONST 64 
VBC3_PUSH_CONST -6354 // -
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:131] ;sfPoseGroup( 128 , -1477, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC3_PUSH_CONST 128 
VBC3_PUSH_CONST -1477 // -
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:132] ;sfPoseGroup( 256 , 1609, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC3_PUSH_CONST 256 
VBC3_PUSH_CONST 1609 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:133] ;sfPoseGroup( 512 , 1947, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC3_PUSH_CONST 512 
VBC3_PUSH_CONST 1947 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:134] ;sfPoseGroup( 4 , 5726, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC2_PUSH_CONST 4 
VBC3_PUSH_CONST 5726 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:135] ;sfPoseGroup( 16 , -1221, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC2_PUSH_CONST 16 
VBC3_PUSH_CONST -1221 // -
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:136] ;sfPoseGroup( 32 , -1116, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC2_PUSH_CONST 32 
VBC3_PUSH_CONST -1116 // -
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:137] ;sfPoseGroup( 64 , -6638, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC2_PUSH_CONST 64 
VBC3_PUSH_CONST -6638 // -
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:138] ;sfPoseGroup( 128 , -1177, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC3_PUSH_CONST 128 
VBC3_PUSH_CONST -1177 // -
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:140] ;sfWaitFrame( frameCount );
VBC2_PUSH_CONST 56  //func address sfWaitFrame
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL1
VBC1_STACK_UP2//remove result, call address and params
[1:143] ;
VBC1_RETURN
;page7 <void()>
[1:144] ;frameCount = 300;
VBC2_PUSH_CONST 5 //frameCount
VBC3_PUSH_CONST 300 
VBC1_POP
[1:146] ;sfPoseGroup( 512 , 3225, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC3_PUSH_CONST 512 
VBC3_PUSH_CONST 3225 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:147] ;sfPoseGroup( 128 , -821 - clamping, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC3_PUSH_CONST 128 
VBC3_PUSH_CONST -821 // -
VBC3_PUSH_GLOBAL 3 //clamping
VBC1_SUB
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:148] ;sfPoseGroup( 32 , -1044, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC2_PUSH_CONST 32 
VBC3_PUSH_CONST -1044 // -
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:149] ;sfPoseGroup( 8 , 1536, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC2_PUSH_CONST 8 
VBC3_PUSH_CONST 1536 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:150] ;sfPoseGroup( 4 , 5628, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC2_PUSH_CONST 4 
VBC3_PUSH_CONST 5628 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:151] ;sfPoseGroup( 16 , -1516, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC2_PUSH_CONST 16 
VBC3_PUSH_CONST -1516 // -
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:152] ;sfPoseGroup( 64 , -6475, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC2_PUSH_CONST 64 
VBC3_PUSH_CONST -6475 // -
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:153] ;sfPoseGroup( 256 , 1417, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC3_PUSH_CONST 256 
VBC3_PUSH_CONST 1417 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:154] ;sfPoseGroup( 32 , -1145, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC2_PUSH_CONST 32 
VBC3_PUSH_CONST -1145 // -
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:155] ;sfPoseGroup( 64 , -6106, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC2_PUSH_CONST 64 
VBC3_PUSH_CONST -6106 // -
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:156] ;sfPoseGroup( 256 , 1816, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC3_PUSH_CONST 256 
VBC3_PUSH_CONST 1816 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:158] ;sfWaitFrame( frameCount );
VBC2_PUSH_CONST 56  //func address sfWaitFrame
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL1
VBC1_STACK_UP2//remove result, call address and params
[1:161] ;
VBC1_RETURN
;page8 <void()>
[1:162] ;frameCount = 300;
VBC2_PUSH_CONST 5 //frameCount
VBC3_PUSH_CONST 300 
VBC1_POP
[1:163] ;sfPoseGroup( 4 , 6268, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC2_PUSH_CONST 4 
VBC3_PUSH_CONST 6268 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:164] ;sfWaitFrame( frameCount );
VBC2_PUSH_CONST 56  //func address sfWaitFrame
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL1
VBC1_STACK_UP2//remove result, call address and params
[1:167] ;
VBC1_RETURN
;page9 <void()>
[1:168] ;frameCount = 100;
VBC2_PUSH_CONST 5 //frameCount
VBC2_PUSH_CONST 100 
VBC1_POP
[1:169] ;sfPoseGroup( 16 , 1009, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC2_PUSH_CONST 16 
VBC3_PUSH_CONST 1009 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:170] ;sfWaitFrame( frameCount );
VBC2_PUSH_CONST 56  //func address sfWaitFrame
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL1
VBC1_STACK_UP2//remove result, call address and params
[1:173] ;
VBC1_RETURN
;page10 <void()>
[1:174] ;frameCount = 200;
VBC2_PUSH_CONST 5 //frameCount
VBC3_PUSH_CONST 200 
VBC1_POP
[1:175] ;sfPoseGroup( 64 , 0, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC2_PUSH_CONST 64 
VBC1_PUSH_0 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:176] ;sfPoseGroup( 256 , 0, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC3_PUSH_CONST 256 
VBC1_PUSH_0 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:177] ;sfPoseGroup( 16 , 0, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC2_PUSH_CONST 16 
VBC1_PUSH_0 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:178] ;sfPoseGroup( 4 , 0, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC2_PUSH_CONST 4 
VBC1_PUSH_0 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:179] ;sfPoseGroup( 512 , 1689, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC3_PUSH_CONST 512 
VBC3_PUSH_CONST 1689 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:180] ;sfPoseGroup( 128 , 0, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC3_PUSH_CONST 128 
VBC1_PUSH_0 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:181] ;sfPoseGroup( 8 , 3072, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC2_PUSH_CONST 8 
VBC3_PUSH_CONST 3072 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:182] ;sfWaitFrame( frameCount );
VBC2_PUSH_CONST 56  //func address sfWaitFrame
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL1
VBC1_STACK_UP2//remove result, call address and params
[1:185] ;
VBC1_RETURN
;page11 <void()>
[1:186] ;frameCount = 100;
VBC2_PUSH_CONST 5 //frameCount
VBC2_PUSH_CONST 100 
VBC1_POP
[1:187] ;sfPoseGroup( 512 , 665, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC3_PUSH_CONST 512 
VBC3_PUSH_CONST 665 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:188] ;sfPoseGroup( 8 , 4096, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC2_PUSH_CONST 8 
VBC3_PUSH_CONST 4096 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:189] ;sfWaitFrame( frameCount );
VBC2_PUSH_CONST 56  //func address sfWaitFrame
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL1
VBC1_STACK_UP2//remove result, call address and params
[1:192] ;
VBC1_RETURN
;page12 <void()>
[1:193] ;frameCount = 200;
VBC2_PUSH_CONST 5 //frameCount
VBC3_PUSH_CONST 200 
VBC1_POP
[1:194] ;sfPoseGroup( 32 , 3840, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC2_PUSH_CONST 32 
VBC3_PUSH_CONST 3840 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:195] ;sfWaitFrame( frameCount );
VBC2_PUSH_CONST 56  //func address sfWaitFrame
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL1
VBC1_STACK_UP2//remove result, call address and params
[1:198] ;
VBC1_RETURN
;page13 <void()>
[1:199] ;frameCount = 200;
VBC2_PUSH_CONST 5 //frameCount
VBC3_PUSH_CONST 200 
VBC1_POP
[1:200] ;sfPoseGroup( 512 , 537, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC3_PUSH_CONST 512 
VBC3_PUSH_CONST 537 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:201] ;sfPoseGroup( 32 , 7219, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC2_PUSH_CONST 32 
VBC3_PUSH_CONST 7219 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:202] ;sfPoseGroup( 128 , 0, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC3_PUSH_CONST 128 
VBC1_PUSH_0 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:203] ;sfPoseGroup( 1 , -420, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC1_PUSH_1 
VBC3_PUSH_CONST -420 // -
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:204] ;sfPoseGroup( 2 , 420, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC1_PUSH_2 
VBC3_PUSH_CONST 420 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:205] ;sfWaitFrame( frameCount );
VBC2_PUSH_CONST 56  //func address sfWaitFrame
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL1
VBC1_STACK_UP2//remove result, call address and params
[1:208] ;
VBC1_RETURN
;shiftRight <void()>
[1:209] ;sfQuaternionToEulerImu();
VBC5_PUSH_CONST 303 | 0x80000000 //import func index sfQuaternionToEulerImu
VBC1_CALL0
VBC1_STACK_UP1//remove result, call address and params
[1:210] ;rotation = (direction - svEulerYaw) * 2607.594587  * 1.2;
VBC2_PUSH_CONST 6 //rotation
VBC3_PUSH_GLOBAL 7 //direction
VBC3_PUSH_GLOBAL 2600 //svEulerYaw
VBC1_SUB_FF
VBC5_PUSH_CONST 1159920003 
VBC1_MUL_FF
VBC5_PUSH_CONST 1067030938 
VBC1_MUL_FF
VBC1_POP_CI
[1:213] ;frameCount = 3;
VBC2_PUSH_CONST 5 //frameCount
VBC2_PUSH_CONST 3 
VBC1_POP
[1:215] ;sfWaitFrame( frameCount );
VBC2_PUSH_CONST 56  //func address sfWaitFrame
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL1
VBC1_STACK_UP2//remove result, call address and params
[1:217] ;frameCount = 3;
VBC2_PUSH_CONST 5 //frameCount
VBC2_PUSH_CONST 3 
VBC1_POP
[1:218] ;sfPoseGroup( 1048576 , 1103, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC4_PUSH_CONST 1048576 
VBC3_PUSH_CONST 1103 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:219] ;sfPoseGroup( 1024 , rotation, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC3_PUSH_CONST 1024 
VBC3_PUSH_GLOBAL 6 //rotation
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:220] ;sfPoseGroup( 32768 , 0, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC4_PUSH_CONST 32768 
VBC1_PUSH_0 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:221] ;sfPoseGroup( 2097152 , -1000, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC4_PUSH_CONST 2097152 
VBC3_PUSH_CONST -1000 // -
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:223] ;sfWaitFrame( frameCount );
VBC2_PUSH_CONST 56  //func address sfWaitFrame
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL1
VBC1_STACK_UP2//remove result, call address and params
[1:225] ;frameCount = 3;
VBC2_PUSH_CONST 5 //frameCount
VBC2_PUSH_CONST 3 
VBC1_POP
[1:226] ;sfPoseGroup( 1048576 , 0, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC4_PUSH_CONST 1048576 
VBC1_PUSH_0 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:227] ;sfPoseGroup( 2097152 , 0, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC4_PUSH_CONST 2097152 
VBC1_PUSH_0 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:228] ;sfPoseGroup( 1024 , 0, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC3_PUSH_CONST 1024 
VBC1_PUSH_0 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:229] ;sfPoseGroup( 32768 , 0, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC4_PUSH_CONST 32768 
VBC1_PUSH_0 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:230] ;sfWaitFrame( frameCount * 8 );
VBC2_PUSH_CONST 56  //func address sfWaitFrame
VBC3_PUSH_GLOBAL 5 //frameCount
VBC2_PUSH_CONST 8 
VBC1_MUL
VBC1_CALL1
VBC1_STACK_UP2//remove result, call address and params
[1:234] ;
VBC1_RETURN
;main <void()>
VBC1_STACK_DN1//local vars 1
[1:235] ;
[1:236] ;frameCount = 1;
VBC2_PUSH_CONST 5 //frameCount
VBC1_PUSH_1 
VBC1_POP
[1:237] ;pitStop = 0;
VBC1_PUSH_2 //pitStop
VBC1_PUSH_0 
VBC1_POP
[1:238] ;clamping = -50;
VBC2_PUSH_CONST 3 //clamping
VBC2_PUSH_CONST -50 // -
VBC1_POP
[1:239] ;steps = 17;
VBC2_PUSH_CONST 4 //steps
VBC2_PUSH_CONST 17 
VBC1_POP
[1:240] ;sfQuaternionToEulerImu();
VBC5_PUSH_CONST 303 | 0x80000000 //import func index sfQuaternionToEulerImu
VBC1_CALL0
VBC1_STACK_UP1//remove result, call address and params
[1:241] ;direction = svEulerYaw;
VBC2_PUSH_CONST 7 //direction
VBC3_PUSH_GLOBAL 2600 //svEulerYaw
VBC1_POP
[1:242] ;while (pitStop == 0) sfWaitFrame(1); 
LAB2191: //while condition
VBC3_PUSH_GLOBAL 2 //pitStop
VBC1_PUSH_0 
VBC1_EQU
VBC4_FALSE_JUMP LAB2209 //while to exit
;while (pitStop == 0) sfWaitFrame(1); 
VBC2_PUSH_CONST 56  //func address sfWaitFrame
VBC1_PUSH_1 
VBC1_CALL1
VBC1_STACK_UP2//remove result, call address and params
VBC4_JUMP LAB2191 //while forever loop
LAB2209: //while exit
[1:243] ;page0();
VBC2_PUSH_CONST 108  //func address page0
VBC1_CALL0
VBC1_STACK_UP1//remove result, call address and params
[1:244] ;page1();
VBC3_PUSH_CONST 356  //func address page1
VBC1_CALL0
VBC1_STACK_UP1//remove result, call address and params
[1:245] ;page2();
VBC3_PUSH_CONST 536  //func address page2
VBC1_CALL0
VBC1_STACK_UP1//remove result, call address and params
[1:246] ;page3();
VBC3_PUSH_CONST 650  //func address page3
VBC1_CALL0
VBC1_STACK_UP1//remove result, call address and params
[1:247] ;page3_0();
VBC3_PUSH_CONST 725  //func address page3_0
VBC1_CALL0
VBC1_STACK_UP1//remove result, call address and params
[1:261] ;
VBC1_RETURN
//Init table
//Variables
svFrameCount : 1
svImuAccX : 2560
svImuAccY : 2561
svImuAccZ : 2562
svImuAccRawX : 2563
svImuAccRawY : 2564
svImuAccRawZ : 2565
svImuGyroX : 2566
svImuGyroY : 2567
svImuGyroZ : 2568
svImuGyroRawX : 2569
svImuGyroRawY : 2570
svImuGyroRawZ : 2571
svImuQuaterX : 2572
svImuQuaterY : 2573
svImuQuaterZ : 2574
svImuQuaterW : 2575
svImuQuaterAcc : 2576
svImuAccSlowX : 2577
svImuAccSlowY : 2578
svImuAccSlowZ : 2579
svAdc : 2580
svButtonLeft : 2581
svButtonRight : 2582
svButtonPress : 2583
svHeadControlMask : 2584
svDefFrameCount : 2585
svEulerYaw F: 2600
svEulerPitch F: 2601
svEulerRoll F: 2602
svRemoteStatus : 3250
svRemoteButton : 3251
svRemoteLeftJoystick : 3252
svRemoteLeftJoystickX : 3253
svRemoteLeftJoystickY : 3254
svRemoteRightJoystick : 3255
svRemoteRightJoystickX : 3256
svRemoteRightJoystickY : 3257
svHumoModelDistPelvic : 3264
svHumoModelLengthPelvicHip : 3265
svHumoModelLengthHipHip : 3266
svHumoModelLengthHipKnee : 3267
svHumoModelLengthKneeFoot : 3268
svHumoModelLengthFootFoot : 3269
svHumoModelDistFootFloor : 3270
svHumoModelFootLength : 3271
svHumoModelFootWidth : 3272
svHumoModelFootCenterBack : 3273
svHumoModelFootCenterInner : 3274
svHumoModelAngPelvic : 3258
svHumoModelAngHipSide : 3260
svHumoModelAngHip : 3259
svHumoModelAngKnee : 3261
svHumoModelAngFoot : 3262
svHumoModelAngFootSide : 3263
svIkA5 F: 3275
svIkB5 F: 3276
svIkC5 F: 3277
svIkA6 F: 3278
svIkA7 F: 3279
svIkA8 F: 3280
svIkA9 F: 3281
svIkA10 F: 3282
svIkB10 F: 3283
svIkC10 F: 3284
svIkLimA5min F: 3285
svIkLimA5max F: 3286
svIkLimA6min F: 3287
svIkLimA6max F: 3288
svIkLimA7min F: 3289
svIkLimA7max F: 3290
svIkLimA8min F: 3291
svIkLimA8max F: 3292
svIkLimA9min F: 3293
svIkLimA9max F: 3294
svIkLimA10min F: 3295
svIkLimA10max F: 3296
svIkOutPresent : 3297
svIkEncA5 : 3298
svIkEncA6 : 3299
svIkEncA7 : 3300
svIkEncA8 : 3301
svIkEncA9 : 3302
svIkEncA10 : 3303
headRotateTarget : 2610
headRotateCurrent : 2611
headRotatePwm : 2612
headRotateVelo : 2613
headRotateFlags : 2615
headRotateAddonMix : 2617
torsoRotateTarget : 2626
torsoRotateCurrent : 2627
torsoRotatePwm : 2628
torsoRotateVelo : 2629
torsoRotateFlags : 2631
torsoRotateAddonMix : 2633
rightClavicleTarget : 2642
rightClavicleCurrent : 2643
rightClaviclePwm : 2644
rightClavicleVelo : 2645
rightClavicleFlags : 2647
rightClavicleAddonMix : 2649
leftClavicleTarget : 2658
leftClavicleCurrent : 2659
leftClaviclePwm : 2660
leftClavicleVelo : 2661
leftClavicleFlags : 2663
leftClavicleAddonMix : 2665
rightShoulderTarget : 2674
rightShoulderCurrent : 2675
rightShoulderPwm : 2676
rightShoulderVelo : 2677
rightShoulderFlags : 2679
rightShoulderAddonMix : 2681
leftShoulderTarget : 2690
leftShoulderCurrent : 2691
leftShoulderPwm : 2692
leftShoulderVelo : 2693
leftShoulderFlags : 2695
leftShoulderAddonMix : 2697
rightElbowSideTarget : 2706
rightElbowSideCurrent : 2707
rightElbowSidePwm : 2708
rightElbowSideVelo : 2709
rightElbowSideFlags : 2711
rightElbowSideAddonMix : 2713
leftElbowSideTarget : 2722
leftElbowSideCurrent : 2723
leftElbowSidePwm : 2724
leftElbowSideVelo : 2725
leftElbowSideFlags : 2727
leftElbowSideAddonMix : 2729
rightElbowTarget : 2738
rightElbowCurrent : 2739
rightElbowPwm : 2740
rightElbowVelo : 2741
rightElbowFlags : 2743
rightElbowAddonMix : 2745
leftElbowTarget : 2754
leftElbowCurrent : 2755
leftElbowPwm : 2756
leftElbowVelo : 2757
leftElbowFlags : 2759
leftElbowAddonMix : 2761
rightPelvicTarget : 2770
rightPelvicCurrent : 2771
rightPelvicPwm : 2772
rightPelvicVelo : 2773
rightPelvicFlags : 2775
rightPelvicAddonMix : 2777
leftPelvicTarget : 2786
leftPelvicCurrent : 2787
leftPelvicPwm : 2788
leftPelvicVelo : 2789
leftPelvicFlags : 2791
leftPelvicAddonMix : 2793
rightHipSideTarget : 2802
rightHipSideCurrent : 2803
rightHipSidePwm : 2804
rightHipSideVelo : 2805
rightHipSideFlags : 2807
rightHipSideAddonMix : 2809
leftHipSideTarget : 2818
leftHipSideCurrent : 2819
leftHipSidePwm : 2820
leftHipSideVelo : 2821
leftHipSideFlags : 2823
leftHipSideAddonMix : 2825
rightHipTarget : 2834
rightHipCurrent : 2835
rightHipPwm : 2836
rightHipVelo : 2837
rightHipFlags : 2839
rightHipAddonMix : 2841
leftHipTarget : 2850
leftHipCurrent : 2851
leftHipPwm : 2852
leftHipVelo : 2853
leftHipFlags : 2855
leftHipAddonMix : 2857
rightKneeTarget : 2866
rightKneeCurrent : 2867
rightKneePwm : 2868
rightKneeVelo : 2869
rightKneeFlags : 2871
rightKneeAddonMix : 2873
leftKneeTarget : 2882
leftKneeCurrent : 2883
leftKneePwm : 2884
leftKneeVelo : 2885
leftKneeFlags : 2887
leftKneeAddonMix : 2889
rightFootFrontTarget : 2898
rightFootFrontCurrent : 2899
rightFootFrontPwm : 2900
rightFootFrontVelo : 2901
rightFootFrontFlags : 2903
rightFootFrontAddonMix : 2905
leftFootFrontTarget : 2914
leftFootFrontCurrent : 2915
leftFootFrontPwm : 2916
leftFootFrontVelo : 2917
leftFootFrontFlags : 2919
leftFootFrontAddonMix : 2921
rightFootSideTarget : 2930
rightFootSideCurrent : 2931
rightFootSidePwm : 2932
rightFootSideVelo : 2933
rightFootSideFlags : 2935
rightFootSideAddonMix : 2937
leftFootSideTarget : 2946
leftFootSideCurrent : 2947
leftFootSidePwm : 2948
leftFootSideVelo : 2949
leftFootSideFlags : 2951
leftFootSideAddonMix : 2953
rightHandTarget : 2962
rightHandCurrent : 2963
rightHandPwm : 2964
rightHandVelo : 2965
rightHandFlags : 2967
rightHandAddonMix : 2969
leftHandTarget : 2978
leftHandCurrent : 2979
leftHandPwm : 2980
leftHandVelo : 2981
leftHandFlags : 2983
leftHandAddonMix : 2985
headTiltTarget : 3010
headTiltCurrent : 3011
headTiltPwm : 3012
headTiltVelo : 3013
headTiltFlags : 3015
headTiltAddonMix : 3017
rightKneeBotTarget : 3026
rightKneeBotCurrent : 3027
rightKneeBotPwm : 3028
rightKneeBotVelo : 3029
rightKneeBotFlags : 3031
rightKneeBotAddonMix : 3033
leftKneeBotTarget : 3042
leftKneeBotCurrent : 3043
leftKneeBotPwm : 3044
leftKneeBotVelo : 3045
leftKneeBotFlags : 3047
leftKneeBotAddonMix : 3049
rightClawTarget : 3058
rightClawCurrent : 3059
rightClawPwm : 3060
rightClawVelo : 3061
rightClawFlags : 3063
rightClawAddonMix : 3065
leftClawTarget : 3074
leftClawCurrent : 3075
leftClawPwm : 3076
leftClawVelo : 3077
leftClawFlags : 3079
leftClawAddonMix : 3081
pitStop : 2
clamping : 3
steps : 4
frameCount : 5
rotation : 6
direction F: 7
