//====================================================================
//      SvCompiler V9.06
//By A.Sibilev
//====================================================================
//cblock

;sfVpuVersion <int()>
;sfCreateTask <int(,*<void()>,int)>
;sfLog <void(,cstring,int,int,int)>
;sfLogOpen <void(,cstring)>
;sfLogClose <void()>
;sfWaitFrameOut <void(,int)>
;sfIsFrameOut <int(,int)>
;sfWaitNextFrame <void()>
;sfSlotIndex <int(,cstring)>
;sfAbs <int(,int)>
;sfIMin <int(,int,int)>
;sfIMax <int(,int,int)>
;sfUMin <int(,int,int)>
;sfUMax <int(,int,int)>
;sfILimit <int(,int,int,int)>
;sfStop <void()>
;sfStartSlot <void(,int)>
;sfBip <void(,int,int)>
;sfWriteFlash <void()>
;sfFreeGroup <void(,int)>
;sfPoseGroup <void(,int,int,int)>
;sfPoseGroupDelay <void(,int,int,int,int)>
;sfPoseCorrect <void(,int,int)>
;sfQueueGroup <void(,int,int,int)>
;sfPoseIdx <void(,int,int,int)>
;sfPoseGroupLin <void(,int,int,int)>
;sfStrainGroup <void(,int)>
;sfPlaySamples <void(,int,*cblock,int)>
;sfAccumSetup1 <void(,*int)>
;sfAccumSetup2 <void(,*int,*int)>
;sfAccumSetup3 <void(,*int,*int,*int)>
;sfAccumSetup4 <void(,*int,*int,*int,*int)>
;sfAccumTrigger <void()>
;sfAccumReset <void()>
;sfMathAcos <int(,int,int)>
;sfMathSqrti <int(,int)>
;sfMathAngleOfTriangle <int(,int,int,int)>
;sfMathAngleOfKnee <int(,int,int,int)>
;sfMathCathetOfSquareTriangle <int(,int,int)>
;sfMathHypotenuseOfSquareTriangle <int(,int,int)>
;sfMathTableSin <int(,int,int)>
;sfHumoModelSetup <void()>
;sfHumoModelFootAtFloor <void(,int,int,int)>
;sfHumoModelFootPush <void(,int,int,int)>
;sfIndexOfMask <int(,int)>
;sfQueueIdxAppend <int(,int,int,int)>
;sfQueueIdxOffsets <int(,int,int,*cblock,int)>
;sfQueueIdxSinMove <int(,int,int,int,int)>
;sfQueueIdxLast <int(,int)>
;sfQueueIdxCount <int(,int)>
;sfQueueMax <int()>
;sfIkSetup <void()>
;sfIkAngle <void(,float,float,float,float,float,float,float)>
;sfMathCos <float(,float)>
;sfMathSin <float(,float)>
;sfQuaternionToEuler <void(,float,float,float,float)>
;sfQuaternionToEulerImu <void()>
;sfFMathACos <float(,float)>
;sfFMathASin <float(,float)>
;sfFMathATan <float(,float)>
;sfFMathATan2 <float(,float,float)>
;sfFMathCos <float(,float)>
;sfFMathSin <float(,float)>
;sfFMathTan <float(,float)>
;sfFMathCosh <float(,float)>
;sfFMathSinh <float(,float)>
;sfFMathTanh <float(,float)>
;sfFMathExp <float(,float)>
;sfFMathFrExp <float(,float,*int)>
;sfFMathLdExp <float(,float,int)>
;sfFMathLog <float(,float)>
;sfFMathLog10 <float(,float)>
;sfFMathModf <float(,float,*float)>
;sfFMathPow <float(,float,float)>
;sfFMathSqrt <float(,float)>
;sfFMathCeil <float(,float)>
;sfFMathFAbs <float(,float)>
;sfFMathFloor <float(,float)>
;sfFMathFMod <float(,float,float)>
;sfQuaternionToMatrix <void(,*:SfMatrix3x3,float,float,float,float)>
;sfQuaternionToMatrixImu <void(,*:SfMatrix3x3)>
;sfGravityVector <void(,*:SfVector3)>
;sfVec3Set <void(,*:SfVector3,float,float,float)>
;sfVec3Sum <void(,*:SfVector3,*:SfVector3,*:SfVector3)>
;sfVec3Diff <void(,*:SfVector3,*:SfVector3,*:SfVector3)>
;sfVec3MulRowColCx <float(,*:SfVector3,float,float,float)>
;sfVec3MulRowCol <float(,*:SfVector3,*:SfVector3)>
;sfVec3ScSum <void(,*:SfVector3,*:SfVector3,float)>
;sfVec3ScDiff <void(,*:SfVector3,*:SfVector3,float)>
;sfVec3ScMul <void(,*:SfVector3,*:SfVector3,float)>
;sfVec3ScDiv <void(,*:SfVector3,*:SfVector3,float)>
;sfMat3x3Set <void(,*:SfMatrix3x3,float,float,float,float,float,float,float,float,float)>
;sfMat3x3SetAll <void(,*:SfMatrix3x3,float)>
;sfMat3x3SetDiag <void(,*:SfMatrix3x3,float)>
;sfMat3x3Copy <void(,*:SfMatrix3x3,*:SfMatrix3x3)>
;sfMat3x3Transpose <void(,*:SfMatrix3x3,*:SfMatrix3x3)>
;sfMat3x3Mul <void(,*:SfMatrix3x3,*:SfMatrix3x3,*:SfMatrix3x3)>
;sfMat3x3ScMul <void(,*:SfMatrix3x3,*:SfMatrix3x3,float)>
;sfMat3x3MulCol <void(,*:SfVector3,*:SfMatrix3x3,*:SfVector3)>
;sfMat3x3RowMul <void(,*:SfVector3,*:SfVector3,*:SfMatrix3x3)>
;sfWaitFrame <void(,int)>
[3:466] ;sfWaitFrameOut( frame + svFrameCount );
VBC5_PUSH_CONST 17 | 0x80000000 //import func index sfWaitFrameOut
VBC2_PUSH_LOCAL 2 //frame
VBC3_PUSH_GLOBAL 1 //svFrameCount
VBC1_ADD
VBC1_CALL1
VBC1_STACK_UP2//remove result, call address and params
[2:10] ;
VBC1_RETURN
;standUp <void()>
[1:19] ;if (fallingFlag == 1) {  
VBC3_PUSH_GLOBAL 3 //fallingFlag
VBC1_PUSH_1 
VBC1_EQU
VBC4_FALSE_JUMP LAB444 //if to false
;
[1:21] ;frameCount = 10;
VBC2_PUSH_CONST 7 //frameCount
VBC2_PUSH_CONST 10 
VBC1_POP
[1:22] ;sfPoseGroup(1056964607 , 0, frameCount);
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC5_PUSH_CONST 1056964607 
VBC1_PUSH_0 
VBC3_PUSH_GLOBAL 7 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:23] ;sfPoseGroup(256  | 512 , 5145, frameCount);
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC3_PUSH_CONST 768 
VBC3_PUSH_CONST 5145 
VBC3_PUSH_GLOBAL 7 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:24] ;sfPoseGroup(4  | 8 , 384, frameCount);
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC2_PUSH_CONST 12 
VBC3_PUSH_CONST 384 
VBC3_PUSH_GLOBAL 7 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:25] ;sfWaitFrame(frameCount);
VBC2_PUSH_CONST 56  //func address sfWaitFrame
VBC3_PUSH_GLOBAL 7 //frameCount
VBC1_CALL1
VBC1_STACK_UP2//remove result, call address and params
[1:27] ;frameCount = 50;
VBC2_PUSH_CONST 7 //frameCount
VBC2_PUSH_CONST 50 
VBC1_POP
[1:28] ;sfPoseGroup(262144  | 524288 , 3698, frameCount);
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC4_PUSH_CONST 786432 
VBC3_PUSH_CONST 3698 
VBC3_PUSH_GLOBAL 7 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:29] ;sfPoseGroup(65536  | 131072 , 6144, frameCount);
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC4_PUSH_CONST 196608 
VBC3_PUSH_CONST 6144 
VBC3_PUSH_GLOBAL 7 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:30] ;sfPoseGroup(16384  | 32768 , 6084, frameCount);
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC4_PUSH_CONST 49152 
VBC3_PUSH_CONST 6084 
VBC3_PUSH_GLOBAL 7 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:31] ;sfPoseGroup(256  | 512 , 5836, frameCount);
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC3_PUSH_CONST 768 
VBC3_PUSH_CONST 5836 
VBC3_PUSH_GLOBAL 7 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:32] ;sfPoseGroup(4  | 8 , 3087, frameCount);
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC2_PUSH_CONST 12 
VBC3_PUSH_CONST 3087 
VBC3_PUSH_GLOBAL 7 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:33] ;sfWaitFrame(frameCount);
VBC2_PUSH_CONST 56  //func address sfWaitFrame
VBC3_PUSH_GLOBAL 7 //frameCount
VBC1_CALL1
VBC1_STACK_UP2//remove result, call address and params
[1:35] ;frameCount = 10;
VBC2_PUSH_CONST 7 //frameCount
VBC2_PUSH_CONST 10 
VBC1_POP
[1:36] ;sfPoseGroup(262144  | 524288 , 3072, frameCount);
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC4_PUSH_CONST 786432 
VBC3_PUSH_CONST 3072 
VBC3_PUSH_GLOBAL 7 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:37] ;sfPoseGroup(16384  | 32768 , 5222, frameCount);
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC4_PUSH_CONST 49152 
VBC3_PUSH_CONST 5222 
VBC3_PUSH_GLOBAL 7 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:38] ;sfPoseGroup(256  | 512 , 0, frameCount);
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC3_PUSH_CONST 768 
VBC1_PUSH_0 
VBC3_PUSH_GLOBAL 7 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:39] ;sfPoseGroup(4  | 8 , 3072, frameCount);
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC2_PUSH_CONST 12 
VBC3_PUSH_CONST 3072 
VBC3_PUSH_GLOBAL 7 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:40] ;sfWaitFrame(frameCount);
VBC2_PUSH_CONST 56  //func address sfWaitFrame
VBC3_PUSH_GLOBAL 7 //frameCount
VBC1_CALL1
VBC1_STACK_UP2//remove result, call address and params
[1:42] ;frameCount = 10;
VBC2_PUSH_CONST 7 //frameCount
VBC2_PUSH_CONST 10 
VBC1_POP
[1:43] ;sfPoseGroup(262144  | 524288 , 2267, frameCount);
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC4_PUSH_CONST 786432 
VBC3_PUSH_CONST 2267 
VBC3_PUSH_GLOBAL 7 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:44] ;sfPoseGroup(65536  | 131072 , 6144, frameCount);
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC4_PUSH_CONST 196608 
VBC3_PUSH_CONST 6144 
VBC3_PUSH_GLOBAL 7 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:45] ;sfPoseGroup(16384  | 32768 , 5130, frameCount);
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC4_PUSH_CONST 49152 
VBC3_PUSH_CONST 5130 
VBC3_PUSH_GLOBAL 7 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:46] ;sfPoseGroup(4  | 8 , 2304, frameCount);
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC2_PUSH_CONST 12 
VBC3_PUSH_CONST 2304 
VBC3_PUSH_GLOBAL 7 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:47] ;sfWaitFrame(frameCount);
VBC2_PUSH_CONST 56  //func address sfWaitFrame
VBC3_PUSH_GLOBAL 7 //frameCount
VBC1_CALL1
VBC1_STACK_UP2//remove result, call address and params
[1:49] ;frameCount = 50;
VBC2_PUSH_CONST 7 //frameCount
VBC2_PUSH_CONST 50 
VBC1_POP
[1:50] ;sfPoseGroup(1056964607 , 0, frameCount);
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC5_PUSH_CONST 1056964607 
VBC1_PUSH_0 
VBC3_PUSH_GLOBAL 7 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:51] ;sfPoseGroup(256  | 512 , 5145, frameCount);
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC3_PUSH_CONST 768 
VBC3_PUSH_CONST 5145 
VBC3_PUSH_GLOBAL 7 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:52] ;sfPoseGroup(4  | 8 , 384, frameCount);
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC2_PUSH_CONST 12 
VBC3_PUSH_CONST 384 
VBC3_PUSH_GLOBAL 7 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:53] ;sfWaitFrame(frameCount);
VBC2_PUSH_CONST 56  //func address sfWaitFrame
VBC3_PUSH_GLOBAL 7 //frameCount
VBC1_CALL1
VBC1_STACK_UP2//remove result, call address and params
LAB444: //if else
[1:55] ;if (fallingFlag == -1) {  
VBC3_PUSH_GLOBAL 3 //fallingFlag
VBC2_PUSH_CONST -1 // -
VBC1_EQU
VBC4_FALSE_JUMP LAB927 //if to false
;
[1:57] ;frameCount = 20;
VBC2_PUSH_CONST 7 //frameCount
VBC2_PUSH_CONST 20 
VBC1_POP
[1:58] ;sfPoseGroup(1056964607 , 0, frameCount);
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC5_PUSH_CONST 1056964607 
VBC1_PUSH_0 
VBC3_PUSH_GLOBAL 7 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:59] ;sfWaitFrame(frameCount);
VBC2_PUSH_CONST 56  //func address sfWaitFrame
VBC3_PUSH_GLOBAL 7 //frameCount
VBC1_CALL1
VBC1_STACK_UP2//remove result, call address and params
[1:61] ;frameCount = 30;
VBC2_PUSH_CONST 7 //frameCount
VBC2_PUSH_CONST 30 
VBC1_POP
[1:62] ;sfPoseGroup(262144  | 524288 , 3532, frameCount);
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC4_PUSH_CONST 786432 
VBC3_PUSH_CONST 3532 
VBC3_PUSH_GLOBAL 7 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:63] ;sfPoseGroup(65536  | 131072 , 5376, frameCount);
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC4_PUSH_CONST 196608 
VBC3_PUSH_CONST 5376 
VBC3_PUSH_GLOBAL 7 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:64] ;sfPoseGroup(16384  | 32768 , -2457, frameCount);
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC4_PUSH_CONST 49152 
VBC3_PUSH_CONST -2457 // -
VBC3_PUSH_GLOBAL 7 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:65] ;sfPoseGroup(256  | 512 , 2150, frameCount);
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC3_PUSH_CONST 768 
VBC3_PUSH_CONST 2150 
VBC3_PUSH_GLOBAL 7 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:66] ;sfPoseGroup(64  | 128 , -3072, frameCount);
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC3_PUSH_CONST 192 
VBC3_PUSH_CONST -3072 // -
VBC3_PUSH_GLOBAL 7 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:67] ;sfPoseGroup(16  | 32 , 7680, frameCount);
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC2_PUSH_CONST 48 
VBC3_PUSH_CONST 7680 
VBC3_PUSH_GLOBAL 7 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:68] ;sfPoseGroup(4  | 8 , 2764, frameCount);
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC2_PUSH_CONST 12 
VBC3_PUSH_CONST 2764 
VBC3_PUSH_GLOBAL 7 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:69] ;sfWaitFrame(frameCount);
VBC2_PUSH_CONST 56  //func address sfWaitFrame
VBC3_PUSH_GLOBAL 7 //frameCount
VBC1_CALL1
VBC1_STACK_UP2//remove result, call address and params
[1:71] ;frameCount = 20;
VBC2_PUSH_CONST 7 //frameCount
VBC2_PUSH_CONST 20 
VBC1_POP
[1:72] ;sfPoseGroup(65536  | 131072 , 3717, frameCount);
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC4_PUSH_CONST 196608 
VBC3_PUSH_CONST 3717 
VBC3_PUSH_GLOBAL 7 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:73] ;sfPoseGroup(16384  | 32768 , -2274, frameCount);
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC4_PUSH_CONST 49152 
VBC3_PUSH_CONST -2274 // -
VBC3_PUSH_GLOBAL 7 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:74] ;sfPoseGroup(256  | 512 , 0, frameCount);
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC3_PUSH_CONST 768 
VBC1_PUSH_0 
VBC3_PUSH_GLOBAL 7 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:75] ;sfPoseGroup(4  | 8 , 4254, frameCount);
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC2_PUSH_CONST 12 
VBC3_PUSH_CONST 4254 
VBC3_PUSH_GLOBAL 7 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:76] ;sfPoseGroup(33554432 , 4712, frameCount);
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC5_PUSH_CONST 33554432 
VBC3_PUSH_CONST 4712 
VBC3_PUSH_GLOBAL 7 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:77] ;sfWaitFrame(frameCount);
VBC2_PUSH_CONST 56  //func address sfWaitFrame
VBC3_PUSH_GLOBAL 7 //frameCount
VBC1_CALL1
VBC1_STACK_UP2//remove result, call address and params
[1:79] ;frameCount = 50;
VBC2_PUSH_CONST 7 //frameCount
VBC2_PUSH_CONST 50 
VBC1_POP
[1:80] ;sfPoseGroup(1048576  | 2097152 , 102, frameCount);
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC4_PUSH_CONST 3145728 
VBC2_PUSH_CONST 102 
VBC3_PUSH_GLOBAL 7 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:81] ;sfPoseGroup(262144  | 524288 , 1721, frameCount);
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC4_PUSH_CONST 786432 
VBC3_PUSH_CONST 1721 
VBC3_PUSH_GLOBAL 7 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:82] ;sfPoseGroup(65536  | 131072 , 3445, frameCount);
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC4_PUSH_CONST 196608 
VBC3_PUSH_CONST 3445 
VBC3_PUSH_GLOBAL 7 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:83] ;sfPoseGroup(16384  | 32768 , 1721, frameCount);
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC4_PUSH_CONST 49152 
VBC3_PUSH_CONST 1721 
VBC3_PUSH_GLOBAL 7 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:84] ;sfPoseGroup(4096  | 8192 , 102, frameCount);
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC3_PUSH_CONST 12288 
VBC2_PUSH_CONST 102 
VBC3_PUSH_GLOBAL 7 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:85] ;sfPoseGroup(256  | 512 , 4094, frameCount);
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC3_PUSH_CONST 768 
VBC3_PUSH_CONST 4094 
VBC3_PUSH_GLOBAL 7 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:86] ;sfPoseGroup(64  | 128 , 0, frameCount);
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC3_PUSH_CONST 192 
VBC1_PUSH_0 
VBC3_PUSH_GLOBAL 7 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:87] ;sfPoseGroup(16  | 32 , 0, frameCount);
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC2_PUSH_CONST 48 
VBC1_PUSH_0 
VBC3_PUSH_GLOBAL 7 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:88] ;sfPoseGroup(4  | 8 , 399, frameCount);
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC2_PUSH_CONST 12 
VBC3_PUSH_CONST 399 
VBC3_PUSH_GLOBAL 7 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:89] ;sfPoseGroup(33554432 , 0, frameCount);
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC5_PUSH_CONST 33554432 
VBC1_PUSH_0 
VBC3_PUSH_GLOBAL 7 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:90] ;sfWaitFrame(frameCount);
VBC2_PUSH_CONST 56  //func address sfWaitFrame
VBC3_PUSH_GLOBAL 7 //frameCount
VBC1_CALL1
VBC1_STACK_UP2//remove result, call address and params
[1:92] ;frameCount = 10;
VBC2_PUSH_CONST 7 //frameCount
VBC2_PUSH_CONST 10 
VBC1_POP
[1:93] ;sfPoseGroup(1056964607 , 0, frameCount);
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC5_PUSH_CONST 1056964607 
VBC1_PUSH_0 
VBC3_PUSH_GLOBAL 7 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:94] ;sfPoseGroup(256  | 512 , 5145, frameCount);
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC3_PUSH_CONST 768 
VBC3_PUSH_CONST 5145 
VBC3_PUSH_GLOBAL 7 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:95] ;sfPoseGroup(4  | 8 , 384, frameCount);
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC2_PUSH_CONST 12 
VBC3_PUSH_CONST 384 
VBC3_PUSH_GLOBAL 7 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:96] ;sfWaitFrame(frameCount);
VBC2_PUSH_CONST 56  //func address sfWaitFrame
VBC3_PUSH_GLOBAL 7 //frameCount
VBC1_CALL1
VBC1_STACK_UP2//remove result, call address and params
LAB927: //if else
[1:98] ;if (fallingFlag == 2) {  
VBC3_PUSH_GLOBAL 3 //fallingFlag
VBC1_PUSH_2 
VBC1_EQU
VBC4_FALSE_JUMP LAB1142 //if to false
;
[1:100] ;frameCount = 40;
VBC2_PUSH_CONST 7 //frameCount
VBC2_PUSH_CONST 40 
VBC1_POP
[1:101] ;sfPoseGroup(1056964607 , 0, frameCount);
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC5_PUSH_CONST 1056964607 
VBC1_PUSH_0 
VBC3_PUSH_GLOBAL 7 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:102] ;sfPoseGroup(256 , 3072, frameCount);
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC3_PUSH_CONST 256 
VBC3_PUSH_CONST 3072 
VBC3_PUSH_GLOBAL 7 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:103] ;sfPoseGroup(16 , 768, frameCount);
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC2_PUSH_CONST 16 
VBC3_PUSH_CONST 768 
VBC3_PUSH_GLOBAL 7 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:104] ;sfPoseGroup(4 , -768, frameCount);
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC2_PUSH_CONST 4 
VBC3_PUSH_CONST -768 // -
VBC3_PUSH_GLOBAL 7 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:105] ;sfPoseGroup(512 , 3840, frameCount);
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC3_PUSH_CONST 512 
VBC3_PUSH_CONST 3840 
VBC3_PUSH_GLOBAL 7 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:106] ;sfPoseGroup(32 , 3840, frameCount);
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC2_PUSH_CONST 32 
VBC3_PUSH_CONST 3840 
VBC3_PUSH_GLOBAL 7 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:107] ;sfPoseGroup(8 , 3840, frameCount);
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC2_PUSH_CONST 8 
VBC3_PUSH_CONST 3840 
VBC3_PUSH_GLOBAL 7 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:108] ;sfWaitFrame(frameCount);
VBC2_PUSH_CONST 56  //func address sfWaitFrame
VBC3_PUSH_GLOBAL 7 //frameCount
VBC1_CALL1
VBC1_STACK_UP2//remove result, call address and params
[1:110] ;frameCount = 60;
VBC2_PUSH_CONST 7 //frameCount
VBC2_PUSH_CONST 60 
VBC1_POP
[1:111] ;sfPoseGroup(256  | 512 , 3072, frameCount);
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC3_PUSH_CONST 768 
VBC3_PUSH_CONST 3072 
VBC3_PUSH_GLOBAL 7 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:112] ;sfPoseGroup(16  | 32 , 307, frameCount);
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC2_PUSH_CONST 48 
VBC3_PUSH_CONST 307 
VBC3_PUSH_GLOBAL 7 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:113] ;sfPoseGroup(4  | 8 , -1228, frameCount);
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC2_PUSH_CONST 12 
VBC3_PUSH_CONST -1228 // -
VBC3_PUSH_GLOBAL 7 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:114] ;sfWaitFrame(frameCount);
VBC2_PUSH_CONST 56  //func address sfWaitFrame
VBC3_PUSH_GLOBAL 7 //frameCount
VBC1_CALL1
VBC1_STACK_UP2//remove result, call address and params
[1:116] ;frameCount = 20;
VBC2_PUSH_CONST 7 //frameCount
VBC2_PUSH_CONST 20 
VBC1_POP
[1:117] ;sfPoseGroup(1056964607 , 0, frameCount);
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC5_PUSH_CONST 1056964607 
VBC1_PUSH_0 
VBC3_PUSH_GLOBAL 7 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:118] ;sfWaitFrame(frameCount);
VBC2_PUSH_CONST 56  //func address sfWaitFrame
VBC3_PUSH_GLOBAL 7 //frameCount
VBC1_CALL1
VBC1_STACK_UP2//remove result, call address and params
LAB1142: //if else
[1:120] ;if (fallingFlag == -2) {  
VBC3_PUSH_GLOBAL 3 //fallingFlag
VBC2_PUSH_CONST -2 // -
VBC1_EQU
VBC4_FALSE_JUMP LAB1358 //if to false
;
[1:122] ;frameCount = 40;
VBC2_PUSH_CONST 7 //frameCount
VBC2_PUSH_CONST 40 
VBC1_POP
[1:123] ;sfPoseGroup(1056964607 , 0, frameCount);
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC5_PUSH_CONST 1056964607 
VBC1_PUSH_0 
VBC3_PUSH_GLOBAL 7 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:124] ;sfPoseGroup(256 , 3840, frameCount);
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC3_PUSH_CONST 256 
VBC3_PUSH_CONST 3840 
VBC3_PUSH_GLOBAL 7 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:125] ;sfPoseGroup(16 , 3840, frameCount);
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC2_PUSH_CONST 16 
VBC3_PUSH_CONST 3840 
VBC3_PUSH_GLOBAL 7 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:126] ;sfPoseGroup(4 , 3840, frameCount);
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC2_PUSH_CONST 4 
VBC3_PUSH_CONST 3840 
VBC3_PUSH_GLOBAL 7 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:127] ;sfPoseGroup(512 , 3072, frameCount);
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC3_PUSH_CONST 512 
VBC3_PUSH_CONST 3072 
VBC3_PUSH_GLOBAL 7 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:128] ;sfPoseGroup(32 , 768, frameCount);
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC2_PUSH_CONST 32 
VBC3_PUSH_CONST 768 
VBC3_PUSH_GLOBAL 7 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:129] ;sfPoseGroup(8 , -768, frameCount);
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC2_PUSH_CONST 8 
VBC3_PUSH_CONST -768 // -
VBC3_PUSH_GLOBAL 7 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:130] ;sfWaitFrame(frameCount);
VBC2_PUSH_CONST 56  //func address sfWaitFrame
VBC3_PUSH_GLOBAL 7 //frameCount
VBC1_CALL1
VBC1_STACK_UP2//remove result, call address and params
[1:132] ;frameCount = 60;
VBC2_PUSH_CONST 7 //frameCount
VBC2_PUSH_CONST 60 
VBC1_POP
[1:133] ;sfPoseGroup(256  | 512 , 3072, frameCount);
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC3_PUSH_CONST 768 
VBC3_PUSH_CONST 3072 
VBC3_PUSH_GLOBAL 7 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:134] ;sfPoseGroup(16  | 32 , 307, frameCount);
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC2_PUSH_CONST 48 
VBC3_PUSH_CONST 307 
VBC3_PUSH_GLOBAL 7 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:135] ;sfPoseGroup(4  | 8 , -1228, frameCount);
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC2_PUSH_CONST 12 
VBC3_PUSH_CONST -1228 // -
VBC3_PUSH_GLOBAL 7 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:136] ;sfWaitFrame(frameCount);
VBC2_PUSH_CONST 56  //func address sfWaitFrame
VBC3_PUSH_GLOBAL 7 //frameCount
VBC1_CALL1
VBC1_STACK_UP2//remove result, call address and params
[1:138] ;frameCount = 20;
VBC2_PUSH_CONST 7 //frameCount
VBC2_PUSH_CONST 20 
VBC1_POP
[1:139] ;sfPoseGroup(1056964607 , 0, frameCount);
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC5_PUSH_CONST 1056964607 
VBC1_PUSH_0 
VBC3_PUSH_GLOBAL 7 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:140] ;sfWaitFrame(frameCount);
VBC2_PUSH_CONST 56  //func address sfWaitFrame
VBC3_PUSH_GLOBAL 7 //frameCount
VBC1_CALL1
VBC1_STACK_UP2//remove result, call address and params
LAB1358: //if else
[1:146] ;
VBC1_RETURN
;testDrop <void()>
[1:147] ;if( sfAbs(svImuAccX) > 50000 || sfAbs(svImuAccZ) > 50000 ) {
VBC5_PUSH_CONST 20 | 0x80000000 //import func index sfAbs
VBC3_PUSH_GLOBAL 2560 //svImuAccX
VBC1_CALL1
VBC1_STACK_UP1//remove call address and params
VBC4_PUSH_CONST 50000 
VBC1_GREAT
VBC4_TRUE_JUMP_KEEP LAB1398
VBC5_PUSH_CONST 20 | 0x80000000 //import func index sfAbs
VBC3_PUSH_GLOBAL 2562 //svImuAccZ
VBC1_CALL1
VBC1_STACK_UP1//remove call address and params
VBC4_PUSH_CONST 50000 
VBC1_GREAT
VBC4_TRUE_JUMP_KEEP LAB1398
VBC1_PUSH_0
LAB1398:
VBC4_FALSE_JUMP LAB1468 //if to false
;
[1:149] ;if (svImuAccX > 5000) fallingFlag = 1; 
VBC3_PUSH_GLOBAL 2560 //svImuAccX
VBC3_PUSH_CONST 5000 
VBC1_GREAT
VBC4_FALSE_JUMP LAB1417 //if to false
;if (svImuAccX > 5000) fallingFlag = 1; 
VBC2_PUSH_CONST 3 //fallingFlag
VBC1_PUSH_1 
VBC1_POP
LAB1417: //if else
[1:150] ;if (svImuAccX < 5000) fallingFlag = -1; 
VBC3_PUSH_GLOBAL 2560 //svImuAccX
VBC3_PUSH_CONST 5000 
VBC1_LESS
VBC4_FALSE_JUMP LAB1433 //if to false
;if (svImuAccX < 5000) fallingFlag = -1; 
VBC2_PUSH_CONST 3 //fallingFlag
VBC2_PUSH_CONST -1 // -
VBC1_POP
LAB1433: //if else
[1:151] ;if (svImuAccZ > 5000) fallingFlag = 2; 
VBC3_PUSH_GLOBAL 2562 //svImuAccZ
VBC3_PUSH_CONST 5000 
VBC1_GREAT
VBC4_FALSE_JUMP LAB1448 //if to false
;if (svImuAccZ > 5000) fallingFlag = 2; 
VBC2_PUSH_CONST 3 //fallingFlag
VBC1_PUSH_2 
VBC1_POP
LAB1448: //if else
[1:152] ;if (svImuAccZ < 5000) fallingFlag = -2; 
VBC3_PUSH_GLOBAL 2562 //svImuAccZ
VBC3_PUSH_CONST 5000 
VBC1_LESS
VBC4_FALSE_JUMP LAB1464 //if to false
;if (svImuAccZ < 5000) fallingFlag = -2; 
VBC2_PUSH_CONST 3 //fallingFlag
VBC2_PUSH_CONST -2 // -
VBC1_POP
LAB1464: //if else
[1:158] ;standUp();
VBC2_PUSH_CONST 70  //func address standUp
VBC1_CALL0
VBC1_STACK_UP1//remove result, call address and params
LAB1468: //if else
[1:163] ;
VBC1_RETURN
;mixing <void()>
[1:168] ;leftRightFactor = 100;
VBC2_PUSH_CONST 8 //leftRightFactor
VBC2_PUSH_CONST 100 
VBC1_POP
[1:169] ;frontBackFactor = 180;
VBC2_PUSH_CONST 9 //frontBackFactor
VBC3_PUSH_CONST 180 
VBC1_POP
[1:171] ;while(1) {
LAB1480: //while condition
;
[1:173] ;leftFootSideAddonMix = -svImuGyroZ * leftRightFactor >> 10;
VBC3_PUSH_CONST 2953 //leftFootSideAddonMix
VBC3_PUSH_GLOBAL 2568 //svImuGyroZ
VBC1_NEG
VBC3_PUSH_GLOBAL 8 //leftRightFactor
VBC1_MUL
VBC2_PUSH_CONST 10 
VBC1_RSHIFT
VBC1_POP
[1:174] ;rightFootSideAddonMix = svImuGyroZ * leftRightFactor >> 10;
VBC3_PUSH_CONST 2937 //rightFootSideAddonMix
VBC3_PUSH_GLOBAL 2568 //svImuGyroZ
VBC3_PUSH_GLOBAL 8 //leftRightFactor
VBC1_MUL
VBC2_PUSH_CONST 10 
VBC1_RSHIFT
VBC1_POP
[1:177] ;rightFootFrontAddonMix = leftFootFrontAddonMix = -svImuGyroX * frontBackFactor >> 10;
VBC3_PUSH_CONST 2905 //rightFootFrontAddonMix
VBC3_PUSH_CONST 2921 //leftFootFrontAddonMix
VBC3_PUSH_GLOBAL 2566 //svImuGyroX
VBC1_NEG
VBC3_PUSH_GLOBAL 9 //frontBackFactor
VBC1_MUL
VBC2_PUSH_CONST 10 
VBC1_RSHIFT
VBC1_STORE
VBC1_POP
[1:180] ;sfWaitNextFrame();
VBC1_WAIT
VBC4_JUMP LAB1480 //while forever loop
LAB1533: //while exit
[1:184] ;
VBC1_RETURN
;sitToStart <void()>
[1:185] ;frameCount = 80;
VBC2_PUSH_CONST 7 //frameCount
VBC2_PUSH_CONST 80 
VBC1_POP
[1:186] ;sfPoseGroup(33554432 , 700, frameCount);
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC5_PUSH_CONST 33554432 
VBC3_PUSH_CONST 700 
VBC3_PUSH_GLOBAL 7 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:187] ;sfPoseGroup(4 , 1370, frameCount);
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC2_PUSH_CONST 4 
VBC3_PUSH_CONST 1370 
VBC3_PUSH_GLOBAL 7 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:188] ;sfPoseGroup(8 , 1370, frameCount);
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC2_PUSH_CONST 8 
VBC3_PUSH_CONST 1370 
VBC3_PUSH_GLOBAL 7 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:189] ;sfPoseGroup(64 , 700, frameCount);
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC2_PUSH_CONST 64 
VBC3_PUSH_CONST 700 
VBC3_PUSH_GLOBAL 7 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:190] ;sfPoseGroup(128 , 700, frameCount);
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC3_PUSH_CONST 128 
VBC3_PUSH_CONST 700 
VBC3_PUSH_GLOBAL 7 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:191] ;sfPoseGroup(256 , 4500, frameCount);
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC3_PUSH_CONST 256 
VBC3_PUSH_CONST 4500 
VBC3_PUSH_GLOBAL 7 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:192] ;sfPoseGroup(512 , 4500, frameCount);
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC3_PUSH_CONST 512 
VBC3_PUSH_CONST 4500 
VBC3_PUSH_GLOBAL 7 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:193] ;sfPoseGroup(4096 , 410, frameCount);
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC3_PUSH_CONST 4096 
VBC3_PUSH_CONST 410 
VBC3_PUSH_GLOBAL 7 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:194] ;sfPoseGroup(8192 , -174, frameCount);
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC3_PUSH_CONST 8192 
VBC3_PUSH_CONST -174 // -
VBC3_PUSH_GLOBAL 7 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:195] ;sfPoseGroup(16384 , 4350, frameCount);
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC3_PUSH_CONST 16384 
VBC3_PUSH_CONST 4350 
VBC3_PUSH_GLOBAL 7 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:196] ;sfPoseGroup(32768 , 4240, frameCount);
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC4_PUSH_CONST 32768 
VBC3_PUSH_CONST 4240 
VBC3_PUSH_GLOBAL 7 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:197] ;sfPoseGroup(65536 , 4800, frameCount);
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC4_PUSH_CONST 65536 
VBC3_PUSH_CONST 4800 
VBC3_PUSH_GLOBAL 7 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:198] ;sfPoseGroup(131072 , 5400, frameCount);
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC4_PUSH_CONST 131072 
VBC3_PUSH_CONST 5400 
VBC3_PUSH_GLOBAL 7 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:199] ;sfPoseGroup(262144 , 2518, frameCount);
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC4_PUSH_CONST 262144 
VBC3_PUSH_CONST 2518 
VBC3_PUSH_GLOBAL 7 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:200] ;sfPoseGroup(524288 , 2550, frameCount);
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC4_PUSH_CONST 524288 
VBC3_PUSH_CONST 2550 
VBC3_PUSH_GLOBAL 7 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:201] ;sfPoseGroup(1048576 , 430, frameCount);
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC4_PUSH_CONST 1048576 
VBC3_PUSH_CONST 430 
VBC3_PUSH_GLOBAL 7 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:202] ;sfPoseGroup(2097152 , -174, frameCount);
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC4_PUSH_CONST 2097152 
VBC3_PUSH_CONST -174 // -
VBC3_PUSH_GLOBAL 7 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:203] ;sfPoseGroup(67108864 , 2050, frameCount);
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC5_PUSH_CONST 67108864 
VBC3_PUSH_CONST 2050 
VBC3_PUSH_GLOBAL 7 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:204] ;sfPoseGroup(134217728 , 1380, frameCount);
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC5_PUSH_CONST 134217728 
VBC3_PUSH_CONST 1380 
VBC3_PUSH_GLOBAL 7 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:205] ;sfWaitFrame(frameCount);
VBC2_PUSH_CONST 56  //func address sfWaitFrame
VBC3_PUSH_GLOBAL 7 //frameCount
VBC1_CALL1
VBC1_STACK_UP2//remove result, call address and params
[1:208] ;
VBC1_RETURN
;main <void()>
[1:209] ;fallingFlag = 0;
VBC2_PUSH_CONST 3 //fallingFlag
VBC1_PUSH_0 
VBC1_POP
[1:210] ;restart_flag = 0;
VBC1_PUSH_2 //restart_flag
VBC1_PUSH_0 
VBC1_POP
[1:213] ;sfCreateTask( mixing, 20 );
VBC5_PUSH_CONST 2 | 0x80000000 //import func index sfCreateTask
VBC3_PUSH_CONST 1469  //func address mixing
VBC2_PUSH_CONST 20 
VBC1_CALL2
VBC1_STACK_UP3//remove result, call address and params
[1:215] ;sitToStart();
VBC3_PUSH_CONST 1534  //func address sitToStart
VBC1_CALL0
VBC1_STACK_UP1//remove result, call address and params
[1:217] ;svButtonRight = -1 ;
VBC3_PUSH_CONST 2582 //svButtonRight
VBC2_PUSH_CONST -1 // -
VBC1_POP
[1:218] ;svButtonLeft = -1 ;
VBC3_PUSH_CONST 2581 //svButtonLeft
VBC2_PUSH_CONST -1 // -
VBC1_POP
[1:219] ;sfBip(1, 1);
VBC5_PUSH_CONST 43 | 0x80000000 //import func index sfBip
VBC1_PUSH_1 
VBC1_PUSH_1 
VBC1_CALL2
VBC1_STACK_UP3//remove result, call address and params
[1:220] ;while (svButtonPress != 2 ) sfWaitFrame(1); 
LAB1906: //while condition
VBC3_PUSH_GLOBAL 2583 //svButtonPress
VBC1_PUSH_2 
VBC1_NOT_EQU
VBC4_FALSE_JUMP LAB1924 //while to exit
;while (svButtonPress != 2 ) sfWaitFrame(1); 
VBC2_PUSH_CONST 56  //func address sfWaitFrame
VBC1_PUSH_1 
VBC1_CALL1
VBC1_STACK_UP2//remove result, call address and params
VBC4_JUMP LAB1906 //while forever loop
LAB1924: //while exit
[1:221] ;svButtonRight = 66 ;
VBC3_PUSH_CONST 2582 //svButtonRight
VBC2_PUSH_CONST 66 
VBC1_POP
[1:222] ;svButtonLeft = 69 ;
VBC3_PUSH_CONST 2581 //svButtonLeft
VBC2_PUSH_CONST 69 
VBC1_POP
[1:223] ;restart_flag = 1;
VBC1_PUSH_2 //restart_flag
VBC1_PUSH_1 
VBC1_POP
[1:226] ;sfWaitFrame( 100 );
VBC2_PUSH_CONST 56  //func address sfWaitFrame
VBC2_PUSH_CONST 100 
VBC1_CALL1
VBC1_STACK_UP2//remove result, call address and params
[1:228] ;testDrop(); 
VBC3_PUSH_CONST 1359  //func address testDrop
VBC1_CALL0
VBC1_STACK_UP1//remove result, call address and params
[1:230] ;
VBC1_RETURN
//Init table
//Variables
svFrameCount : 1
svImuAccX : 2560
svImuAccY : 2561
svImuAccZ : 2562
svImuAccRawX : 2563
svImuAccRawY : 2564
svImuAccRawZ : 2565
svImuGyroX : 2566
svImuGyroY : 2567
svImuGyroZ : 2568
svImuGyroRawX : 2569
svImuGyroRawY : 2570
svImuGyroRawZ : 2571
svImuQuaterX : 2572
svImuQuaterY : 2573
svImuQuaterZ : 2574
svImuQuaterW : 2575
svImuQuaterAcc : 2576
svImuAccSlowX : 2577
svImuAccSlowY : 2578
svImuAccSlowZ : 2579
svAdc : 2580
svButtonLeft : 2581
svButtonRight : 2582
svButtonPress : 2583
svHeadControlMask : 2584
svDefFrameCount : 2585
svEulerYaw F: 2600
svEulerPitch F: 2601
svEulerRoll F: 2602
svRemoteStatus : 3250
svRemoteButton : 3251
svRemoteLeftJoystick : 3252
svRemoteLeftJoystickX : 3253
svRemoteLeftJoystickY : 3254
svRemoteRightJoystick : 3255
svRemoteRightJoystickX : 3256
svRemoteRightJoystickY : 3257
svHumoModelDistPelvic : 3264
svHumoModelLengthPelvicHip : 3265
svHumoModelLengthHipHip : 3266
svHumoModelLengthHipKnee : 3267
svHumoModelLengthKneeFoot : 3268
svHumoModelLengthFootFoot : 3269
svHumoModelDistFootFloor : 3270
svHumoModelFootLength : 3271
svHumoModelFootWidth : 3272
svHumoModelFootCenterBack : 3273
svHumoModelFootCenterInner : 3274
svHumoModelAngPelvic : 3258
svHumoModelAngHipSide : 3260
svHumoModelAngHip : 3259
svHumoModelAngKnee : 3261
svHumoModelAngFoot : 3262
svHumoModelAngFootSide : 3263
svIkA5 F: 3275
svIkB5 F: 3276
svIkC5 F: 3277
svIkA6 F: 3278
svIkA7 F: 3279
svIkA8 F: 3280
svIkA9 F: 3281
svIkA10 F: 3282
svIkB10 F: 3283
svIkC10 F: 3284
svIkLimA5min F: 3285
svIkLimA5max F: 3286
svIkLimA6min F: 3287
svIkLimA6max F: 3288
svIkLimA7min F: 3289
svIkLimA7max F: 3290
svIkLimA8min F: 3291
svIkLimA8max F: 3292
svIkLimA9min F: 3293
svIkLimA9max F: 3294
svIkLimA10min F: 3295
svIkLimA10max F: 3296
svIkOutPresent : 3297
svIkEncA5 : 3298
svIkEncA6 : 3299
svIkEncA7 : 3300
svIkEncA8 : 3301
svIkEncA9 : 3302
svIkEncA10 : 3303
headRotateTarget : 2610
headRotateCurrent : 2611
headRotatePwm : 2612
headRotateVelo : 2613
headRotateFlags : 2615
headRotateAddonMix : 2617
torsoRotateTarget : 2626
torsoRotateCurrent : 2627
torsoRotatePwm : 2628
torsoRotateVelo : 2629
torsoRotateFlags : 2631
torsoRotateAddonMix : 2633
rightClavicleTarget : 2642
rightClavicleCurrent : 2643
rightClaviclePwm : 2644
rightClavicleVelo : 2645
rightClavicleFlags : 2647
rightClavicleAddonMix : 2649
leftClavicleTarget : 2658
leftClavicleCurrent : 2659
leftClaviclePwm : 2660
leftClavicleVelo : 2661
leftClavicleFlags : 2663
leftClavicleAddonMix : 2665
rightShoulderTarget : 2674
rightShoulderCurrent : 2675
rightShoulderPwm : 2676
rightShoulderVelo : 2677
rightShoulderFlags : 2679
rightShoulderAddonMix : 2681
leftShoulderTarget : 2690
leftShoulderCurrent : 2691
leftShoulderPwm : 2692
leftShoulderVelo : 2693
leftShoulderFlags : 2695
leftShoulderAddonMix : 2697
rightElbowSideTarget : 2706
rightElbowSideCurrent : 2707
rightElbowSidePwm : 2708
rightElbowSideVelo : 2709
rightElbowSideFlags : 2711
rightElbowSideAddonMix : 2713
leftElbowSideTarget : 2722
leftElbowSideCurrent : 2723
leftElbowSidePwm : 2724
leftElbowSideVelo : 2725
leftElbowSideFlags : 2727
leftElbowSideAddonMix : 2729
rightElbowTarget : 2738
rightElbowCurrent : 2739
rightElbowPwm : 2740
rightElbowVelo : 2741
rightElbowFlags : 2743
rightElbowAddonMix : 2745
leftElbowTarget : 2754
leftElbowCurrent : 2755
leftElbowPwm : 2756
leftElbowVelo : 2757
leftElbowFlags : 2759
leftElbowAddonMix : 2761
rightPelvicTarget : 2770
rightPelvicCurrent : 2771
rightPelvicPwm : 2772
rightPelvicVelo : 2773
rightPelvicFlags : 2775
rightPelvicAddonMix : 2777
leftPelvicTarget : 2786
leftPelvicCurrent : 2787
leftPelvicPwm : 2788
leftPelvicVelo : 2789
leftPelvicFlags : 2791
leftPelvicAddonMix : 2793
rightHipSideTarget : 2802
rightHipSideCurrent : 2803
rightHipSidePwm : 2804
rightHipSideVelo : 2805
rightHipSideFlags : 2807
rightHipSideAddonMix : 2809
leftHipSideTarget : 2818
leftHipSideCurrent : 2819
leftHipSidePwm : 2820
leftHipSideVelo : 2821
leftHipSideFlags : 2823
leftHipSideAddonMix : 2825
rightHipTarget : 2834
rightHipCurrent : 2835
rightHipPwm : 2836
rightHipVelo : 2837
rightHipFlags : 2839
rightHipAddonMix : 2841
leftHipTarget : 2850
leftHipCurrent : 2851
leftHipPwm : 2852
leftHipVelo : 2853
leftHipFlags : 2855
leftHipAddonMix : 2857
rightKneeTarget : 2866
rightKneeCurrent : 2867
rightKneePwm : 2868
rightKneeVelo : 2869
rightKneeFlags : 2871
rightKneeAddonMix : 2873
leftKneeTarget : 2882
leftKneeCurrent : 2883
leftKneePwm : 2884
leftKneeVelo : 2885
leftKneeFlags : 2887
leftKneeAddonMix : 2889
rightFootFrontTarget : 2898
rightFootFrontCurrent : 2899
rightFootFrontPwm : 2900
rightFootFrontVelo : 2901
rightFootFrontFlags : 2903
rightFootFrontAddonMix : 2905
leftFootFrontTarget : 2914
leftFootFrontCurrent : 2915
leftFootFrontPwm : 2916
leftFootFrontVelo : 2917
leftFootFrontFlags : 2919
leftFootFrontAddonMix : 2921
rightFootSideTarget : 2930
rightFootSideCurrent : 2931
rightFootSidePwm : 2932
rightFootSideVelo : 2933
rightFootSideFlags : 2935
rightFootSideAddonMix : 2937
leftFootSideTarget : 2946
leftFootSideCurrent : 2947
leftFootSidePwm : 2948
leftFootSideVelo : 2949
leftFootSideFlags : 2951
leftFootSideAddonMix : 2953
rightHandTarget : 2962
rightHandCurrent : 2963
rightHandPwm : 2964
rightHandVelo : 2965
rightHandFlags : 2967
rightHandAddonMix : 2969
leftHandTarget : 2978
leftHandCurrent : 2979
leftHandPwm : 2980
leftHandVelo : 2981
leftHandFlags : 2983
leftHandAddonMix : 2985
headTiltTarget : 3010
headTiltCurrent : 3011
headTiltPwm : 3012
headTiltVelo : 3013
headTiltFlags : 3015
headTiltAddonMix : 3017
rightKneeBotTarget : 3026
rightKneeBotCurrent : 3027
rightKneeBotPwm : 3028
rightKneeBotVelo : 3029
rightKneeBotFlags : 3031
rightKneeBotAddonMix : 3033
leftKneeBotTarget : 3042
leftKneeBotCurrent : 3043
leftKneeBotPwm : 3044
leftKneeBotVelo : 3045
leftKneeBotFlags : 3047
leftKneeBotAddonMix : 3049
rightClawTarget : 3058
rightClawCurrent : 3059
rightClawPwm : 3060
rightClawVelo : 3061
rightClawFlags : 3063
rightClawAddonMix : 3065
leftClawTarget : 3074
leftClawCurrent : 3075
leftClawPwm : 3076
leftClawVelo : 3077
leftClawFlags : 3079
leftClawAddonMix : 3081
restart_flag : 2
fallingFlag : 3
torsoAdd : 4
forwardDirection F: 5
correctedRotation F: 6
frameCount : 7
leftRightFactor : 8
frontBackFactor : 9
