//====================================================================
//      SvCompiler V6.06
//By A.Sibilev
//====================================================================
//cblock

;sfVpuVersion <int()>
;sfCreateTask <int(,*<void()>,int)>
;sfLog <void(,cstring,int,int,int)>
;sfLogOpen <void(,cstring)>
;sfLogClose <void()>
;sfWaitFrameOut <void(,int)>
;sfIsFrameOut <int(,int)>
;sfWaitNextFrame <void()>
;sfSlotIndex <int(,cstring)>
;sfAbs <int(,int)>
;sfIMin <int(,int,int)>
;sfIMax <int(,int,int)>
;sfUMin <int(,int,int)>
;sfUMax <int(,int,int)>
;sfILimit <int(,int,int,int)>
;sfStop <void()>
;sfStartSlot <void(,int)>
;sfBip <void(,int,int)>
;sfFreeGroup <void(,int)>
;sfPoseGroup <void(,int,int,int)>
;sfPoseGroupDelay <void(,int,int,int,int)>
;sfPoseCorrect <void(,int,int)>
;sfQueueGroup <void(,int,int,int)>
;sfPoseIdx <void(,int,int,int)>
;sfPoseGroupLin <void(,int,int,int)>
;sfStrainGroup <void(,int)>
;sfPlaySamples <void(,int,*cblock,int)>
;sfAccumSetup1 <void(,*int)>
;sfAccumSetup2 <void(,*int,*int)>
;sfAccumSetup3 <void(,*int,*int,*int)>
;sfAccumSetup4 <void(,*int,*int,*int,*int)>
;sfAccumTrigger <void()>
;sfAccumReset <void()>
;sfMathAcos <int(,int,int)>
;sfMathSqrti <int(,int)>
;sfMathAngleOfTriangle <int(,int,int,int)>
;sfMathAngleOfKnee <int(,int,int,int)>
;sfMathCathetOfSquareTriangle <int(,int,int)>
;sfMathHypotenuseOfSquareTriangle <int(,int,int)>
;sfMathTableSin <int(,int,int)>
;sfHumoModelSetup <void()>
;sfHumoModelFootAtFloor <void(,int,int,int)>
;sfHumoModelFootPush <void(,int,int,int)>
;sfIndexOfMask <int(,int)>
;sfQueueIdxAppend <int(,int,int,int)>
;sfQueueIdxOffsets <int(,int,int,*cblock,int)>
;sfQueueIdxSinMove <int(,int,int,int,int)>
;sfQueueIdxLast <int(,int)>
;sfQueueIdxCount <int(,int)>
;sfQueueMax <int()>
;sfIkSetup <void()>
;sfIkAngle <void(,float,float,float,float,float,float,float)>
;sfMathCos <float(,float)>
;sfMathSin <float(,float)>
;sfQuaternionToEuler <void(,float,float,float,float)>
;sfQuaternionToEulerImu <void()>
;sfFMathACos <float(,float)>
;sfFMathASin <float(,float)>
;sfFMathATan <float(,float)>
;sfFMathATan2 <float(,float,float)>
;sfFMathCos <float(,float)>
;sfFMathSin <float(,float)>
;sfFMathTan <float(,float)>
;sfFMathCosh <float(,float)>
;sfFMathSinh <float(,float)>
;sfFMathTanh <float(,float)>
;sfFMathExp <float(,float)>
;sfFMathFrExp <float(,float,*int)>
;sfFMathLdExp <float(,float,int)>
;sfFMathLog <float(,float)>
;sfFMathLog10 <float(,float)>
;sfFMathModf <float(,float,*float)>
;sfFMathPow <float(,float,float)>
;sfFMathSqrt <float(,float)>
;sfFMathCeil <float(,float)>
;sfFMathFAbs <float(,float)>
;sfFMathFloor <float(,float)>
;sfFMathFMod <float(,float,float)>
;sfWaitFrame <void(,int)>
[3:348] ;sfWaitFrameOut( frame + svFrameCount );
VBC5_PUSH_CONST 17 | 0x80000000 //import func index sfWaitFrameOut
VBC2_PUSH_LOCAL 2 //frame
VBC3_PUSH_GLOBAL 1 //svFrameCount
VBC1_ADD
VBC1_CALL1
VBC1_STACK_UP2//remove result, call address and params
[2:10] ;
VBC1_RETURN
;page0 <void()>
[1:14] ;frameCount = 20;
VBC2_PUSH_CONST 5 //frameCount
VBC2_PUSH_CONST 20 
VBC1_POP
[1:15] ;sfPoseGroup( 262144 , 0, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC4_PUSH_CONST 262144 
VBC1_PUSH_0 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:16] ;sfPoseGroup( 16384 , 0, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC3_PUSH_CONST 16384 
VBC1_PUSH_0 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:17] ;sfPoseGroup( 1024 , 0, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC3_PUSH_CONST 1024 
VBC1_PUSH_0 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:18] ;sfPoseGroup( 256 , 0, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC3_PUSH_CONST 256 
VBC1_PUSH_0 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:19] ;sfPoseGroup( 64 , 0, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC2_PUSH_CONST 64 
VBC1_PUSH_0 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:20] ;sfPoseGroup( 16 , 0, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC2_PUSH_CONST 16 
VBC1_PUSH_0 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:21] ;sfPoseGroup( 4 , 0, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC2_PUSH_CONST 4 
VBC1_PUSH_0 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:22] ;sfPoseGroup( 2 , 0, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC1_PUSH_2 
VBC1_PUSH_0 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:23] ;sfPoseGroup( 2097152 , 0, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC4_PUSH_CONST 2097152 
VBC1_PUSH_0 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:24] ;sfPoseGroup( 524288 , 0, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC4_PUSH_CONST 524288 
VBC1_PUSH_0 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:25] ;sfPoseGroup( 32768 , 0, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC4_PUSH_CONST 32768 
VBC1_PUSH_0 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:26] ;sfPoseGroup( 512 , 0, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC3_PUSH_CONST 512 
VBC1_PUSH_0 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:27] ;sfPoseGroup( 128 , 0, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC3_PUSH_CONST 128 
VBC1_PUSH_0 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:28] ;sfPoseGroup( 32 , 0, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC2_PUSH_CONST 32 
VBC1_PUSH_0 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:29] ;sfPoseGroup( 8 , 0, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC2_PUSH_CONST 8 
VBC1_PUSH_0 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:30] ;sfPoseGroup( 1 , 0, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC1_PUSH_1 
VBC1_PUSH_0 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:31] ;sfPoseGroup( 33554432 , 0, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC5_PUSH_CONST 33554432 
VBC1_PUSH_0 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:32] ;sfWaitFrame( frameCount );
VBC2_PUSH_CONST 56  //func address sfWaitFrame
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL1
VBC1_STACK_UP2//remove result, call address and params
[1:36] ;
VBC1_RETURN
;page1 <void()>
[1:37] ;frameCount = 200;
VBC2_PUSH_CONST 5 //frameCount
VBC3_PUSH_CONST 200 
VBC1_POP
[1:38] ;sfPoseGroup( 262144 , -1382, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC4_PUSH_CONST 262144 
VBC3_PUSH_CONST -1382 // -
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:39] ;sfPoseGroup( 16384 , 5168, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC3_PUSH_CONST 16384 
VBC3_PUSH_CONST 5168 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:40] ;sfPoseGroup( 64 , -4096, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC2_PUSH_CONST 64 
VBC3_PUSH_CONST -4096 // -
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:41] ;sfPoseGroup( 4 , 5376, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC2_PUSH_CONST 4 
VBC3_PUSH_CONST 5376 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:42] ;sfPoseGroup( 524288 , -1382, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC4_PUSH_CONST 524288 
VBC3_PUSH_CONST -1382 // -
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:43] ;sfPoseGroup( 32768 , 5168, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC4_PUSH_CONST 32768 
VBC3_PUSH_CONST 5168 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:44] ;sfPoseGroup( 128 , -4096, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC3_PUSH_CONST 128 
VBC3_PUSH_CONST -4096 // -
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:45] ;sfPoseGroup( 8 , 5376, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC2_PUSH_CONST 8 
VBC3_PUSH_CONST 5376 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:46] ;sfPoseGroup( 16 , -791 - clamping, frameCount );  
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC2_PUSH_CONST 16 
VBC3_PUSH_CONST -791 // -
VBC3_PUSH_GLOBAL 3 //clamping
VBC1_SUB
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:47] ;sfPoseGroup( 32 , -791 - clamping, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC2_PUSH_CONST 32 
VBC3_PUSH_CONST -791 // -
VBC3_PUSH_GLOBAL 3 //clamping
VBC1_SUB
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:48] ;sfWaitFrame( frameCount );
VBC2_PUSH_CONST 56  //func address sfWaitFrame
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL1
VBC1_STACK_UP2//remove result, call address and params
[1:51] ;
VBC1_RETURN
;page2 <void()>
[1:52] ;frameCount = 400;
VBC2_PUSH_CONST 5 //frameCount
VBC3_PUSH_CONST 400 
VBC1_POP
[1:54] ;sfPoseGroup( 16 , -791 - clamping, frameCount );  
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC2_PUSH_CONST 16 
VBC3_PUSH_CONST -791 // -
VBC3_PUSH_GLOBAL 3 //clamping
VBC1_SUB
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:55] ;sfPoseGroup( 4 , 5376, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC2_PUSH_CONST 4 
VBC3_PUSH_CONST 5376 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:56] ;sfPoseGroup( 256 , 700, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC3_PUSH_CONST 256 
VBC3_PUSH_CONST 700 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:57] ;sfPoseGroup( 512 , 700, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC3_PUSH_CONST 512 
VBC3_PUSH_CONST 700 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:59] ;sfPoseGroup( 32 , -791 - clamping, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC2_PUSH_CONST 32 
VBC3_PUSH_CONST -791 // -
VBC3_PUSH_GLOBAL 3 //clamping
VBC1_SUB
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:60] ;sfPoseGroup( 8 , 5376, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC2_PUSH_CONST 8 
VBC3_PUSH_CONST 5376 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:61] ;sfWaitFrame( frameCount );
VBC2_PUSH_CONST 56  //func address sfWaitFrame
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL1
VBC1_STACK_UP2//remove result, call address and params
[1:64] ;
VBC1_RETURN
;page3 <void()>
[1:65] ;frameCount = 100;
VBC2_PUSH_CONST 5 //frameCount
VBC2_PUSH_CONST 100 
VBC1_POP
[1:66] ;sfPoseGroup( 262144 , 0, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC4_PUSH_CONST 262144 
VBC1_PUSH_0 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:67] ;sfPoseGroup( 16384 , 0, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC3_PUSH_CONST 16384 
VBC1_PUSH_0 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:68] ;sfPoseGroup( 4 , 1000, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC2_PUSH_CONST 4 
VBC3_PUSH_CONST 1000 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:69] ;sfPoseGroup( 2 , 0, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC1_PUSH_2 
VBC1_PUSH_0 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:70] ;sfPoseGroup( 2097152 , 0, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC4_PUSH_CONST 2097152 
VBC1_PUSH_0 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:71] ;sfPoseGroup( 524288 , 0, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC4_PUSH_CONST 524288 
VBC1_PUSH_0 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:72] ;sfPoseGroup( 32768 , 0, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC4_PUSH_CONST 32768 
VBC1_PUSH_0 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:73] ;sfPoseGroup( 8 , 1000, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC2_PUSH_CONST 8 
VBC3_PUSH_CONST 1000 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:74] ;sfWaitFrame( frameCount );
VBC2_PUSH_CONST 56  //func address sfWaitFrame
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL1
VBC1_STACK_UP2//remove result, call address and params
[1:77] ;
VBC1_RETURN
;page3_1 <void()>
[1:78] ;frameCount = 100;
VBC2_PUSH_CONST 5 //frameCount
VBC2_PUSH_CONST 100 
VBC1_POP
[1:79] ;sfPoseGroup( 16 , -591 - clamping, frameCount );  
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC2_PUSH_CONST 16 
VBC3_PUSH_CONST -591 // -
VBC3_PUSH_GLOBAL 3 //clamping
VBC1_SUB
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:80] ;sfPoseGroup( 262144 , 0, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC4_PUSH_CONST 262144 
VBC1_PUSH_0 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:81] ;sfPoseGroup( 16384 , 0, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC3_PUSH_CONST 16384 
VBC1_PUSH_0 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:82] ;sfPoseGroup( 4 , 4096, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC2_PUSH_CONST 4 
VBC3_PUSH_CONST 4096 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:83] ;sfPoseGroup( 2 , 0, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC1_PUSH_2 
VBC1_PUSH_0 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:84] ;sfPoseGroup( 2097152 , 0, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC4_PUSH_CONST 2097152 
VBC1_PUSH_0 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:85] ;sfPoseGroup( 524288 , 0, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC4_PUSH_CONST 524288 
VBC1_PUSH_0 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:86] ;sfPoseGroup( 32768 , 0, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC4_PUSH_CONST 32768 
VBC1_PUSH_0 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:87] ;sfPoseGroup( 8 , 4096, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC2_PUSH_CONST 8 
VBC3_PUSH_CONST 4096 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:88] ;sfWaitFrame( frameCount );
VBC2_PUSH_CONST 56  //func address sfWaitFrame
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL1
VBC1_STACK_UP2//remove result, call address and params
[1:91] ;
VBC1_RETURN
;page4 <void()>
[1:92] ;frameCount = 100;
VBC2_PUSH_CONST 5 //frameCount
VBC2_PUSH_CONST 100 
VBC1_POP
[1:93] ;sfPoseGroup( 262144 , 0, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC4_PUSH_CONST 262144 
VBC1_PUSH_0 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:94] ;sfPoseGroup( 64 , -4608, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC2_PUSH_CONST 64 
VBC3_PUSH_CONST -4608 // -
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:96] ;sfPoseGroup( 4 , 4608, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC2_PUSH_CONST 4 
VBC3_PUSH_CONST 4608 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:97] ;sfPoseGroup( 512 , 1075, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC3_PUSH_CONST 512 
VBC3_PUSH_CONST 1075 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:98] ;sfPoseGroup( 128 , -3072, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC3_PUSH_CONST 128 
VBC3_PUSH_CONST -3072 // -
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:100] ;sfPoseGroup( 8 , 3840, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC2_PUSH_CONST 8 
VBC3_PUSH_CONST 3840 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:101] ;sfWaitFrame( frameCount );
VBC2_PUSH_CONST 56  //func address sfWaitFrame
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL1
VBC1_STACK_UP2//remove result, call address and params
[1:104] ;
VBC1_RETURN
;page5 <void()>
[1:105] ;frameCount = 100;
VBC2_PUSH_CONST 5 //frameCount
VBC2_PUSH_CONST 100 
VBC1_POP
[1:106] ;sfPoseGroup( 256 , 1075, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC3_PUSH_CONST 256 
VBC3_PUSH_CONST 1075 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:107] ;sfPoseGroup( 64 , -5260, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC2_PUSH_CONST 64 
VBC3_PUSH_CONST -5260 // -
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:109] ;sfPoseGroup( 4 , 5068, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC2_PUSH_CONST 4 
VBC3_PUSH_CONST 5068 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:110] ;sfPoseGroup( 512 , 1382, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC3_PUSH_CONST 512 
VBC3_PUSH_CONST 1382 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:111] ;sfPoseGroup( 128 , -2304, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC3_PUSH_CONST 128 
VBC3_PUSH_CONST -2304 // -
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:113] ;sfPoseGroup( 8 , 3379, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC2_PUSH_CONST 8 
VBC3_PUSH_CONST 3379 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:114] ;sfWaitFrame( frameCount );
VBC2_PUSH_CONST 56  //func address sfWaitFrame
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL1
VBC1_STACK_UP2//remove result, call address and params
[1:117] ;
VBC1_RETURN
;page6 <void()>
[1:118] ;frameCount = 300;
VBC2_PUSH_CONST 5 //frameCount
VBC3_PUSH_CONST 300 
VBC1_POP
[1:120] ;sfPoseGroup( 256 , 1500, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC3_PUSH_CONST 256 
VBC3_PUSH_CONST 1500 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:121] ;sfPoseGroup( 64 , -4096, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC2_PUSH_CONST 64 
VBC3_PUSH_CONST -4096 // -
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:122] ;sfPoseGroup( 16 , -610 - clamping, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC2_PUSH_CONST 16 
VBC3_PUSH_CONST -610 // -
VBC3_PUSH_GLOBAL 3 //clamping
VBC1_SUB
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:123] ;sfPoseGroup( 4 , 4500, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC2_PUSH_CONST 4 
VBC3_PUSH_CONST 4500 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:124] ;sfPoseGroup( 512 , 3225, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC3_PUSH_CONST 512 
VBC3_PUSH_CONST 3225 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:125] ;sfPoseGroup( 128 , -821 - clamping, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC3_PUSH_CONST 128 
VBC3_PUSH_CONST -821 // -
VBC3_PUSH_GLOBAL 3 //clamping
VBC1_SUB
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:126] ;sfPoseGroup( 32 , -1044, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC2_PUSH_CONST 32 
VBC3_PUSH_CONST -1044 // -
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:127] ;sfPoseGroup( 8 , 1536, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC2_PUSH_CONST 8 
VBC3_PUSH_CONST 1536 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:128] ;sfWaitFrame( frameCount );
VBC2_PUSH_CONST 56  //func address sfWaitFrame
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL1
VBC1_STACK_UP2//remove result, call address and params
[1:131] ;
VBC1_RETURN
;page7 <void()>
[1:132] ;frameCount = 100;
VBC2_PUSH_CONST 5 //frameCount
VBC2_PUSH_CONST 100 
VBC1_POP
[1:133] ;sfPoseGroup( 256 , 0, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC3_PUSH_CONST 256 
VBC1_PUSH_0 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:134] ;sfPoseGroup( 64 , -4096, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC2_PUSH_CONST 64 
VBC3_PUSH_CONST -4096 // -
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:135] ;sfPoseGroup( 4 , 3993, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC2_PUSH_CONST 4 
VBC3_PUSH_CONST 3993 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:136] ;sfPoseGroup( 512 , 3225, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC3_PUSH_CONST 512 
VBC3_PUSH_CONST 3225 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:137] ;sfPoseGroup( 128 , 0, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC3_PUSH_CONST 128 
VBC1_PUSH_0 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:138] ;sfWaitFrame( frameCount );
VBC2_PUSH_CONST 56  //func address sfWaitFrame
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL1
VBC1_STACK_UP2//remove result, call address and params
[1:141] ;
VBC1_RETURN
;page8 <void()>
[1:142] ;frameCount = 100;
VBC2_PUSH_CONST 5 //frameCount
VBC2_PUSH_CONST 100 
VBC1_POP
[1:143] ;sfPoseGroup( 64 , 0, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC2_PUSH_CONST 64 
VBC1_PUSH_0 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:144] ;sfPoseGroup( 16 , 0, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC2_PUSH_CONST 16 
VBC1_PUSH_0 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:145] ;sfPoseGroup( 4 , 0, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC2_PUSH_CONST 4 
VBC1_PUSH_0 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:146] ;sfPoseGroup( 512 , 1689, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC3_PUSH_CONST 512 
VBC3_PUSH_CONST 1689 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:147] ;sfPoseGroup( 8 , 3072, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC2_PUSH_CONST 8 
VBC3_PUSH_CONST 3072 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:148] ;sfWaitFrame( frameCount );
VBC2_PUSH_CONST 56  //func address sfWaitFrame
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL1
VBC1_STACK_UP2//remove result, call address and params
[1:151] ;
VBC1_RETURN
;page9 <void()>
[1:152] ;frameCount = 100;
VBC2_PUSH_CONST 5 //frameCount
VBC2_PUSH_CONST 100 
VBC1_POP
[1:153] ;sfPoseGroup( 512 , 665, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC3_PUSH_CONST 512 
VBC3_PUSH_CONST 665 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:154] ;sfPoseGroup( 8 , 4096, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC2_PUSH_CONST 8 
VBC3_PUSH_CONST 4096 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:155] ;sfWaitFrame( frameCount );
VBC2_PUSH_CONST 56  //func address sfWaitFrame
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL1
VBC1_STACK_UP2//remove result, call address and params
[1:158] ;
VBC1_RETURN
;page10 <void()>
[1:159] ;frameCount = 200;
VBC2_PUSH_CONST 5 //frameCount
VBC3_PUSH_CONST 200 
VBC1_POP
[1:160] ;sfPoseGroup( 32 , 3840, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC2_PUSH_CONST 32 
VBC3_PUSH_CONST 3840 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:161] ;sfWaitFrame( frameCount );
VBC2_PUSH_CONST 56  //func address sfWaitFrame
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL1
VBC1_STACK_UP2//remove result, call address and params
[1:164] ;
VBC1_RETURN
;page11 <void()>
[1:165] ;frameCount = 200;
VBC2_PUSH_CONST 5 //frameCount
VBC3_PUSH_CONST 200 
VBC1_POP
[1:166] ;sfPoseGroup( 512 , 537, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC3_PUSH_CONST 512 
VBC3_PUSH_CONST 537 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:167] ;sfPoseGroup( 32 , 7219, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC2_PUSH_CONST 32 
VBC3_PUSH_CONST 7219 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:168] ;sfWaitFrame( frameCount );
VBC2_PUSH_CONST 56  //func address sfWaitFrame
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL1
VBC1_STACK_UP2//remove result, call address and params
[1:171] ;
VBC1_RETURN
;shiftRight <void()>
[1:172] ;sfQuaternionToEulerImu();
VBC5_PUSH_CONST 303 | 0x80000000 //import func index sfQuaternionToEulerImu
VBC1_CALL0
VBC1_STACK_UP1//remove result, call address and params
[1:173] ;rotation = (direction - svEulerYaw) * 2607.594587 ;
VBC2_PUSH_CONST 6 //rotation
VBC3_PUSH_GLOBAL 7 //direction
VBC3_PUSH_GLOBAL 1024 //svEulerYaw
VBC1_SUB_FF
VBC5_PUSH_CONST 1159920003 
VBC1_MUL_FF
VBC1_POP_CI
[1:176] ;frameCount = 3;
VBC2_PUSH_CONST 5 //frameCount
VBC2_PUSH_CONST 3 
VBC1_POP
[1:178] ;sfWaitFrame( frameCount );
VBC2_PUSH_CONST 56  //func address sfWaitFrame
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL1
VBC1_STACK_UP2//remove result, call address and params
[1:180] ;frameCount = 3;
VBC2_PUSH_CONST 5 //frameCount
VBC2_PUSH_CONST 3 
VBC1_POP
[1:181] ;sfPoseGroup( 1048576 , 1103, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC4_PUSH_CONST 1048576 
VBC3_PUSH_CONST 1103 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:182] ;sfPoseGroup( 1024 , rotation, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC3_PUSH_CONST 1024 
VBC3_PUSH_GLOBAL 6 //rotation
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:183] ;sfPoseGroup( 32768 , 0, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC4_PUSH_CONST 32768 
VBC1_PUSH_0 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:184] ;sfPoseGroup( 2097152 , -1000, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC4_PUSH_CONST 2097152 
VBC3_PUSH_CONST -1000 // -
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:186] ;sfWaitFrame( frameCount );
VBC2_PUSH_CONST 56  //func address sfWaitFrame
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL1
VBC1_STACK_UP2//remove result, call address and params
[1:188] ;frameCount = 3;
VBC2_PUSH_CONST 5 //frameCount
VBC2_PUSH_CONST 3 
VBC1_POP
[1:189] ;sfPoseGroup( 1048576 , 0, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC4_PUSH_CONST 1048576 
VBC1_PUSH_0 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:190] ;sfPoseGroup( 2097152 , 0, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC4_PUSH_CONST 2097152 
VBC1_PUSH_0 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:191] ;sfPoseGroup( 1024 , 0, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC3_PUSH_CONST 1024 
VBC1_PUSH_0 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:192] ;sfPoseGroup( 32768 , 0, frameCount );
VBC5_PUSH_CONST 51 | 0x80000000 //import func index sfPoseGroup
VBC4_PUSH_CONST 32768 
VBC1_PUSH_0 
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL3
VBC1_STACK_UP4//remove result, call address and params
[1:193] ;sfWaitFrame( frameCount );
VBC2_PUSH_CONST 56  //func address sfWaitFrame
VBC3_PUSH_GLOBAL 5 //frameCount
VBC1_CALL1
VBC1_STACK_UP2//remove result, call address and params
[1:197] ;
VBC1_RETURN
;main <void()>
VBC1_STACK_DN1//local vars 1
[1:198] ;
[1:199] ;pitStop = 0;
VBC1_PUSH_2 //pitStop
VBC1_PUSH_0 
VBC1_POP
[1:200] ;clamping = -50;
VBC2_PUSH_CONST 3 //clamping
VBC2_PUSH_CONST -50 // -
VBC1_POP
[1:201] ;steps = 17;
VBC2_PUSH_CONST 4 //steps
VBC2_PUSH_CONST 17 
VBC1_POP
[1:202] ;sfQuaternionToEulerImu();
VBC5_PUSH_CONST 303 | 0x80000000 //import func index sfQuaternionToEulerImu
VBC1_CALL0
VBC1_STACK_UP1//remove result, call address and params
[1:203] ;direction = svEulerYaw;
VBC2_PUSH_CONST 7 //direction
VBC3_PUSH_GLOBAL 1024 //svEulerYaw
VBC1_POP
[1:205] ;page0();
VBC2_PUSH_CONST 70  //func address page0
VBC1_CALL0
VBC1_STACK_UP1//remove result, call address and params
[1:206] ;page1();
VBC3_PUSH_CONST 318  //func address page1
VBC1_CALL0
VBC1_STACK_UP1//remove result, call address and params
[1:207] ;page2();
VBC3_PUSH_CONST 498  //func address page2
VBC1_CALL0
VBC1_STACK_UP1//remove result, call address and params
[1:208] ;page3();
VBC3_PUSH_CONST 612  //func address page3
VBC1_CALL0
VBC1_STACK_UP1//remove result, call address and params
[1:209] ;for ( i = 0; i < steps; i++ ) shiftRight();
VBC2_PUSH_B_OFFSET -1 //i
VBC1_PUSH_0 
VBC1_POP
LAB1767: //for condition
VBC2_PUSH_LOCAL -1 //i
VBC3_PUSH_GLOBAL 4 //steps
VBC1_LESS
VBC4_FALSE_JUMP LAB1789 //to for exit
;for ( i = 0; i < steps; i++ ) shiftRight();
VBC3_PUSH_CONST 1533  //func address shiftRight
VBC1_CALL0
VBC1_STACK_UP1//remove result, call address and params
LAB1782: //for step
VBC2_PUSH_B_OFFSET -1 //i
VBC1_INC
VBC4_JUMP LAB1767 //to condition
LAB1789: //for exit
[1:210] ;page3_1();
VBC3_PUSH_CONST 741  //func address page3_1
VBC1_CALL0
VBC1_STACK_UP1//remove result, call address and params
[1:211] ;page4();
VBC3_PUSH_CONST 889  //func address page4
VBC1_CALL0
VBC1_STACK_UP1//remove result, call address and params
[1:212] ;page5();
VBC3_PUSH_CONST 994  //func address page5
VBC1_CALL0
VBC1_STACK_UP1//remove result, call address and params
[1:213] ;page6();
VBC3_PUSH_CONST 1100  //func address page6
VBC1_CALL0
VBC1_STACK_UP1//remove result, call address and params
[1:214] ;page7();
VBC3_PUSH_CONST 1245  //func address page7
VBC1_CALL0
VBC1_STACK_UP1//remove result, call address and params
[1:215] ;page8();
VBC3_PUSH_CONST 1332  //func address page8
VBC1_CALL0
VBC1_STACK_UP1//remove result, call address and params
[1:216] ;page9();
VBC3_PUSH_CONST 1415  //func address page9
VBC1_CALL0
VBC1_STACK_UP1//remove result, call address and params
[1:217] ;page10();
VBC3_PUSH_CONST 1459  //func address page10
VBC1_CALL0
VBC1_STACK_UP1//remove result, call address and params
[1:218] ;page11();
VBC3_PUSH_CONST 1488  //func address page11
VBC1_CALL0
VBC1_STACK_UP1//remove result, call address and params
[1:221] ;
VBC1_RETURN
//Init table
//Variables
svFrameCount : 1
svImuAccX : 1000
svImuAccY : 1001
svImuAccZ : 1002
svImuAccRawX : 1003
svImuAccRawY : 1004
svImuAccRawZ : 1005
svImuGyroX : 1006
svImuGyroY : 1007
svImuGyroZ : 1008
svImuGyroRawX : 1009
svImuGyroRawY : 1010
svImuGyroRawZ : 1011
svImuQuaterX : 1012
svImuQuaterY : 1013
svImuQuaterZ : 1014
svImuQuaterW : 1015
svImuQuaterAcc : 1016
svImuAccSlowX : 1017
svImuAccSlowY : 1018
svImuAccSlowZ : 1019
svAdc : 1020
svButtonLeft : 1021
svButtonRight : 1022
svHeadControlMask : 1023
svEulerYaw F: 1024
svEulerPitch F: 1025
svEulerRoll F: 1026
svRemoteStatus : 1190
svRemoteButton : 1191
svRemoteLeftJoystick : 1192
svRemoteLeftJoystickX : 1193
svRemoteLeftJoystickY : 1194
svRemoteRightJoystick : 1195
svRemoteRightJoystickX : 1196
svRemoteRightJoystickY : 1197
svHumoModelDistPelvic : 1204
svHumoModelLengthPelvicHip : 1205
svHumoModelLengthHipHip : 1206
svHumoModelLengthHipKnee : 1207
svHumoModelLengthKneeFoot : 1208
svHumoModelLengthFootFoot : 1209
svHumoModelDistFootFloor : 1210
svHumoModelFootLength : 1211
svHumoModelFootWidth : 1212
svHumoModelFootCenterBack : 1213
svHumoModelFootCenterInner : 1214
svHumoModelAngPelvic : 1198
svHumoModelAngHipSide : 1200
svHumoModelAngHip : 1199
svHumoModelAngKnee : 1201
svHumoModelAngFoot : 1202
svHumoModelAngFootSide : 1203
svIkA5 F: 1215
svIkB5 F: 1216
svIkC5 F: 1217
svIkA6 F: 1218
svIkA7 F: 1219
svIkA8 F: 1220
svIkA9 F: 1221
svIkA10 F: 1222
svIkB10 F: 1223
svIkC10 F: 1224
svIkLimA5min F: 1225
svIkLimA5max F: 1226
svIkLimA6min F: 1227
svIkLimA6max F: 1228
svIkLimA7min F: 1229
svIkLimA7max F: 1230
svIkLimA8min F: 1231
svIkLimA8max F: 1232
svIkLimA9min F: 1233
svIkLimA9max F: 1234
svIkLimA10min F: 1235
svIkLimA10max F: 1236
svIkOutPresent : 1237
svIkEncA5 : 1238
svIkEncA6 : 1239
svIkEncA7 : 1240
svIkEncA8 : 1241
svIkEncA9 : 1242
svIkEncA10 : 1243
headRotateTarget : 1030
headRotateCurrent : 1031
headRotatePwm : 1032
headRotateAddonMix : 1033
torsoRotateTarget : 1034
torsoRotateCurrent : 1035
torsoRotatePwm : 1036
torsoRotateAddonMix : 1037
rightClavicleTarget : 1038
rightClavicleCurrent : 1039
rightClaviclePwm : 1040
rightClavicleAddonMix : 1041
leftClavicleTarget : 1042
leftClavicleCurrent : 1043
leftClaviclePwm : 1044
leftClavicleAddonMix : 1045
rightShoulderTarget : 1046
rightShoulderCurrent : 1047
rightShoulderPwm : 1048
rightShoulderAddonMix : 1049
leftShoulderTarget : 1050
leftShoulderCurrent : 1051
leftShoulderPwm : 1052
leftShoulderAddonMix : 1053
rightElbowSideTarget : 1054
rightElbowSideCurrent : 1055
rightElbowSidePwm : 1056
rightElbowSideAddonMix : 1057
leftElbowSideTarget : 1058
leftElbowSideCurrent : 1059
leftElbowSidePwm : 1060
leftElbowSideAddonMix : 1061
rightElbowTarget : 1062
rightElbowCurrent : 1063
rightElbowPwm : 1064
rightElbowAddonMix : 1065
leftElbowTarget : 1066
leftElbowCurrent : 1067
leftElbowPwm : 1068
leftElbowAddonMix : 1069
rightPelvicTarget : 1070
rightPelvicCurrent : 1071
rightPelvicPwm : 1072
rightPelvicAddonMix : 1073
leftPelvicTarget : 1074
leftPelvicCurrent : 1075
leftPelvicPwm : 1076
leftPelvicAddonMix : 1077
rightHipSideTarget : 1078
rightHipSideCurrent : 1079
rightHipSidePwm : 1080
rightHipSideAddonMix : 1081
leftHipSideTarget : 1082
leftHipSideCurrent : 1083
leftHipSidePwm : 1084
leftHipSideAddonMix : 1085
rightHipTarget : 1086
rightHipCurrent : 1087
rightHipPwm : 1088
rightHipAddonMix : 1089
leftHipTarget : 1090
leftHipCurrent : 1091
leftHipPwm : 1092
leftHipAddonMix : 1093
rightKneeTarget : 1094
rightKneeCurrent : 1095
rightKneePwm : 1096
rightKneeAddonMix : 1097
leftKneeTarget : 1098
leftKneeCurrent : 1099
leftKneePwm : 1100
leftKneeAddonMix : 1101
rightFootFrontTarget : 1102
rightFootFrontCurrent : 1103
rightFootFrontPwm : 1104
rightFootFrontAddonMix : 1105
leftFootFrontTarget : 1106
leftFootFrontCurrent : 1107
leftFootFrontPwm : 1108
leftFootFrontAddonMix : 1109
rightFootSideTarget : 1110
rightFootSideCurrent : 1111
rightFootSidePwm : 1112
rightFootSideAddonMix : 1113
leftFootSideTarget : 1114
leftFootSideCurrent : 1115
leftFootSidePwm : 1116
leftFootSideAddonMix : 1117
rightHandTarget : 1118
rightHandCurrent : 1119
rightHandPwm : 1120
rightHandAddonMix : 1121
leftHandTarget : 1122
leftHandCurrent : 1123
leftHandPwm : 1124
leftHandAddonMix : 1125
headTiltTarget : 1130
headTiltCurrent : 1131
headTiltPwm : 1132
headTiltAddonMix : 1133
rightKneeBotTarget : 1134
rightKneeBotCurrent : 1135
rightKneeBotPwm : 1136
rightKneeBotAddonMix : 1137
leftKneeBotTarget : 1138
leftKneeBotCurrent : 1139
leftKneeBotPwm : 1140
leftKneeBotAddonMix : 1141
rightClawTarget : 1142
rightClawCurrent : 1143
rightClawPwm : 1144
rightClawAddonMix : 1145
leftClawTarget : 1146
leftClawCurrent : 1147
leftClawPwm : 1148
leftClawAddonMix : 1149
pitStop : 2
clamping : 3
steps : 4
frameCount : 5
rotation : 6
direction F: 7
